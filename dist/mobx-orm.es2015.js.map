{"version":3,"file":"mobx-orm.es2015.js","sources":["../src/filters/Filter.ts","../src/filters/SingleFilter.ts","../src/filters/ComboFilter.ts","../src/filters/EQ.ts","../src/filters/NOT_EQ.ts","../src/filters/IN.ts","../src/filters/AND.ts","../src/queries/query-base.ts","../src/queries/query.ts","../src/queries/query-page.ts","../src/model.ts","../src/fields/field.ts","../src/fields/foreign.ts","../src/fields/one.ts","../src/fields/many.ts","../src/adapters/adapter.ts","../src/adapters/local.ts"],"sourcesContent":["export abstract class Filter {\n    abstract get URLSearchParams() : URLSearchParams\n    abstract setFromURI(uri: string) : void\n    abstract isMatch(obj: any) : boolean\n}\n","import { action, makeObservable, observable } from \"mobx\"\nimport { Model } from \"../model\"\nimport { Query } from \"../queries\" \nimport { Filter } from \"./Filter\"\n\n\n// Note: any type can be === null\nexport enum ValueType {\n    STRING,\n    NUMBER,\n    BOOL\n}\n\nexport abstract class SingleFilter extends Filter {\n    readonly    field       : string\n    @observable value       : any // string|number|boolean|null|undefined|Array<any>\n    readonly    value_type  : ValueType \n                options     : Query<Model> // use it for UI when we need to show options for select\n\n    constructor(field: string, value?: any, value_type?: ValueType) {\n        super()\n        this.field = field\n        // auto detect type if type was not provided\n        if (value_type === undefined) {\n            switch (typeof value) {\n                case 'number':\n                    this.value_type = ValueType.NUMBER\n                    break\n                case 'boolean':\n                    this.value_type = ValueType.BOOL\n                    break\n                default:\n                    this.value_type = ValueType.STRING\n            }\n        }\n        else {\n            this.value_type = value_type\n        }\n        this.value = value\n        makeObservable(this)\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        let value = this.deserialize() \n        value !== undefined && search_params.set(this.URIField, value)\n        return search_params\n    }\n\n    abstract get URIField() : string\n\n    @action('MO: Filter - set from URI')\n    setFromURI(uri: string) {\n        const search_params = new URLSearchParams(uri)\n        const field_name    = this.URIField\n        const value         = search_params.has(field_name) ? search_params.get(field_name) : undefined\n        this.serialize(value)\n    }\n\n    abstract operator(value_a, value_b) : boolean\n\n    isMatch(obj: any): boolean {\n        // it's always match if value of filter is undefined\n        if (this.value === undefined)\n            return true\n\n        return match(obj, this.field, this.value, this.operator)\n    }\n\n    // convert from string\n    serialize(value: string|undefined) : void {\n        let result \n        if (value === undefined) { \n            this.value = undefined\n            return\n        }\n        if (value === 'null') {\n            this.value = null\n            return\n        } \n        switch (this.value_type) {\n            case ValueType.STRING:\n                result = value\n                break\n            case ValueType.NUMBER:\n                result = parseInt(value)\n                if (isNaN(result)) result = undefined\n                break\n            case ValueType.BOOL:\n                // I'm not shure that it is string\n                result = value === 'true' ? true : value === 'false' ? false : undefined\n                break\n        }\n        this.value = result \n    }\n\n    // convert to string\n    deserialize(value?) : string {\n        if (value === undefined) {\n            value = this.value\n        }\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        switch (this.value_type) {\n            case ValueType.STRING:\n                return ''+value\n            case ValueType.NUMBER:\n                if (isNaN(value as any) || value===true || value===false) {\n                    return undefined\n                }\n                else {\n                    return ''+value\n                }\n            case ValueType.BOOL:\n                // I'm not shure that it is string\n                return !!value ? 'true' : 'false' \n        }\n    }\n}\n\n\nexport function match(obj: any, field_name: string, filter_value: any, operator: (value_a, value_b) => boolean): boolean {\n    let field_names = field_name.split('__')\n    let current_field_name = field_names[0]\n    let current_value = obj[current_field_name]\n\n         if (field_names.length === 1) return operator(current_value, filter_value)\n    else if (field_names.length   > 1) {\n        let next_field_name = field_name.substring(field_names[0].length+2)\n        // we have object relation\n        if (typeof current_value === 'object' && current_value !== null) {\n            if (Array.isArray(current_value)) {\n                let result = false\n                for(const item of current_value) {\n                    result = match(item, next_field_name, filter_value, operator)\n                    if (result) return result\n                }\n            }\n            else {\n                return match(current_value, next_field_name, filter_value, operator)\n            }\n        }\n    }\n    return false\n}\n","import { Filter } from \"./Filter\"\n\n\nexport abstract class ComboFilter extends Filter {\n    readonly filters: Filter[]\n\n    constructor(filters?: Filter[]) {\n        super()\n        this.filters = filters\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        for(let filter of this.filters) {\n            filter.URLSearchParams.forEach((value, key) => search_params.set(key, value))\n        }\n        return search_params\n    }\n\n    setFromURI(uri: string) {\n        for(let filter of this.filters) {\n            filter.setFromURI(uri) \n        }\n    }\n}\n","import { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class EQ_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__eq` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a === value_b\n    }\n}\n\nexport function EQ(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new EQ_Filter(field, value, value_type)\n}\n","import { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class NOT_EQ_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__not_eq` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a !== value_b\n        \n    }\n}\n\nexport function NOT_EQ(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new NOT_EQ_Filter(field, value, value_type)\n}\n","import { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class IN_Filter extends SingleFilter {\n\n    constructor(field: string, value?: any, value_type?: ValueType) {\n        if (value === undefined) {\n            value = []\n        }\n        super(field, value, value_type)\n    }\n\n    serialize(value: string|undefined) : void {\n        if (value === undefined) {\n            this.value = [] \n            return\n        }\n        let result = [] \n        for (const i of value.split(',')) {\n            super.serialize(i)\n            if (this.value !== undefined) {\n                result.push(this.value)\n            }\n        }\n        this.value = result \n    }\n\n    deserialize() : string {\n        let result = [] \n        for (const i of this.value) {\n            let v = super.deserialize(i) \n            if (v !== undefined) {\n                result.push(v)\n            }\n        }\n        return result.length ? result.join(',') : undefined\n    }\n\n    get URIField(): string {\n        return `${this.field}__in`\n    }\n\n    operator(value_a, value_b): boolean {\n        // it's always match if value of filter is empty []\n        if (value_b.length === 0) return true\n\n        for (let v of value_b) {\n            if (v === value_a) return true\n        }\n        return false\n    }\n\n}\n\nexport function IN(field: string, value?: any[], value_type?: ValueType) : SingleFilter { \n    return new IN_Filter(field, value, value_type)\n}\n","import { ComboFilter } from \"./ComboFilter\"\nimport { Filter } from \"./Filter\"\n\n\nexport class AND_Filter extends ComboFilter {\n\n    isMatch(obj: any) : boolean {\n        for(let filter of this.filters) {\n            if (!filter.isMatch(obj)) {\n                return false\n            }\n        }\n        return true \n    }\n}\n\nexport function AND(...filters: Filter[]) : Filter { return new AND_Filter(filters) }\n","import { action, autorun, makeObservable, observable, reaction, runInAction } from \"mobx\"\nimport { Adapter } from \"../adapters\"\nimport { Model } from \"../model\"\nimport { Filter } from '../filters'\nimport { Selector } from \"@/types\"\n\nexport const ASC = true \nexport const DESC = false \nexport type ORDER_BY = Map<string, boolean>\n\n\nexport abstract class QueryBase<M extends Model> {\n\n    @observable filters     : Filter\n    @observable order_by    : ORDER_BY \n    @observable fields     ?: Array<string> \n    @observable omit       ?: Array<string> \n    @observable relations  ?: Array<string> \n\n    // I cannot declare these observables directly into QueryPage\n    @observable offset      : number\n    @observable limit       : number\n    @observable total       : number\n\n    @observable need_to_update: boolean = false // set to true then filters/order_by/page/page_size was changed and back to false after load\n\n    get is_loading () { return this.__is_loading  }\n    get is_ready   () { return this.__is_ready    }\n    get error      () { return this.__error       }\n    \n\treadonly __base_cache: any\n\treadonly __adapter: Adapter<M>\n    @observable __items: M[] = []\n    @observable __is_loading  : boolean = false \n    @observable __is_ready    : boolean = false \n    @observable __error       : string = '' \n\n    __disposers         : (()=>void)[] = []\n    __disposer_objects  : {[field: string]: ()=>void} = {}\n\n    constructor(adapter: Adapter<M>, base_cache: any, selector?: Selector) {\n\t\tthis.__base_cache = base_cache\n\t\tthis.__adapter    = adapter\n        this.filters      = selector?.filter\n        this.order_by     = selector?.order_by  || new Map()\n        this.fields       = selector?.fields    || []\n        this.omit         = selector?.omit      || []\n        this.relations    = selector?.relations || []\n        makeObservable(this)\n\n        this.__disposers.push(reaction(\n            () => { return { \n                filter  : this.filters?.URLSearchParams.toString(), \n                order_by: Array.from(this.order_by, ([name, value]) => ([ name, value ])), \n                // order_by: this.order_by, \n                offset  : this.offset, \n                limit   : this.limit,\n             }},\n            action('MO: Query Base - need to update', () => this.need_to_update = true ),\n            {fireImmediately: true}\n        ))\n    }\n\n    destroy() {\n        while(this.__disposers.length) {\n            this.__disposers.pop()()\n        }\n        for(let __id in this.__disposer_objects) {\n            this.__disposer_objects[__id]()\n            delete this.__disposer_objects[__id]\n        } \n    }\n\n    abstract get items()\n    abstract __load(objs: M[])\n    // use it if nobody should know that you load data for the query\n    // for example you need to update the current data on the page and you don't want to show a spinner\n    abstract shadowLoad()\n\n    // use it if everybody should know that the query data is updating\n    @action('MO: Query Base - load')\n    async load() {\n        this.__is_loading = true\n        try {\n            await this.shadowLoad()\n        }\n        finally {\n            // we have to wait a next tick before set __is_loading to true, mobx recalculation should be done before\n            await new Promise(resolve => setTimeout(resolve))\n            runInAction(() => this.__is_loading = false)\n        }\n    }\n\n    get autoupdate() {\n        // TODO: move the name of disposer to const\n        return !! this.__disposer_objects['__autoupdate']\n    }\n    set autoupdate(value: boolean) {\n        if (value !== this.autoupdate) {\n            // off\n            if (!value) {\n                this.__disposer_objects['__autoupdate']()\n                delete this.__disposer_objects['__autoupdate']\n            }\n            // on \n            else {\n                this.__disposer_objects['__autoupdate'] = reaction(\n                    () => this.need_to_update,\n                    (need_to_update) => {\n                        if (need_to_update) this.load()\n                    },\n                    { fireImmediately: true }\n                )\n            }\n        }\n    }\n\n    get selector(): Selector {\n        return {\n            filter      : this.filters,\n            order_by    : this.order_by,\n            fields      : this.fields,\n            omit        : this.omit,\n            relations   : this.relations,\n            offset      : this.offset,\n            limit       : this.limit\n        }\n    }\n\n    // use it if you need use promise instead of observe is_ready\n    ready(): Promise<Boolean> {\n        return new Promise((resolve, reject) => { \n            autorun((reaction) => {\n                if (this.__is_ready) {\n                    reaction.dispose()\n                    resolve(this.__is_ready) \n                }\n            })\n        })\n    }\n\n    // use it if you need use promise instead of observe is_loading\n    loading(): Promise<Boolean> {\n        return new Promise((resolve, reject) => { \n            autorun((reaction) => {\n                if (!this.__is_loading) {\n                    reaction.dispose()\n                    resolve(!this.__is_loading) \n                }\n            })\n        })\n    }\n}\n","import { action, runInAction, computed, observe, reaction } from 'mobx'\nimport { Model } from '../model'\nimport { Adapter } from '../adapters'\nimport { QueryBase, ASC } from './query-base'\nimport { Selector } from '@/types'\n\n\nexport class Query<M extends Model> extends QueryBase<M> {\n\n    constructor(adapter: Adapter<M>, base_cache: any, selector?: Selector) {\n        super(adapter, base_cache, selector)\n\n        // watch the cache for changes, and update items if needed\n        this.__disposers.push(observe(this.__base_cache, \n            action('MO: Query - update from cache changes',\n            (change: any) => {\n                if (change.type == 'add') {\n                    this.__watch_obj(change.newValue)\n                }\n                if (change.type == \"delete\") {\n                    let id = change.name\n                    let obj  = change.oldValue\n\n                    this.__disposer_objects[id]()\n                    delete this.__disposer_objects[id]\n\n                    let i = this.__items.indexOf(obj)\n                    if (i != -1)\n                        this.__items.splice(i, 1)\n                }\n            })\n        ))\n\n        // ch all exist objects of model \n        for(let [id, obj] of this.__base_cache) {\n            this.__watch_obj(obj)\n        }\n    }\n\n    @action('MO: Query Base - shadow load')\n    async shadowLoad() {\n        try {\n            let objs = await this.__adapter.load(this.selector)\n            this.__load(objs)\n            // we have to wait a next tick before set __is_ready to true, mobx recalculation should be done before\n            await new Promise(resolve => setTimeout(resolve))\n            runInAction(() => {\n                this.__is_ready = true\n                this.need_to_update = false \n            })\n        }\n        catch(e) {\n            // 'MO: Query Base - shadow load - error',\n            runInAction( () => this.__error = e)\n            throw e\n        }\n    }\n\n    @computed\n    get items() { \n        let __items = this.__items.map(x=>x) // copy __items (not deep)\n        if (this.order_by.size) {\n            let compare = (a, b) => {\n                for(const [key, value] of this.order_by) {\n                    if (value === ASC) {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return  1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return -1\n                        if (a[key] < b[key]) return -1\n                        if (a[key] > b[key]) return  1\n                    }\n                    else {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return -1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return  1\n                        if (a[key] < b[key]) return  1\n                        if (a[key] > b[key]) return -1\n                    }\n                }\n                return 0\n            }\n            __items.sort(compare)\n        }\n        return __items \n    }\n\n    __load(objs: M[]) {\n        // Query don't need to overide the items, query's items should be get only from the cache\n        // Query page have to use it only \n    }\n\n    __watch_obj(obj) {\n        if (this.__disposer_objects[obj.id]) this.__disposer_objects[obj.id]()\n        this.__disposer_objects[obj.id] = reaction(\n            () =>  !this.filters || this.filters.isMatch(obj),\n            action('MO: Query - obj was changed',\n            (should: boolean) => {\n                let i = this.__items.indexOf(obj)\n                // should be in the items and it is not in the items? add it to the items\n                if ( should && i == -1) this.__items.push(obj)\n                // should not be in the items and it is in the items? remove it from the items\n                if (!should && i != -1) this.__items.splice(i, 1)\n            }),\n            { fireImmediately: true }\n        )\n    }\n}\n","import { action, reaction, runInAction } from \"mobx\"\nimport { Model } from \"../model\"\nimport { Adapter } from \"../adapters\"\nimport { QueryBase } from './query-base'\nimport { Selector } from \"@/types\"\n\n\nexport class QueryPage<M extends Model> extends QueryBase<M> {\n\n    @action('MO: Query Page - load')\n    __load(objs: M[]) {\n        this.__items.splice(0, this.__items.length)\n        this.__items.push(...objs)\n    }\n\n    @action('MO: set page size') setPageSize(size: number) { this.limit = size; this.offset = 0 }\n    @action('MO: set page')   setPage(n: number) { this.offset = this.limit * n }\n    @action('MO: fisrt page') goToFirstPage() { this.offset = 0 }\n    @action('MO: prev page')  goToPrevPage () { this.offset = this.offset < this.limit ? 0 : this.offset - this.limit }\n    @action('MO: next page')  goToNextPage () { this.offset = this.offset + this.limit }\n    @action('MO: last page')  goToLastPage () { this.offset = Math.floor(this.total / this.limit) * this.limit }\n\n    get is_first_page() : boolean { return this.offset === 0 }\n    get is_last_page () : boolean { return this.offset + this.limit >= this.total }\n    get current_page()  : number  { return this.offset / this.limit }\n    get total_pages()   : number  { return Math.floor(this.total / this.limit) }\n\n    constructor(adapter: Adapter<M>, base_cache: any, selector?: Selector) {\n        super(adapter, base_cache, selector)\n        runInAction(() => {\n            this.offset = selector?.offset || 0   \n            this.limit  = selector?.limit  || 50 \n        })\n    }\n\n    get items() { return this.__items }\n\n    @action('MO: Query Base - shadow load')\n    async shadowLoad() {\n        try {\n            const objs = await this.__adapter.load(this.selector)\n            this.__load(objs)\n            const total = await this.__adapter.getTotalCount(this.filters)\n            runInAction(() => {\n                this.total = total\n                this.__is_ready = true\n                this.need_to_update = false \n            })\n        }\n        catch(e) {\n            // 'MO: Query Base - shadow load - error',\n            runInAction(() => this.__error = e)\n            throw e\n        }\n    }\n}\n","import { action, intercept, makeObservable, observable, observe } from 'mobx'\nimport { Adapter } from './adapters'\nimport { Query, QueryPage, ORDER_BY } from './queries'\nimport { Selector } from './types'\n\n\nexport type RawObject = any \nexport type RawData   = any \n\n\nexport abstract class Model {\n    // this static properties will be copied to real model in the model decorator\n    static __adapter  : Adapter<Model> \n    static __cache    : Map<number, Model>\n    // - fields\n    // - relations (not exist on outside)\n    static __fields       : {\n        [field_name: string]: {\n            decorator   : (obj: Model, field_name: string) => void,\n            settings    : any,\n            serialize   : any,\n            deserialize : any\n        }\n    }\n    // relateions is a list of field only foreign, one or many types\n    static __relations : {\n        [field_name: string]: {\n            decorator   : (obj: Model, field_name: string) => void,\n            settings    : any\n            // there is no serializer of deserializer because \n            // it is derivative and does not come from outside\n        }\n    }\n\n    // add obj to the cache\n    @action('MO: model - inject')\n    static inject(obj: Model) {\n        if (obj.id === undefined)                    \n            throw new Error(`Object should have id!`)\n        if (this.__cache.has(obj.id)) {\n            throw new Error(`Object with id ${obj.id} already exist in the cache of model: \"${this.prototype.constructor.name}\")`)\n        }\n        this.__cache.set(obj.id, obj)\n    }\n\n    // remove obj from the cache\n    @action('MO: model - eject')\n    static eject(obj: Model) {\n        if (this.__cache.has(obj.id)) \n            this.__cache.delete(obj.id)\n    }\n\n    static getQuery(selector?: Selector): Query<Model>  {\n        return new Query<Model>(this.__adapter, this.__cache, selector)\n    }\n\n    static getQueryPage(selector?: Selector): QueryPage<Model> {\n        return new QueryPage(this.__adapter, this.__cache, selector)\n    }\n\n    static get(id: number) {\n        return this.__cache.get(id)\n    }\n\n    static async find(selector: Selector) : Promise<Model> {\n        return this.__adapter.find(selector) \n    }\n\n    @action('MO: model - update the cache from raw')\n    static updateCache(raw_obj): Model {\n        let obj: Model\n        if (this.__cache.has(raw_obj.id)) {\n            obj = this.__cache.get(raw_obj.id)\n            obj.updateFromRaw(raw_obj)\n        }\n        else {\n            obj = new (<any>this)(raw_obj)\n        }\n        return obj\n    }\n\n    @action('MO: model - clear the cache')\n    static clearCache() {\n        // id = undefined is equal to remove obj from cache \n        for (let obj of this.__cache.values()) {\n            obj.id = undefined \n        }\n    }\n\n\n    @observable id: number|undefined = undefined\n\n    @observable __init_data: any   \n    __disposers = new Map()\n\n    constructor (...args) { }\n\n    get model() : any {\n        return (<any>this.constructor).__proto__\n    }\n\n    // data only from fields (no ids)\n    get raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.model.__fields) {\n            if(this[field_name] !== undefined) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    // it is raw_data + id\n    get raw_obj() : any {\n        let raw_obj: any = this.raw_data\n        raw_obj.id = this.id\n        return raw_obj\n    }\n    \n    get only_changed_raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.model.__fields) {\n            if(this[field_name] !== undefined && this[field_name] != this.__init_data[field_name]) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    get is_changed() : boolean {\n        let is_changed = false\n        for(let field_name in this.model.__fields) {\n            if (this[field_name] != this.__init_data[field_name]) {\n                is_changed = true\n            }\n        }\n        return is_changed \n    }\n\n    async create() { return await this.model.__adapter.create(this) }\n    async update() { return await this.model.__adapter.update(this) }\n    async delete() { return await this.model.__adapter.delete(this) }\n    async save  () { return this.id === undefined ? this.create() : this.update() }\n\n    @action('MO: obj - refresh init data')\n    refreshInitData() {\n        if(this.__init_data === undefined) this.__init_data = {}\n        for (let field_name in this.model.__fields) {\n            this.__init_data[field_name] = this[field_name]\n        }\n    }\n\n    // TODO: add test\n    @action('MO: obj - cancel local changes')\n    cancelLocalChanges() {\n        for (let field_name in this.model.__fields) {\n            if (this[field_name] !== this.__init_data[field_name]) {\n                this[field_name] = this.__init_data[field_name]\n            }\n        }\n    }\n\n    @action('MO: obj - update from raw')\n    updateFromRaw(raw_obj) {\n        if (this.id === undefined && raw_obj.id !== undefined) {\n            this.id = raw_obj.id\n        }\n        // update the fields if the raw data is exist and it is different \n        for(let field_name in this.model.__fields) {\n            if (raw_obj[field_name] !== undefined && raw_obj[field_name] !== this[field_name]) {\n                this[field_name] = raw_obj[field_name]\n            }\n        }\n\n        for(let relation in this.model.__relations) {\n            const settings = this.model.__relations[relation].settings\n            if (settings.foreign_model && raw_obj[relation]) {\n                settings.foreign_model.updateCache(raw_obj[relation])\n                this[settings.foreign_id_name] = raw_obj[relation].id\n            }\n            else if (settings.remote_model && raw_obj[relation]) {\n                // many\n                if (Array.isArray(raw_obj[relation])) {\n                    for(const i of raw_obj[relation]) {\n                        settings.remote_model.updateCache(i)\n                    }\n                }\n                // one \n                else {\n                    settings.remote_model.updateCache(raw_obj[relation])\n                }\n            }\n        }\n    }\n}\n\n\n// Decorator\nexport function model(constructor) {\n    var original = constructor\n\n    original.__cache = observable(new Map())\n\n    // the new constructor\n    let f : any = function (...args) {\n        let c : any = class extends original { constructor (...args) { super(...args) } }\n            c.__proto__ = original\n\n        let obj   = new c()\n        let model = obj.model\n        makeObservable(obj)\n\n        // id field reactions\n        obj.__disposers.set('before changes',\n            intercept(obj, 'id', (change) => {\n                if (change.newValue !== undefined && obj.id !== undefined)\n                    throw new Error(`You cannot change id field: ${obj.id} to ${change.newValue}`)\n                if (obj.id !== undefined && change.newValue === undefined)\n                    obj.model.eject(obj)\n                return change\n            }))\n        obj.__disposers.set('after changes',\n            observe(obj, 'id', (change) => {\n                if (obj.id !== undefined) \n                    obj.model.inject(obj)\n            }))\n\n        // apply fields decorators\n        for (let field_name in model.__fields) {\n            model.__fields[field_name].decorator(obj, field_name)\n        }\n        // apply __relations decorators\n        for (let field_name in model.__relations) {\n            model.__relations[field_name].decorator(obj, field_name)\n        }\n\n        if (args[0]) obj.updateFromRaw(args[0])\n        obj.refreshInitData()\n        return obj\n    }\n\n    f.__proto__ = original\n    f.prototype = original.prototype   // copy prototype so intanceof operator still works\n    Object.defineProperty(f, \"name\", { value: original.name });\n    return f                      // return new constructor (will override original)\n}\n","import { extendObservable } from 'mobx'\n\n\n\nexport function field_field(obj, field_name) {\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: obj[field_name] })\n}\n\n\nexport function field(cls, field_name: string) {\n    let model = cls.constructor\n    if (model.__fields === undefined) model.__fields = {}\n\n    model.__fields[field_name] = { decorator: field_field }  // register field \n}\n","import {extendObservable, reaction, action} from 'mobx'\n\n\nfunction field_foreign(obj, field_name) {\n    let settings = obj.model.__relations[field_name].settings\n    let foreign_model   = settings.foreign_model\n    let foreign_id_name = settings.foreign_id_name\n\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: undefined })\n\n    reaction(\n        // watch on foreign cache for foreign object\n        () => {\n            if (obj[foreign_id_name] === undefined) return undefined\n            if (obj[foreign_id_name] === null) return null \n            return foreign_model.__cache.get(obj[foreign_id_name])\n        },\n        // update foreign field\n        action('MO: Foreign - update',\n            (_new, _old) => obj[field_name] = _new \n        ),\n        {fireImmediately: true}\n    )\n}\n\nexport function foreign(foreign_model: any, foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // register field \n        model.__relations[field_name] = { \n            decorator: field_foreign,\n            settings: {\n                foreign_model: foreign_model,\n                // if it is empty then try auto detect it (it works only with single id) \n                foreign_id_name: foreign_id_name !== undefined ? foreign_id_name : `${field_name}_id`\n            } \n        } \n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model } from '../model'\n\n\nfunction field_one(obj: Model, field_name) {\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: undefined })\n}\n\nexport function one(remote_model: any, remote_foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id_name = remote_foreign_id_name !== undefined ? remote_foreign_id_name: `${model.name.toLowerCase()}_id`\n        model.__relations[field_name] = { \n            decorator: field_one,\n            settings: {\n                remote_model: remote_model,\n                remote_foreign_id_name: remote_foreign_id_name\n            } \n        } \n        const disposer_name = `MO: One - update - ${model.name}.${field_name}` \n\n        observe(remote_model.__cache, (change: any) => {\n            let remote_obj\n            switch (change.type) {\n                case 'add':\n                    remote_obj = change.newValue\n                    remote_obj.__disposers.set(disposer_name, reaction(\n                        () => { return { \n                            id: remote_obj[remote_foreign_id_name],\n                            obj: model.__cache.get(remote_obj[remote_foreign_id_name])}\n                        },\n                        action(disposer_name, (_new, _old) => {\n                            if (_old?.obj) _old.obj[field_name] = _new.id ? undefined : null\n                            if (_new?.obj) _new.obj[field_name] = remote_obj\n                        }),\n                        {fireImmediately: true}\n                    ))\n                    break\n                case 'delete':\n                    remote_obj = change.oldValue\n                    if (remote_obj.__disposers.get(disposer_name)) {\n                        remote_obj.__disposers.get(disposer_name)()\n                        remote_obj.__disposers.delete(disposer_name)\n                    }\n                    let obj =  model.__cache.get(remote_obj[remote_foreign_id_name])\n                    if (obj) \n                        runInAction(() => { obj[field_name] = undefined })\n                    break\n            }\n        })\n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model } from '../model'\n\n\nfunction field_many(obj: Model, field_name) {\n    extendObservable(obj, { [field_name]: [] })\n}\n\nexport function many(remote_model: any, remote_foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id_name = remote_foreign_id_name !== undefined ? remote_foreign_id_name: `${model.name.toLowerCase()}_id`\n        model.__relations[field_name] = { \n            decorator: field_many,\n            settings: {\n                remote_model: remote_model,\n                remote_foreign_id_name: remote_foreign_id_name\n            } \n        } \n        const disposer_name = `MO: Many - update - ${model.name}.${field_name}`\n        \n        // watch for remote object in the cache \n        observe(remote_model.__cache, (remote_change: any) => {\n            let remote_obj\n            switch (remote_change.type) {\n                case 'add':\n                    remote_obj = remote_change.newValue\n                    remote_obj.__disposers.set(disposer_name , reaction(\n                        () => model.__cache.get(remote_obj[remote_foreign_id_name]),\n                        action(disposer_name, (_new, _old) => {\n                            if (_old) {\n                                const i = _old[field_name].indexOf(remote_obj)\n                                if (i > -1)\n                                    _old[field_name].splice(i, 1)\n                            }\n                            if (_new) {\n                                const i = _new[field_name].indexOf(remote_obj)\n                                if (i === -1)\n                                    _new[field_name].push(remote_obj)\n                            } \n                        }),\n                        {fireImmediately: true}\n                    ))\n                    break\n                case 'delete':\n                    remote_obj = remote_change.oldValue\n                    if (remote_obj.__disposers.get(disposer_name)) {\n                        remote_obj.__disposers.get(disposer_name)()\n                        remote_obj.__disposers.delete(disposer_name)\n                    }\n                    let obj =  model.__cache.get(remote_obj[remote_foreign_id_name])\n                    if (obj) {\n                        const i = obj[field_name].indexOf(remote_obj)\n                        if (i > -1)\n                            runInAction(() => { obj[field_name].splice(i, 1); })\n                    } \n                    break\n            }\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model, RawObject, RawData } from '../model'\nimport { Selector } from '../types'\n\n\nexport abstract class  Adapter<M extends Model> {\n\n    abstract __create(raw_data: RawData): Promise<RawObject>\n    abstract __update(obj_id: number, only_changed_raw_data: RawData): Promise<RawObject>\n    abstract __delete(obj_id: number): Promise<void>\n    abstract __find(props: Selector): Promise<object>\n    abstract __load(props: Selector): Promise<RawObject[]>\n    abstract getTotalCount(where?): Promise<number>\n\n    readonly model: any\n\n    constructor(model: any) {\n        this.model = model \n    }\n\n    async create(obj: M) : Promise<M> {\n        let raw_obj = await this.__create(obj.raw_data)\n        obj.updateFromRaw(raw_obj)\n        obj.refreshInitData() // backend can return default values and they should be in __init_data\n        return obj\n    }\n\n    async update(obj: M) : Promise<M> {\n        let raw_obj = await this.__update(obj.id, obj.only_changed_raw_data)\n        obj.updateFromRaw(raw_obj)\n        obj.refreshInitData()\n        return obj\n    }\n\n    async delete(obj: M) : Promise<M> {\n        await this.__delete(obj.id)\n        runInAction(() => obj.id = undefined )\n        return obj\n    }\n\n    /* Returns ONE object */\n    async find(selector: Selector): Promise<M> {\n        let raw_obj = await this.__find(selector)\n        return this.model.updateCache(raw_obj)\n    }\n\n    /* Returns MANY objects */\n    async load(selector?: Selector):Promise<M[]> {\n        let raw_objs = await this.__load(selector)\n        let objs: M[] = []\n        // it should be happend in one big action\n        runInAction(() => {\n            for (let raw_obj of raw_objs) {\n                objs.push(this.model.updateCache(raw_obj))\n            }\n        })\n        return objs\n    }\n}\n","import { Selector } from '@/types'\nimport { Model, RawData, RawObject } from '../model'\nimport { Adapter }  from './adapter'\n\n/*\nYou can use this adapter for mock data or for unit test\n*/\n\n\nexport let local_store: {string?: {number: Model}} = {}\n\n\nfunction timeout(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nexport class LocalAdapter<M extends Model> extends Adapter<M> {\n\n    readonly store_name: string\n\n    // delays for simulate real usage, use it only for tests\n    delay: number \n\n    init_local_data(data: RawObject[]) {\n        let objs = {} \n        for(let obj of data) {\n            objs[obj.id] = obj\n        }\n        local_store[this.store_name] = objs\n    }\n\n    constructor(model: any, store_name?: string) {\n        super(model)\n        this.store_name = store_name ? store_name : model.__proto__.name\n        local_store[this.store_name] = {}\n    }\n\n    async __create(raw_data: RawData) : Promise<RawObject> {\n        if (this.delay) await timeout(this.delay) \n\n        // calculate and set new ID\n        let ids = [0]\n        for(let id of Object.keys(local_store[this.store_name])) {\n            ids.push(parseInt(id))\n        }\n        let max = Math.max.apply(null, ids)\n        raw_data.id = max + 1\n        local_store[this.store_name][raw_data.id] = raw_data\n        return raw_data as RawObject \n    }\n\n    async __update(obj_id: number, only_changed_raw_data: RawData) : Promise<RawObject> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = local_store[this.store_name][obj_id] \n        for(let field of Object.keys(only_changed_raw_data)) {\n            raw_obj[field] = only_changed_raw_data[field]\n        }\n        return raw_obj \n    }\n\n    async __delete(obj_id: number) : Promise<void> {\n        if (this.delay) await timeout(this.delay) \n        delete local_store[this.store_name][obj_id]\n    }\n\n    async __find(selector: Selector) : Promise<RawObject> {\n        if (this.delay) await timeout(this.delay) \n        // TODO: apply where, and throw error if no obj or multi objs\n        let raw_obj = Object.values(local_store[this.store_name])[0]\n        return raw_obj\n    }\n\n    async __load (selector?: Selector) : Promise<RawObject[]> {\n        const {filter, order_by, limit, offset} = selector || {}\n        if (this.delay) await timeout(this.delay) \n        let raw_objs = []\n\n        if (filter) {\n            for(let raw_obj of Object.values(local_store[this.store_name])) {\n\n            }\n        }\n        else {\n            raw_objs = Object.values(local_store[this.store_name])\n        }\n\n        // order_by (sort)\n        if (order_by) {\n            raw_objs = raw_objs.sort((obj_a, obj_b) => {\n                let res\n                for(let sort_by_field of order_by) {\n\n                }\n                return 0\n            })\n        }\n\n        // page\n        if (limit !== undefined && offset !== undefined) {\n            raw_objs = raw_objs.slice(offset, offset+limit)\n        }\n        return raw_objs \n    }\n\n    async getTotalCount(where?): Promise<number> {\n        return Object.values(local_store[this.store_name]).length\n    }\n}\n\n\n// model decorator\nexport function local() {\n    return (cls: any) => {\n        let adapter = new LocalAdapter(cls)\n        cls.__proto__.__adapter = adapter \n    }\n}\n\n// TODO: where example\n// let where = [\n//             [\"field_a\", \"==\", 10, \"and\", \"field_b == 20\"],\n//     \"or\",   [\"field_a\", \"<=\",  5, \"and\", \"field_b\", \"contain\", \"test\"]\n// ]\n"],"names":[],"mappings":"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"}
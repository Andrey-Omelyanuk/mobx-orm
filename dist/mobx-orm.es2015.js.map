{"version":3,"file":"mobx-orm.es2015.js","sources":["../src/filters/Filter.ts","../src/filters/SingleFilter.ts","../src/filters/ComboFilter.ts","../src/filters/EQ.ts","../src/filters/NOT_EQ.ts","../src/filters/GT.ts","../src/filters/GTE.ts","../src/filters/LT.ts","../src/filters/LTE.ts","../src/filters/IN.ts","../src/filters/LIKE.ts","../src/filters/ILIKE.ts","../src/filters/AND.ts","../src/queries/query-base.ts","../src/filters-x/Filter.ts","../src/inputs/Input.ts","../src/inputs/StringInput.ts","../src/inputs/NumberInput.ts","../src/inputs/BooleanInput.ts","../src/inputs/DateInput.ts","../src/inputs/DateTimeInput.ts","../src/inputs/ArrayInput.ts","../src/inputs/ArrayStringInput.ts","../src/inputs/ArrayNumberInput.ts","../src/inputs/auto-reset/autoResetId.ts","../src/inputs/auto-reset/autoResetArrayOfIDs.ts","../src/inputs/auto-reset/autoResetDefault.ts","../src/inputs/auto-reset/autoResetArrayToEmpty.ts","../src/filters-x/SingleFilter.ts","../src/filters-x/ComboFilter.ts","../src/filters-x/EQ.ts","../src/filters-x/NOT_EQ.ts","../src/filters-x/GT.ts","../src/filters-x/GTE.ts","../src/filters-x/LT.ts","../src/filters-x/LTE.ts","../src/filters-x/IN.ts","../src/filters-x/LIKE.ts","../src/filters-x/ILIKE.ts","../src/filters-x/AND.ts","../src/selector.ts","../src/queries/query.ts","../src/queries/query-page.ts","../src/utils.ts","../src/queries/query-x.ts","../src/config.ts","../src/queries/query-x-page.ts","../src/queries/query-x-cache-sync.ts","../src/queries/query-x-stream.ts","../src/queries/query-x-raw.ts","../src/queries/query-x-raw-page.ts","../src/queries/query-x-distinct.ts","../src/model.ts","../src/read-only-model.ts","../src/fields/field.ts","../src/fields/foreign.ts","../src/fields/one.ts","../src/fields/many.ts","../src/adapters/adapter.ts","../src/adapters/local.ts"],"sourcesContent":["export abstract class Filter {\n    abstract get URLSearchParams() : URLSearchParams\n    abstract setFromURI(uri: string) : void\n    abstract isMatch(obj: any) : boolean\n}\n","import { action, autorun, makeObservable, observable } from \"mobx\"\nimport { Model } from \"../model\"\nimport { Query } from \"../queries\" \nimport { Filter } from \"./Filter\"\n\n\n// Note: any type can be === null\nexport enum ValueType {\n    STRING,\n    NUMBER,\n    BOOL,\n    DATETIME,\n    DATE,\n}\n\nexport abstract class SingleFilter extends Filter {\n    readonly    field       : string\n    readonly    value_type  : ValueType \n    @observable value       : any // string|number|boolean|null|undefined|string[]|number[]\n                options    ?: Query<Model> \n\n    __disposers             : (()=>void)[] = []\n\n    constructor(\n        field: string,\n        value?: any,\n        value_type?: ValueType,\n        options?: Query<Model>,\n        // getDefaultValue?: (filter: SingleFilter) => any,\n        // localstorage_key?: string,\n        // sync_url?: boolean\n    ) {\n        super()\n        this.options = options\n        this.field = field\n        // auto detect type if type was not provided\n        if (value_type === undefined) {\n\n            switch (typeof value) {\n                case 'number':\n                    this.value_type = ValueType.NUMBER\n                    break\n                case 'boolean':\n                    this.value_type = ValueType.BOOL\n                    break\n                default:\n                    this.value_type = value instanceof Date ? ValueType.DATETIME : ValueType.STRING\n            }\n        }\n        else {\n            this.value_type = value_type\n        }\n        this.value = value\n        makeObservable(this)\n\n        // this.__disposers.push(autorun(() => {\n        //     if (this.value === undefined && getDefaultValue !== undefined) {\n        //         this.value = getDefaultValue(this)\n        //     }\n        // }\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        let value = this.deserialize() \n        value !== undefined && search_params.set(this.URIField, value)\n        return search_params\n    }\n\n    abstract get URIField() : string\n\n    @action('MO: Filter - set')\n    set(value: any) {\n        this.value = value\n    }\n\n    @action('MO: Filter - set from URI')\n    setFromURI(uri: string) {\n        const search_params = new URLSearchParams(uri)\n        const field_name    = this.URIField\n        const value         = search_params.has(field_name) ? search_params.get(field_name) : undefined\n        this.serialize(value)\n    }\n\n    abstract operator(value_a, value_b) : boolean\n    abstract alias(alias_field) : SingleFilter\n\n    isMatch(obj: any): boolean {\n        // it's always match if value of filter is undefined\n        if (this.value === undefined)\n            return true\n\n        return match(obj, this.field, this.value, this.operator)\n    }\n\n    // convert from string\n    serialize(value: string|undefined) : void {\n        let result \n        if (value === undefined) { \n            this.value = undefined\n            return\n        }\n        if (value === 'null') {\n            this.value = null\n            return\n        } \n        switch (this.value_type) {\n            case ValueType.STRING:\n                result = value\n                break\n            case ValueType.NUMBER:\n                result = parseInt(value)\n                if (isNaN(result)) result = undefined\n                break\n            case ValueType.BOOL:\n                // I'm not shure that it is string\n                result = value === 'true' ? true : value === 'false' ? false : undefined\n                break\n            case ValueType.DATE:\n            case ValueType.DATETIME:\n                result = new Date(value) \n                break\n        }\n        this.value = result \n    }\n\n    // convert to string\n    deserialize(value?) : string {\n        if (value === undefined) {\n            value = this.value\n        }\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        switch (this.value_type) {\n            case ValueType.STRING:\n                return ''+value\n            case ValueType.NUMBER:\n                if (isNaN(value as any) || value===true || value===false) {\n                    return undefined\n                }\n                else {\n                    return ''+value\n                }\n            case ValueType.BOOL:\n                // I'm not shure that it is string\n                return !!value ? 'true' : 'false' \n            case ValueType.DATE:\n                return value instanceof Date ? (value as Date).toISOString().split('T')[0] : \"\"\n            case ValueType.DATETIME:\n                return value instanceof Date ? (value as Date).toISOString() : \"\"\n        }\n    }\n}\n\n\nexport function match(obj: any, field_name: string, filter_value: any, operator: (value_a, value_b) => boolean): boolean {\n    let field_names = field_name.split('__')\n    let current_field_name = field_names[0]\n    let current_value = obj[current_field_name]\n\n         if (field_names.length === 1) return operator(current_value, filter_value)\n    else if (field_names.length   > 1) {\n        let next_field_name = field_name.substring(field_names[0].length+2)\n        // we have object relation\n        if (typeof current_value === 'object' && current_value !== null) {\n            if (Array.isArray(current_value)) {\n                let result = false\n                for(const item of current_value) {\n                    result = match(item, next_field_name, filter_value, operator)\n                    if (result) return result\n                }\n            }\n            else {\n                return match(current_value, next_field_name, filter_value, operator)\n            }\n        }\n    }\n    return false\n}\n","import { Filter } from \"./Filter\"\n\n\nexport abstract class ComboFilter extends Filter {\n    readonly filters: Filter[]\n\n    constructor(filters?: Filter[]) {\n        super()\n        this.filters = filters\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        for(let filter of this.filters) {\n            filter.URLSearchParams.forEach((value, key) => search_params.set(key, value))\n        }\n        return search_params\n    }\n\n    setFromURI(uri: string) {\n        for(let filter of this.filters) {\n            filter.setFromURI(uri) \n        }\n    }\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class EQ_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a === value_b\n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = EQ(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.value = value }, { fireImmediately: true })\n        return alias_filter\n    }\n}\n\n// EQV is a verbose version of EQ\nexport class EQV_Filter extends EQ_Filter {\n    get URIField(): string {\n        return `${this.field}__eq` \n    }\n}\n\nexport function EQ(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new EQ_Filter(field, value, value_type)\n}\n\nexport function EQV(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new EQV_Filter(field, value, value_type)\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class NOT_EQ_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__not_eq` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a !== value_b\n        \n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = NOT_EQ(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.value = value }, { fireImmediately: true })\n        return alias_filter\n    }\n}\n\nexport function NOT_EQ(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new NOT_EQ_Filter(field, value, value_type)\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class GT_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__gt` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a > value_b\n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = GT(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.value = value }, { fireImmediately: true })\n        return alias_filter\n    }\n}\n\nexport function GT(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new GT_Filter(field, value, value_type)\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class GTE_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__gte` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a >= value_b\n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = GTE(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.value = value }, { fireImmediately: true })\n        return alias_filter\n    }\n}\n\nexport function GTE(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new GTE_Filter(field, value, value_type)\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class LT_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__lt` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a < value_b\n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = LT(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.value = value }, { fireImmediately: true })\n        return alias_filter\n    }\n}\n\nexport function LT(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new LT_Filter(field, value, value_type)\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class LTE_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__lte` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a <= value_b\n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = LTE(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.value = value }, { fireImmediately: true })\n        return alias_filter\n    }\n}\n\nexport function LTE(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new LTE_Filter(field, value, value_type)\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class IN_Filter extends SingleFilter {\n\n    constructor(field: string, value?: any, value_type?: ValueType) {\n        if (value === undefined) {\n            value = []\n        }\n        super(field, value, value_type)\n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = IN(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.value = value }, { fireImmediately: true })\n        return alias_filter\n    }\n\n    serialize(value: string|undefined) : void {\n        if (value === undefined) {\n            this.value = [] \n            return\n        }\n        let result = [] \n        for (const i of value.split(',')) {\n            super.serialize(i)\n            if (this.value !== undefined) {\n                result.push(this.value)\n            }\n        }\n        this.value = result \n    }\n\n    deserialize() : string {\n        let result = [] \n        for (const i of this.value) {\n            let v = super.deserialize(i) \n            if (v !== undefined) {\n                result.push(v)\n            }\n        }\n        return result.length ? result.join(',') : undefined\n    }\n\n    get URIField(): string {\n        return `${this.field}__in`\n    }\n\n    operator(value_a, value_b): boolean {\n        // it's always match if value of filter is empty []\n        if (value_b.length === 0) return true\n\n        for (let v of value_b) {\n            if (v === value_a) return true\n        }\n        return false\n    }\n\n}\n\nexport function IN(field: string, value?: any[], value_type?: ValueType) : SingleFilter { \n    return new IN_Filter(field, value, value_type)\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class LIKE_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__contains` \n    }\n\n    operator(current_value: any, filter_value: any): boolean {\n        return current_value.includes(filter_value) \n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = LIKE(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.set(value) }, { fireImmediately: true })\n        return alias_filter\n    }\n}\n\nexport function LIKE(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new LIKE_Filter(field, value, value_type)\n}\n","import { reaction } from \"mobx\"\nimport { SingleFilter, ValueType } from \"./SingleFilter\"\n\n\nexport class ILIKE_Filter extends SingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__icontains` \n    }\n\n    operator(current_value: any, filter_value: any): boolean {\n        return current_value.toLowerCase().includes(filter_value.toLowerCase()) \n    }\n\n    alias(alias_field: any): SingleFilter {\n        const alias_filter = ILIKE(alias_field, this.value, this.value_type) \n        reaction(() => this.value, (value) => { alias_filter.set(value) }, { fireImmediately: true })\n        return alias_filter\n    }\n}\n\nexport function ILIKE(field: string, value?: any, value_type?: ValueType) : SingleFilter {\n    return new ILIKE_Filter(field, value, value_type)\n}\n","import { ComboFilter } from \"./ComboFilter\"\nimport { Filter } from \"./Filter\"\n\n\nexport class AND_Filter extends ComboFilter {\n\n    isMatch(obj: any) : boolean {\n        for(let filter of this.filters) {\n            if (!filter.isMatch(obj)) {\n                return false\n            }\n        }\n        return true \n    }\n}\n\nexport function AND(...filters: Filter[]) : Filter { return new AND_Filter(filters) }\n","import { action, autorun, makeObservable, observable, reaction, runInAction } from \"mobx\"\nimport { Adapter } from '../adapters'\nimport { Model } from '../model'\nimport { Filter } from '../filters'\nimport { Selector } from \"@/types\"\nimport { ORDER_BY } from \"../selector\"\n\n// Depricated\nexport abstract class QueryBase<M extends Model> {\n\n    @observable filters     : Filter\n    @observable order_by    : ORDER_BY \n    @observable fields     ?: Array<string> \n    @observable omit       ?: Array<string> \n    @observable relations  ?: Array<string> \n\n    // I cannot declare these observables directly into QueryPage\n    @observable offset      : number\n    @observable limit       : number\n    @observable total       : number = 0\n\n    @observable need_to_update: boolean = false // set to true then filters/order_by/page/page_size was changed and back to false after load\n\n    get is_loading () { return this.__is_loading  }\n    get is_ready   () { return this.__is_ready    }\n    get error      () { return this.__error       }\n    \n\treadonly __base_cache: any\n\treadonly __adapter: Adapter<M>\n    @observable __items: M[] = []\n    @observable __is_loading  : boolean = false \n    @observable __is_ready    : boolean = false \n    @observable __error       : string = '' \n\n    __disposers         : (()=>void)[] = []\n    __disposer_objects  : {[field: string]: ()=>void} = {}\n\n    constructor(adapter: Adapter<M>, base_cache: any, selector?: Selector) {\n\t\tthis.__base_cache = base_cache\n\t\tthis.__adapter    = adapter\n        this.filters      = selector?.filter\n        this.order_by     = selector?.order_by  || new Map()\n        this.fields       = selector?.fields    || []\n        this.omit         = selector?.omit      || []\n        this.relations    = selector?.relations || []\n        makeObservable(this)\n\n        this.__disposers.push(reaction(\n            () => { return { \n                filter  : this.filters?.URLSearchParams.toString(), \n                order_by: Array.from(this.order_by, ([name, value]) => ([ name, value ])), \n                // order_by: this.order_by, \n                offset  : this.offset, \n                limit   : this.limit,\n             }},\n            action('MO: Query Base - need to update', () => this.need_to_update = true ),\n            { fireImmediately: true, delay: 200 }\n        ))\n    }\n\n    destroy() {\n        while(this.__disposers.length) {\n            this.__disposers.pop()()\n        }\n        for(let __id in this.__disposer_objects) {\n            this.__disposer_objects[__id]()\n            delete this.__disposer_objects[__id]\n        } \n    }\n\n    abstract get items()\n    abstract __load(objs: M[])\n    // use it if nobody should know that you load data for the query\n    // for example you need to update the current data on the page and you don't want to show a spinner\n    abstract shadowLoad()\n\n    // use it if everybody should know that the query data is updating\n    @action('MO: Query Base - load')\n    async load() {\n        this.__is_loading = true\n        try {\n            await this.shadowLoad()\n        }\n        finally {\n            // we have to wait a next tick before set __is_loading to true, mobx recalculation should be done before\n            await new Promise(resolve => setTimeout(resolve))\n            runInAction(() => this.__is_loading = false)\n        }\n    }\n\n    get autoupdate() {\n        // TODO: move the name of disposer to const\n        return !! this.__disposer_objects['__autoupdate']\n    }\n    set autoupdate(value: boolean) {\n        if (value !== this.autoupdate) {\n            // off\n            if (!value) {\n                if (this.__disposer_objects['__autoupdate']) {\n                    this.__disposer_objects['__autoupdate']()\n                }\n                delete this.__disposer_objects['__autoupdate']\n            }\n            // on \n            else {\n                this.__disposer_objects['__autoupdate'] = reaction(\n                    () => this.need_to_update,\n                    (need_to_update) => {\n                        if (need_to_update) this.load()\n                    },\n                    { fireImmediately: true }\n                )\n            }\n        }\n    }\n\n    get selector(): Selector {\n        return {\n            filter      : this.filters,\n            order_by    : this.order_by,\n            fields      : this.fields,\n            omit        : this.omit,\n            relations   : this.relations,\n            offset      : this.offset,\n            limit       : this.limit\n        }\n    }\n\n    // use it if you need use promise instead of observe is_ready\n    ready(): Promise<Boolean> {\n        return new Promise((resolve, reject) => { \n            autorun((reaction) => {\n                if (this.__is_ready) {\n                    reaction.dispose()\n                    resolve(this.__is_ready) \n                }\n            })\n        })\n    }\n\n    // use it if you need use promise instead of observe is_loading\n    loading(): Promise<Boolean> {\n        return new Promise((resolve, reject) => { \n            autorun((reaction) => {\n                if (!this.__is_loading) {\n                    reaction.dispose()\n                    resolve(!this.__is_loading) \n                }\n            })\n        })\n    }\n}\n","export abstract class XFilter {\n    abstract get URLSearchParams() : URLSearchParams\n    abstract isMatch(obj: any) : boolean\n    abstract get isReady() : boolean\n}\n","import { action, makeObservable, observable, reaction } from 'mobx'\nimport { Model, QueryX as Query } from '..'\n\nexport interface InputConstructorArgs<T> {\n    value            ?: T,\n    options          ?: any,\n    required         ?: boolean,\n    disabled         ?: boolean,\n    syncURL          ?: string,\n    syncLocalStorage ?: string\n    autoReset        ?: (input: Input<T>) => void\n}\n\nexport abstract class Input<T> {\n    @observable          value               : T\n                readonly options            ?: Query<Model> // should be a Query\n    @observable          required            : boolean \n    @observable          disabled            : boolean\n                readonly syncURL            ?: string\n                readonly syncLocalStorage   ?: string\n                readonly autoReset          ?: (input: Input<T>) => void\n\n    @observable isInit      : boolean\n    @observable __isReady   : boolean\n                __disposers = [] \n    \n    constructor(args?: InputConstructorArgs<T>) {\n        // init all observables before use it in reaction\n        this.value              = args?.value\n        this.options            = args?.options\n        this.required           = !!args?.required\n        this.disabled           = !!args?.disabled\n        this.syncURL            = args?.syncURL\n        this.syncLocalStorage   = args?.syncLocalStorage\n        this.autoReset          = args?.autoReset\n        this.isInit             = false\n        if (this.options) {\n            this.__isReady = false\n            this.options.autoupdate = !this.disabled\n        } else {\n            this.__isReady = true\n        }\n        makeObservable(this)\n        // init reactions\n        this.options          && this.__disposers.push(this.__doOptions())\n        this.syncURL          && this.__disposers.push(this.__doSyncURL())\n        this.syncLocalStorage && this.__disposers.push(this.__doSyncLocalStorage())\n        this.autoReset        && this.__disposers.push(this.__doAutoReset())\n    }\n\n    get isReady() {\n        return this.disabled || (this.__isReady && (this.options === undefined || this.options.isReady))\n    }\n\n    @action set(value: T) {\n        this.value = value\n        if (!this.required || !(this.required && value === undefined)) {\n            this.__isReady = true\n        }\n        if (!this.isInit && (!this.options || this.options?.isReady)) {\n            this.isInit = true\n        }\n    }\n\n    @action disable() {\n        this.disabled = true\n        if (this.options) this.options.autoupdate = false\n    }\n\n    @action enable() {\n        this.disabled = false \n        if (this.options) this.options.autoupdate = true\n    }\n\n    destroy() {\n        this.__disposers.forEach(disposer => disposer())\n    }\n\n    abstract serialize  (value?: string) : T        // convert string to value\n    abstract deserialize(value : T     ) : string   // convert value to string\n\n    toString() { // sinonim for deserialize\n        return this.deserialize(this.value) \n    }\n\n    // Any changes in options should reset __isReady\n    __doOptions(): () => void {\n        return reaction(\n            () => this.options.is_ready,\n            () => this.__isReady = false\n        )\n    }\n\n    __doAutoReset(): () => void {\n        return reaction(\n            () => this.options.is_ready && !this.disabled,\n            (is_ready) => is_ready && this.autoReset(this),\n            { fireImmediately: true },\n        )\n    }\n\n    __doSyncURL (): () => void {\n        // init from URL Search Params\n        const name = this.syncURL\n        const searchParams = new URLSearchParams(window.location.search)\n        if (searchParams.has(name)) {\n            this.set(this.serialize(searchParams.get(name)))\n        }\n        \n        // watch for URL changes and update Input\n        window.addEventListener('popstate', () => {\n            let params = new URLSearchParams(document.location.search)\n            if (params.has(name)) {\n                const value = params.get(name)\n                if (value !== this.deserialize(this.value)) {\n                    this.set(this.serialize(value))\n                }\n            }\n        })\n\n        // watch for Input changes and update URL\n        return reaction(\n            () => this.value,\n            (value: any) => {\n                const searchParams = new URLSearchParams(window.location.search)\n                if ((value === '' || value === undefined || (Array.isArray(value) && !value.length))) {\n                    searchParams.delete(name)\n                } else {\n                    searchParams.set(name, this.deserialize(value))\n                }\n                // update URL\n                window.history.pushState(null, '', `${window.location.pathname}?${searchParams.toString()}`)\n            },\n            { fireImmediately: true },\n        )\n    }\n\n    __doSyncLocalStorage (): () => void {\n        const name = this.syncLocalStorage\n        const value = this.serialize(localStorage.getItem(name))\n        if (this.value !== value) {\n            this.set(value)\n        }\n        return reaction(\n            () => this.value,\n            (value) => {\n                if (value !== undefined) {\n                    localStorage.setItem(name, this.deserialize(value))\n                } else {\n                    localStorage.removeItem(name)\n                }\n\n            },\n            { fireImmediately: true },\n        )\n    }\n}\n","import { Input } from './Input'\n\nexport class StringInput extends Input<string|null|undefined> {\n    serialize(value?: string): string|null|undefined {\n        if (value === undefined) return undefined\n        if (value === 'null')    return null\n        if (value === null)      return undefined\n        return value\n    }\n    deserialize(value: string|null|undefined): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return value\n    }\n} ","import { Input } from './Input'\n\nexport class NumberInput extends Input<number|null|undefined> {\n    serialize(value?: string): number|null|undefined {\n        if (value === undefined) return undefined\n        if (value === 'null')    return null\n        if (value === null)      return undefined \n        let result = parseInt(value)\n        if (isNaN(result)) result = undefined\n        return result\n    }\n\n    deserialize(value: number|null|undefined): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return ''+value\n    }\n}\n","import { Input } from \"./Input\"\n\nexport class BooleanInput extends Input<boolean|null|undefined> {\n    serialize(value?: string): boolean|null|undefined {\n        if (value === undefined) return undefined\n        if (value === 'null')    return null\n        if (value === null)      return undefined\n        return value === 'true' ? true : value === 'false' ? false : undefined\n    }\n\n    deserialize(value: boolean|null|undefined): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return !!value ? 'true' : 'false' \n    }\n}\n","import { Input } from './Input'\n\nexport class DateInput extends Input<Date|null|undefined> {\n    serialize(value?: string): Date {\n        if (value === undefined) return undefined\n        if (value === 'null')    return null\n        return new Date(value) \n    }\n\n    deserialize(value: Date|null|undefined): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return value instanceof Date ? (value as Date).toISOString().split('T')[0] : \"\"\n    }\n}\n","import { Input } from \"./Input\"\n\nexport class DateTimeInput extends Input<Date|null|undefined> {\n    serialize(value?: string): Date|null|undefined {\n        if (value === undefined) return undefined\n        if (value === 'null')    return null\n        return new Date(value) \n    }\n\n    deserialize(value: Date|null|undefined): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return value instanceof Date ? (value as Date).toISOString() : \"\"\n    }\n}","import { Input, InputConstructorArgs } from './Input'\n\n\nexport abstract class ArrayInput<T> extends Input<T> {\n    constructor(args?: InputConstructorArgs<T>) {\n        if (args === undefined || args.value === undefined ) args = { ...args, value: [] as any}\n        super(args)\n    }\n}\n","import { ArrayInput } from './ArrayInput'\nimport { StringInput } from './StringInput'\n\nexport class ArrayStringInput extends ArrayInput<string[]> {\n\n    serialize(value?: string) : string[] {\n        let result = [] \n        if (value) {\n            let converter = new StringInput()\n            for (const i of value.split(',')) {\n                let tmp = converter.serialize(i)\n                if (tmp !== undefined) {\n                    result.push(tmp)\n                }\n            }\n        }\n        return result\n    }\n\n    deserialize(value: string[]) : string {\n        let result = [] \n        if (value) {\n            for (const i of value) {\n                let converter = new StringInput()\n                let v = converter.deserialize(i) \n                if (v !== undefined) {\n                    result.push(v)\n                }\n            }\n        }\n        return result.length ? result.join(',') : undefined\n    }\n}\n","import { ArrayInput } from './ArrayInput'\nimport { NumberInput } from './NumberInput'\n\nexport class ArrayNumberInput extends ArrayInput<number[]> {\n\n    serialize(value?: string) : number[] {\n        let result = [] \n        if (value) {\n            let converter = new NumberInput()\n            for (const i of value.split(',')) {\n                let tmp = converter.serialize(i)\n                if (tmp !== undefined) {\n                    result.push(tmp)\n                }\n            }\n        }\n        return result\n    }\n\n    deserialize(value: number[]) : string {\n        let result = [] \n        if (value) {\n            for (const i of value) {\n                let converter = new NumberInput()\n                let v = converter.deserialize(i) \n                if (v !== undefined) {\n                    result.push(v)\n                }\n            }\n\n        }\n        return result.length ? result.join(',') : undefined\n    }\n}","import { NumberInput } from '..'\n\nexport function autoResetId(input: NumberInput) {\n    if (!input.options) {\n        console.warn('Input with autoResetId has no options', input)\n        return \n    }\n    // if value still in options, do nothing\n    for (const item of input.options.items) {\n        if (item.id === input.value) {\n            input.set(input.value) // we need to set value to trigger reaction\n            return\n        }\n    }\n    // otherwise set first available id or undefined\n    input.set(input.options.items[0]?.id)\n}\n","import { ArrayNumberInput } from '..'\n\nexport const autoResetArrayOfIDs = (input: ArrayNumberInput) => {\n    if (!input.options) {\n        console.warn('Input with autoResetArrayOfIDs has no options', input)\n        return \n    }\n    // if one of values not in options, reset the input \n    for (const id of input.value) {\n        let found = false\n        for (const item of input.options.items) {\n            if (item.id === id) {\n                found = true\n                break\n            }\n        }\n        if (!found) {\n            input.set([])\n        }\n    }\n    input.set(input.value)\n}\n","export const autoResetDefault = (input: any) => {\n    if (!input.options) input.set(input.value)\n    input.set(undefined)\n}\n","export const autoResetArrayToEmpty = (input: any) => {\n    if (!input.options) input.set(input.value)\n    input.set([])\n}\n","import { action, autorun, makeObservable, observable } from 'mobx'\nimport { XFilter } from './Filter'\nimport { Input } from '../inputs'\n\nexport abstract class XSingleFilter extends XFilter {\n    readonly    field       : string\n    @observable input       : Input<any> \n    __disposers             : (()=>void)[] = []\n\n    constructor(field: string, input: Input<any>) {\n        super()\n        this.field = field\n        this.input = input \n        makeObservable(this)\n    }\n\n    get isReady(): boolean {\n        return this.input.isReady\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        let value = this.input.deserialize(this.input.value) \n        !this.input.disabled && value !== undefined && search_params.set(this.URIField, value)\n        return search_params\n    }\n\n    abstract get URIField() : string\n\n    abstract operator(value_a, value_b) : boolean\n\n    isMatch(obj: any): boolean {\n        // it's always match if value of filter is undefined\n        if (this.input === undefined || this.input.disabled)\n            return true\n\n        return match(obj, this.field, this.input.value, this.operator)\n    }\n}\n\n\nfunction match(obj: any, field_name: string, filter_value: any, operator: (value_a, value_b) => boolean): boolean {\n    let field_names = field_name.split('__')\n    let current_field_name = field_names[0]\n    let current_value = obj[current_field_name]\n\n         if (field_names.length === 1) return operator(current_value, filter_value)\n    else if (field_names.length   > 1) {\n        let next_field_name = field_name.substring(field_names[0].length+2)\n        // we have object relation\n        if (typeof current_value === 'object' && current_value !== null) {\n            if (Array.isArray(current_value)) {\n                let result = false\n                for(const item of current_value) {\n                    result = match(item, next_field_name, filter_value, operator)\n                    if (result) return result\n                }\n            }\n            else {\n                return match(current_value, next_field_name, filter_value, operator)\n            }\n        }\n    }\n    return false\n}\n","import { XFilter } from \"./Filter\"\n\nexport abstract class XComboFilter extends XFilter {\n    readonly filters: XFilter[]\n\n    constructor(filters: XFilter[]) {\n        super()\n        this.filters = filters\n    }\n\n    abstract isMatch(obj: any) : boolean\n\n    get isReady(): boolean {\n        for(let filter of this.filters) {\n            if (!filter.isReady) return false\n        }\n        return true\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        for(let filter of this.filters) {\n            filter.URLSearchParams.forEach((value, key) => search_params.set(key, value))\n        }\n        return search_params\n    }\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from './SingleFilter'\n\nexport class XEQ_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a === value_b\n    }\n}\n\n// EQV is a verbose version of EQ\nexport class XEQV_Filter extends XEQ_Filter {\n    get URIField(): string {\n        return `${this.field}__eq` \n    }\n}\n\nexport function XEQ(field: string, value: Input<any>) : XSingleFilter {\n    return new XEQ_Filter(field, value)\n}\n\nexport function XEQV(field: string, value: Input<any>) : XSingleFilter {\n    return new XEQV_Filter(field, value)\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from \"./SingleFilter\"\n\nexport class XNOT_EQ_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__not_eq` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a !== value_b\n        \n    }\n}\n\nexport function XNOT_EQ(field: string, value: Input<any>) : XSingleFilter {\n    return new XNOT_EQ_Filter(field, value)\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from \"./SingleFilter\"\n\nexport class XGT_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__gt` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a > value_b\n    }\n}\n\nexport function XGT(field: string, value: Input<any>) : XSingleFilter {\n    return new XGT_Filter(field, value)\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from \"./SingleFilter\"\n\nexport class XGTE_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__gte` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a >= value_b\n    }\n}\n\nexport function XGTE(field: string, value: Input<any>) : XSingleFilter {\n    return new XGTE_Filter(field, value)\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from \"./SingleFilter\"\n\nexport class XLT_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__lt` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a < value_b\n    }\n}\n\nexport function XLT(field: string, value: Input<any>) : XSingleFilter {\n    return new XLT_Filter(field, value)\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from \"./SingleFilter\"\n\nexport class XLTE_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__lte` \n    }\n\n    operator(value_a: any, value_b: any): boolean {\n        return value_a <= value_b\n    }\n}\n\nexport function XLTE(field: string, value: Input<any>) : XSingleFilter {\n    return new XLTE_Filter(field, value)\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from \"./SingleFilter\"\n\nexport class XIN_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__in`\n    }\n\n    operator(value_a, value_b): boolean {\n        // it's always match if value of filter is empty []\n        if (value_b.length === 0) return true\n\n        for (let v of value_b) {\n            if (v === value_a) return true\n        }\n        return false\n    }\n}\n\nexport function XIN(field: string, value: Input<any>) : XSingleFilter { \n    return new XIN_Filter(field, value)\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from \"./SingleFilter\"\n\nexport class XLIKE_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__contains` \n    }\n\n    operator(current_value: any, filter_value: any): boolean {\n        return current_value.includes(filter_value) \n    }\n}\n\nexport function XLIKE(field: string, value: Input<any>) : XSingleFilter {\n    return new XLIKE_Filter(field, value)\n}\n","import { Input } from '../inputs'\nimport { XSingleFilter } from \"./SingleFilter\"\n\nexport class XILIKE_Filter extends XSingleFilter {\n\n    get URIField(): string {\n        return `${this.field}__icontains` \n    }\n\n    operator(current_value: any, filter_value: any): boolean {\n        return current_value.toLowerCase().includes(filter_value.toLowerCase()) \n    }\n}\n\nexport function XILIKE(field: string, value: Input<any>) : XSingleFilter {\n    return new XILIKE_Filter(field, value)\n}\n","import { XComboFilter } from \"./ComboFilter\"\nimport { XFilter } from \"./Filter\"\n\nexport class XAND_Filter extends XComboFilter {\n\n    isMatch(obj: any) : boolean {\n        for(let filter of this.filters) {\n            if (!filter.isMatch(obj)) {\n                return false\n            }\n        }\n        return true \n    }\n}\n\nexport function XAND(...filters: XFilter[]) : XFilter { return new XAND_Filter(filters) }\n","import { makeObservable, observable } from 'mobx'\nimport { XFilter } from './filters-x'\n\nexport const ASC = true \nexport const DESC = false \nexport type ORDER_BY = Map<string, boolean>\n\nexport class SelectorX {\n    @observable filter      ?: XFilter \n    @observable order_by    ?: ORDER_BY \n    @observable offset      ?: number\n    @observable limit       ?: number\n    @observable relations   ?: Array<string>\n    @observable fields      ?: Array<string>\n    @observable omit        ?: Array<string>\n\n    constructor(\n        filter      ?: XFilter,\n        order_by    ?: ORDER_BY,\n        offset      ?: number,\n        limit       ?: number,\n        relations   ?: string[],\n        fields      ?: string[],\n        omit        ?: string[],\n        ) {\n        this.filter    = filter\n        this.order_by  = order_by ? order_by : new Map()\n        this.offset    = offset\n        this.limit     = limit\n        this.relations = relations\n        this.fields    = fields\n        this.omit      = omit\n        makeObservable(this)\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        const searchParams = this.filter ? this.filter.URLSearchParams : new URLSearchParams()\n        const order_by = []\n        if (this.order_by?.size) \n            for (const field of this.order_by.keys()) {\n                const value = this.order_by.get(field)\n                const _field = field.replace(/\\./g, '__')\n                order_by.push(value === ASC ? `${_field}` : `-${_field}`)\n            }\n        if (order_by.length             ) searchParams.set('__order_by' , order_by.join())\n        if (this.limit !== undefined    ) searchParams.set('__limit'    , this.limit as any)\n        if (this.offset !== undefined   ) searchParams.set('__offset'   , this.offset as any)\n        if (this.relations?.length      ) searchParams.set('__relations', this.relations as any)\n        if (this.fields?.length         ) searchParams.set('__fields'   , this.fields as any)\n        if (this.omit?.length           ) searchParams.set('__omit'     , this.omit as any)\n        return searchParams\n    }\n}\n","import { action, runInAction, computed, observe, reaction } from 'mobx'\nimport { Model } from '../model'\nimport { Adapter } from '../adapters'\nimport { QueryBase } from './query-base'\nimport { ASC } from '../selector'\nimport { Selector } from '@/types'\n\n// Depricated\nexport class Query<M extends Model> extends QueryBase<M> {\n\n    constructor(adapter: Adapter<M>, base_cache: any, selector?: Selector) {\n        super(adapter, base_cache, selector)\n\n        // watch the cache for changes, and update items if needed\n        this.__disposers.push(observe(this.__base_cache, \n            action('MO: Query - update from cache changes',\n            (change: any) => {\n                if (change.type == 'add') {\n                    this.__watch_obj(change.newValue)\n                }\n                if (change.type == \"delete\") {\n                    let id = change.name\n                    let obj  = change.oldValue\n\n                    this.__disposer_objects[id]()\n                    delete this.__disposer_objects[id]\n\n                    let i = this.__items.indexOf(obj)\n                    if (i != -1)\n                        this.__items.splice(i, 1)\n                }\n            })\n        ))\n\n        // ch all exist objects of model \n        for(let [id, obj] of this.__base_cache) {\n            this.__watch_obj(obj)\n        }\n    }\n\n    @action('MO: Query Base - shadow load')\n    async shadowLoad() {\n        try {\n            let objs = await this.__adapter.load(this.selector)\n            this.__load(objs)\n            // we have to wait a next tick before set __is_ready to true, mobx recalculation should be done before\n            await new Promise(resolve => setTimeout(resolve))\n            runInAction(() => {\n                this.__is_ready = true\n                this.need_to_update = false \n            })\n        }\n        catch(e) {\n            // 'MO: Query Base - shadow load - error',\n            runInAction( () => this.__error = e)\n            throw e\n        }\n    }\n\n    @computed\n    get items() { \n        let __items = this.__items.map(x=>x) // copy __items (not deep)\n        if (this.order_by.size) {\n            let compare = (a, b) => {\n                for(const [key, value] of this.order_by) {\n                    if (value === ASC) {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return  1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return -1\n                        if (a[key] < b[key]) return -1\n                        if (a[key] > b[key]) return  1\n                    }\n                    else {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return -1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return  1\n                        if (a[key] < b[key]) return  1\n                        if (a[key] > b[key]) return -1\n                    }\n                }\n                return 0\n            }\n            __items.sort(compare)\n        }\n        return __items \n    }\n\n    __load(objs: M[]) {\n        // Query don't need to overide the items, query's items should be get only from the cache\n        // Query page have to use it only \n    }\n\n    __watch_obj(obj) {\n        if (this.__disposer_objects[obj.id]) this.__disposer_objects[obj.id]()\n        this.__disposer_objects[obj.id] = reaction(\n            () =>  !this.filters || this.filters.isMatch(obj),\n            action('MO: Query - obj was changed',\n            (should: boolean) => {\n                let i = this.__items.indexOf(obj)\n                // should be in the items and it is not in the items? add it to the items\n                if ( should && i == -1) this.__items.push(obj)\n                // should not be in the items and it is in the items? remove it from the items\n                if (!should && i != -1) this.__items.splice(i, 1)\n            }),\n            { fireImmediately: true }\n        )\n    }\n}\n","import { action, reaction, runInAction } from \"mobx\"\nimport { Model } from \"../model\"\nimport { Adapter } from \"../adapters\"\nimport { QueryBase } from './query-base'\nimport { Selector } from \"@/types\"\n\n// Depriated\nexport class QueryPage<M extends Model> extends QueryBase<M> {\n\n    @action('MO: Query Page - load')\n    __load(objs: M[]) {\n        this.__items.splice(0, this.__items.length)\n        this.__items.push(...objs)\n    }\n\n    @action('MO: set page size') setPageSize(size: number) { this.limit = size; this.offset = 0 }\n    @action('MO: set page')      setPage(n: number) { this.offset = this.limit * (n > 0 ? n-1 : 0) }\n    @action('MO: fisrt page')    goToFirstPage() { this.setPage(1) }\n    @action('MO: prev page')     goToPrevPage () { this.setPage(this.current_page - 1) }\n    @action('MO: next page')     goToNextPage () { this.setPage(this.current_page + 1) }\n    @action('MO: last page')     goToLastPage () { this.setPage(this.total_pages) }\n\n    get is_first_page() : boolean { return this.offset === 0 }\n    get is_last_page () : boolean { return this.offset + this.limit >= this.total }\n    get current_page()  : number  { return this.offset / this.limit + 1 }\n    get total_pages()   : number  { return this.total ? Math.ceil(this.total / this.limit) : 1 }\n\n    constructor(adapter: Adapter<M>, base_cache: any, selector?: Selector) {\n        super(adapter, base_cache, selector)\n        runInAction(() => {\n            this.offset = selector?.offset || 0   \n            this.limit  = selector?.limit  || 50 \n        })\n    }\n\n    get items() { return this.__items }\n\n    @action('MO: Query Base - shadow load')\n    async shadowLoad() {\n        try {\n            const objs = await this.__adapter.load(this.selector)\n            this.__load(objs)\n            const total = await this.__adapter.getTotalCount(this.filters)\n            runInAction(() => {\n                this.total = total\n                this.__is_ready = true\n                this.need_to_update = false \n            })\n        }\n        catch(e) {\n            // 'MO: Query Base - shadow load - error',\n            runInAction(() => this.__error = e)\n            throw e\n        }\n    }\n}\n","import { autorun } from \"mobx\"\n\nexport function waitIsTrue(obj: any, field: string) : Promise<Boolean> {\n    return new Promise((resolve, reject) => { \n        autorun((reaction) => {\n            if (obj[field]) {\n                reaction.dispose()\n                resolve(true) \n            }\n        })\n    })\n}\n\nexport function waitIsFalse(obj: any, field: string) : Promise<Boolean> {\n    return new Promise((resolve, reject) => { \n        autorun((reaction) => {\n            if (!obj[field]) {\n                reaction.dispose()\n                resolve(true) \n            }\n        })\n    })\n}\n","import { action, makeObservable, observable, reaction, runInAction } from 'mobx'\nimport { waitIsFalse, waitIsTrue } from '../utils'\nimport { Adapter } from '../adapters'\nimport { SelectorX as Selector } from '../selector'\nimport { Model } from '../model'\n\nexport const DISPOSER_AUTOUPDATE = \"__autoupdate\"\n\nexport class QueryX <M extends Model> {\n    @observable total         : number\n    @observable need_to_update: boolean = false // set to true when filters/order_by/page/page_size was changed and back to false after load\n\n    get is_loading () { return this.__is_loading  }\n    get is_ready   () { return this.__is_ready    }\n    get error      () { return this.__error       }\n    // we going to migrate to JS style\n    get isLoading () { return this.__is_loading  }\n    get isReady   () { return this.__is_ready    }\n    \n    readonly selector: Selector\n    readonly adapter: Adapter<M>\n    @observable __items: M[] = []\n    @observable __is_loading  : boolean = false \n    @observable __is_ready    : boolean = false \n    @observable __error       : string = '' \n\n    __disposers         : (()=>void)[] = []\n    __disposer_objects  : {[field: string]: ()=>void} = {}\n\n    constructor(adapter: Adapter<M>, selector?: Selector) {\n        this.adapter = adapter\n        this.selector = selector ? selector : new Selector()\n        makeObservable(this)\n\n        this.__disposers.push(reaction(\n            () => this.selector.URLSearchParams.toString(),\n            action('MO: Query Base - need to update', () => {\n                this.need_to_update = true\n                this.__is_ready = false\n            }),\n            { fireImmediately: true }\n        ))\n    }\n\n    // backward compatibility, remove it in the future\n    get filters() { return this.selector.filter }\n    get order_by() { return this.selector.order_by }\n    get offset() { return this.selector.offset }\n    get limit() { return this.selector.limit }\n    get fields() { return this.selector.fields }\n    get omit() { return this.selector.omit }\n    get relations() { return this.selector.relations }\n\n    destroy() {\n        while(this.__disposers.length) {\n            this.__disposers.pop()()\n        }\n        for(let __id in this.__disposer_objects) {\n            this.__disposer_objects[__id]()\n            delete this.__disposer_objects[__id]\n        } \n    }\n\n    get items() { return this.__items }\n\n    async __load() {\n        const objs = await this.adapter.load(this.selector)\n        runInAction(() => {\n            this.__items = objs\n        })\n        // we have to wait the next tick\n        // mobx should finished recalculation (object relations, computed fields, etc.)\n        // await Promise.resolve();\n        // await new Promise(resolve => setTimeout(resolve))\n    }\n\n    // use it if everybody should know that the query data is updating\n    @action('MO: Query Base - load')\n    async load() {\n        this.__is_loading = true\n        try {\n            await this.shadowLoad()\n        }\n        finally {\n            runInAction(() => this.__is_loading = false)\n        }\n    }\n\n    // use it if nobody should know that the query data is updating\n    // for example you need to update the current data on the page and you don't want to show a spinner\n    @action('MO: Query Base - shadow load')\n    async shadowLoad() {\n        try {\n            await this.__load()\n        }\n        catch(e) {\n            runInAction(() => {\n                this.__error = e\n            })\n        }\n        finally {\n            runInAction(() => {\n                if (!this.__is_ready) this.__is_ready = true\n                if (this.need_to_update) this.need_to_update = false \n            })\n        }\n    }\n\n    get autoupdate() {\n        return !! this.__disposer_objects[DISPOSER_AUTOUPDATE]\n    }\n\n    set autoupdate(value: boolean) {\n        if (value !== this.autoupdate) {\n            // on \n            if (value) {\n                this.__disposer_objects[DISPOSER_AUTOUPDATE] = reaction(\n                    () => this.need_to_update && (this.selector.filter === undefined || this.selector.filter.isReady),\n                    (need_to_update) => {\n                        if (need_to_update) this.load()\n                    },\n                    { fireImmediately: true }\n                )\n            }\n            // off\n            else {\n                this.__disposer_objects[DISPOSER_AUTOUPDATE]()\n                delete this.__disposer_objects[DISPOSER_AUTOUPDATE]\n            }\n        }\n    }\n\n    // use it if you need use promise instead of observe is_ready\n    ready = async () => waitIsTrue(this, '__is_ready')\n    // use it if you need use promise instead of observe is_loading\n    loading = async () => waitIsFalse(this, '__is_loading')\n}\n","// Global config of Mobx-ORM\nexport const config = {\n    DEFAULT_PAGE_SIZE: 50\n}\n","import { action, runInAction } from 'mobx'\nimport { Adapter } from '../adapters'\nimport { QueryX } from './query-x'\nimport { SelectorX as Selector } from '../selector' \nimport { config } from '../config'\nimport { Model } from '../model'\n\nexport class QueryXPage<M extends Model> extends QueryX<M> {\n\n    @action('MO: set page size') setPageSize(size: number) { this.selector.limit = size; this.selector.offset = 0 }\n    @action('MO: set page')      setPage(n: number) { this.selector.offset = this.selector.limit * (n > 0 ? n-1 : 0) }\n    @action('MO: fisrt page')    goToFirstPage() { this.setPage(1) }\n    @action('MO: prev page')     goToPrevPage () { this.setPage(this.current_page - 1) }\n    @action('MO: next page')     goToNextPage () { this.setPage(this.current_page + 1) }\n    @action('MO: last page')     goToLastPage () { this.setPage(this.total_pages) }\n\n    get is_first_page() : boolean { return this.selector.offset === 0 }\n    get is_last_page () : boolean { return this.selector.offset + this.selector.limit >= this.total }\n    get current_page()  : number  { return this.selector.offset / this.selector.limit + 1 }\n    get total_pages()   : number  { return this.total ? Math.ceil(this.total / this.selector.limit) : 1 }\n    // we going to migrate to JS style\n    get isFirstPage() : boolean { return this.selector.offset === 0 }\n    get isLastPage () : boolean { return this.selector.offset + this.selector.limit >= this.total }\n    get currentPage() : number  { return this.selector.offset / this.selector.limit + 1 }\n    get totalPages()  : number  { return this.total ? Math.ceil(this.total / this.selector.limit) : 1 }\n\n    constructor(adapter: Adapter<M>, selector?: Selector) {\n        super(adapter, selector)\n        runInAction(() => {\n            if (this.selector.offset === undefined) this.selector.offset = 0\n            if (this.selector.limit  === undefined) this.selector.limit = config.DEFAULT_PAGE_SIZE\n        })\n    }\n\n    async __load() {\n        const objs = await this.adapter.load(this.selector)\n        const total = await this.adapter.getTotalCount(this.selector.filter)\n        runInAction(() => {\n            this.__items = objs\n            this.total = total\n        })\n        // we have to wait the next tick\n        // mobx should finished recalculation (object relations, computed fields, etc.)\n        // await new Promise(resolve => setTimeout(resolve))\n    }\n}\n","import { action, computed, observe, reaction } from 'mobx'\nimport { Adapter } from '../adapters'\nimport { QueryX } from './query-x'\nimport { Model } from '../model'\nimport { SelectorX as Selector, ASC } from '../selector' \n\n\nexport class QueryXCacheSync <M extends Model> extends QueryX<M> {\n\n    constructor(adapter: Adapter<M>, base_cache: any, selector?: Selector) {\n        super(adapter, selector)\n\n        // watch the cache for changes, and update items if needed\n        this.__disposers.push(observe(base_cache, \n            action('MO: Query - update from cache changes',\n            (change: any) => {\n                if (change.type == 'add') {\n                    this.__watch_obj(change.newValue)\n                }\n                if (change.type == \"delete\") {\n                    let id = change.name\n                    let obj  = change.oldValue\n\n                    this.__disposer_objects[id]()\n                    delete this.__disposer_objects[id]\n\n                    let i = this.__items.indexOf(obj)\n                    if (i != -1) {\n                        this.__items.splice(i, 1)\n                        this.total = this.__items.length\n                    }\n                }\n            })\n        ))\n\n        // ch all exist objects of model \n        for(let [id, obj] of base_cache) {\n            this.__watch_obj(obj)\n        }\n    }\n\n    async __load() {\n        // Query don't need to overide the __items,\n        // query's items should be get only from the cache\n        await this.adapter.load(this.selector)\n        // we have to wait the next tick\n        // mobx should finished recalculation for model-objects\n        await Promise.resolve();\n        // await new Promise(resolve => setTimeout(resolve))\n    }\n\n    @computed\n    get items() { \n        let __items = this.__items.map(x=>x) // copy __items (not deep)\n        if (this.selector.order_by?.size) {\n            let compare = (a, b) => {\n                for(const [key, value] of this.selector.order_by) {\n                    if (value === ASC) {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return  1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return -1\n                        if (a[key] < b[key]) return -1\n                        if (a[key] > b[key]) return  1\n                    }\n                    else {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return -1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return  1\n                        if (a[key] < b[key]) return  1\n                        if (a[key] > b[key]) return -1\n                    }\n                }\n                return 0\n            }\n            __items.sort(compare)\n        }\n        return __items \n    }\n\n    __watch_obj(obj) {\n        if (this.__disposer_objects[obj.id]) this.__disposer_objects[obj.id]()\n        this.__disposer_objects[obj.id] = reaction(\n            () =>  !this.selector.filter || this.selector.filter.isMatch(obj),\n            action('MO: Query - obj was changed',\n            (should: boolean) => {\n                let i = this.__items.indexOf(obj)\n                // should be in the items and it is not in the items? add it to the items\n                if ( should && i == -1) this.__items.push(obj)\n                // should not be in the items and it is in the items? remove it from the items\n                if (!should && i != -1) this.__items.splice(i, 1)\n\n                if (this.total != this.__items.length) \n                    this.total = this.__items.length\n            }),\n            { fireImmediately: true }\n        )\n    }\n}\n","import { action, runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { QueryX } from './query-x'\nimport { SelectorX as Selector } from '../selector' \nimport { Adapter } from '../adapters'\nimport { config } from '../config'\n\n\nexport class QueryXStream <M extends Model> extends QueryX<M> {\n    // you can reset all and start from beginning\n    @action('MO: fisrt page') goToFirstPage() { this.__items = []; this.selector.offset = 0 }\n    // you can scroll only forward\n    @action('MO: next page')  goToNextPage () { this.selector.offset = this.selector.offset + this.selector.limit  }\n\n    constructor(adapter: Adapter<M>, selector?: Selector) {\n        super(adapter, selector)\n        runInAction(() => {\n            if (this.selector.offset === undefined) this.selector.offset = 0\n            if (this.selector.limit  === undefined) this.selector.limit = config.DEFAULT_PAGE_SIZE\n        })\n    }\n\n    async __load() {\n        const objs = await this.adapter.load(this.selector)\n        runInAction(() => {\n            this.__items.push(...objs)\n            // total is not make sense for infinity queries\n            // total = 1 show that last page is reached\n            if (objs.length < this.selector.limit) this.total = 1\n        })\n        // we have to wait the next tick\n        // mobx should finished recalculation for model-objects\n        await new Promise(resolve => setTimeout(resolve))\n    }\n}\n","import { runInAction } from 'mobx'\nimport { QueryX } from './query-x'\nimport { Model } from '../model'\n\nexport class QueryXRaw<M extends Model> extends QueryX<M> {\n    async __load() {\n        // get only raw objects from adapter\n        const objs = await this.adapter.__load(this.selector)\n        runInAction(() => {\n            this.__items = objs\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { QueryXPage } from './query-x-page'\n\n// TODO: fix types\nexport class QueryXRawPage<M extends Model> extends QueryXPage<M> {\n    async __load() {\n        // get only raw objects from adapter\n        const objs = await this.adapter.__load(this.selector)\n        const total = await this.adapter.getTotalCount(this.selector.filter)\n        runInAction(() => {\n            this.__items = objs\n            this.total = total\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { QueryX } from './query-x'\nimport { Adapter } from '../adapters'\nimport { SelectorX as Selector } from '../selector' \n\nexport class QueryXDistinct extends QueryX<any> {\n    readonly field: string\n    \n    constructor(adapter: Adapter<any>, selector: Selector, field: string) {\n        super(adapter, selector)\n        this.field = field\n    }\n\n    async __load() {\n        const objs = await this.adapter.getDistinct(this.selector.filter, this.field)\n        runInAction(() => {\n            this.__items = objs\n        })\n    }\n}\n","import { action, intercept, makeObservable, observable, observe, runInAction } from 'mobx'\nimport { Adapter } from './adapters'\nimport { QueryXDistinct, Query, QueryPage, QueryX, QueryXPage, QueryXStream, QueryXCacheSync, QueryXRaw, QueryXRawPage } from './queries'\nimport { Selector } from './types'\nimport { SelectorX } from './selector'\nimport { XFilter as Filter } from './filters-x'\n\n\nexport type RawObject = any \nexport type RawData   = any \n\n\nexport abstract class Model {\n    // this static properties will be copied to real model in the model decorator\n    static __adapter  : Adapter<Model> \n    static __cache    : Map<number, Model>\n    // - fields\n    // - relations (not exist on outside)\n    static __fields       : {\n        [field_name: string]: {\n            decorator   : (obj: Model, field_name: string) => void,\n            settings    : any,\n            serialize   : any,\n            deserialize : any\n        }\n    }\n    // relateions is a list of field only foreign, one or many types\n    static __relations : {\n        [field_name: string]: {\n            decorator   : (obj: Model, field_name: string) => void,\n            settings    : any\n            // there is no serializer of deserializer because \n            // it is derivative and does not come from outside\n        }\n    }\n\n    // add obj to the cache\n    @action('MO: model - inject')\n    static inject(obj: Model) {\n        if (obj.id === undefined)                    \n            throw new Error(`Object should have id!`)\n        if (this.__cache.has(obj.id)) {\n            throw new Error(`Object with id ${obj.id} already exist in the cache of model: \"${this.prototype.constructor.name}\")`)\n        }\n        this.__cache.set(obj.id, obj)\n    }\n\n    // remove obj from the cache\n    @action('MO: model - eject')\n    static eject(obj: Model) {\n        if (this.__cache.has(obj.id)) \n            this.__cache.delete(obj.id)\n    }\n\n    // TODO: need to refactor\n    static getQueryX<T extends Model>(options?: {\n        filter?: Filter,\n        order_by?: Map<string, boolean>,\n        offset?: number,\n        limit?: number,\n        relations?: Array<string>,\n        fields?: Array<string>,\n        omit?: Array<string>,\n        autoupdate?: boolean,\n    }): QueryX<T>  {\n        const selector = new SelectorX(\n            options?.filter,\n            options?.order_by,\n            options?.offset,\n            options?.limit,\n            options?.relations,\n            options?.fields,\n            options?.omit,\n        )\n        const query = new QueryX<T>(this.__adapter as Adapter<T>, selector)\n        if (options?.autoupdate) {\n            runInAction(() => query.autoupdate = options.autoupdate)\n        }\n        return query\n    }\n\n    static getQueryXRaw<T extends Model>(options?: {\n        filter?: Filter,\n        order_by?: Map<string, boolean>,\n        offset?: number,\n        limit?: number,\n        relations?: Array<string>,\n        fields?: Array<string>,\n        omit?: Array<string>,\n        autoupdate?: boolean,\n    }): QueryX<T>  {\n        const selector = new SelectorX(\n            options?.filter,\n            options?.order_by,\n            options?.offset,\n            options?.limit,\n            options?.relations,\n            options?.fields,\n            options?.omit,\n        )\n        const query = new QueryXRaw<T>(this.__adapter as Adapter<T>, selector)\n        if (options?.autoupdate) {\n            runInAction(() => query.autoupdate = options.autoupdate)\n        }\n        return query\n    }\n\n    // TODO: need to refactor\n    static getQueryXPage<T extends Model>(options?: {\n        filter?: Filter,\n        order_by?: Map<string, boolean>,\n        offset?: number,\n        limit?: number,\n        relations?: Array<string>,\n        fields?: Array<string>,\n        omit?: Array<string>,\n        autoupdate?: boolean,\n    }): QueryXPage<T>  {\n        const selector = new SelectorX(\n            options?.filter,\n            options?.order_by,\n            options?.offset,\n            options?.limit,\n            options?.relations,\n            options?.fields,\n            options?.omit,\n        )\n        const query = new QueryXPage<T>(this.__adapter as Adapter<T>, selector)\n        if (options?.autoupdate) {\n            runInAction(() => query.autoupdate = options.autoupdate)\n        }\n        return query\n    }\n\n    // TODO: need to refactor\n    static getQueryXRawPage<T extends Model>(options?: {\n        filter?: Filter,\n        order_by?: Map<string, boolean>,\n        offset?: number,\n        limit?: number,\n        relations?: Array<string>,\n        fields?: Array<string>,\n        omit?: Array<string>,\n        autoupdate?: boolean,\n    }): QueryXPage<T>  {\n        const selector = new SelectorX(\n            options?.filter,\n            options?.order_by,\n            options?.offset,\n            options?.limit,\n            options?.relations,\n            options?.fields,\n            options?.omit,\n        )\n        const query = new QueryXRawPage<T>(this.__adapter as Adapter<T>, selector)\n        if (options?.autoupdate) {\n            runInAction(() => query.autoupdate = options.autoupdate)\n        }\n        return query\n    }\n\n    // TODO: need to refactor\n    static getQueryXCacheSync<T extends Model>(options?: {\n        filter?: Filter,\n        order_by?: Map<string, boolean>,\n        offset?: number,\n        limit?: number,\n        relations?: Array<string>,\n        fields?: Array<string>,\n        omit?: Array<string>,\n        autoupdate?: boolean,\n    }): QueryXCacheSync<T>  {\n        const selector = new SelectorX(\n            options?.filter,\n            options?.order_by,\n            options?.offset,\n            options?.limit,\n            options?.relations,\n            options?.fields,\n            options?.omit,\n        )\n        const query = new QueryXCacheSync<T>(this.__adapter as Adapter<T>, this.__cache, selector)\n        if (options?.autoupdate) {\n            runInAction(() => query.autoupdate = options.autoupdate)\n        }\n        return query\n    }\n\n    // TODO: need to refactor\n    static getQueryXStream<T extends Model>(options?: {\n        filter?: Filter,\n        order_by?: Map<string, boolean>,\n        limit?: number,\n        relations?: Array<string>,\n        fields?: Array<string>,\n        omit?: Array<string>,\n        autoupdate?: boolean,\n    }): QueryXStream<T>  {\n        const selector = new SelectorX(\n            options?.filter,\n            options?.order_by,\n            0, \n            options?.limit,\n            options?.relations,\n            options?.fields,\n            options?.omit,\n        )\n        const query = new QueryXStream<T>(this.__adapter as Adapter<T>, selector)\n        if (options?.autoupdate) {\n            runInAction(() => query.autoupdate = options.autoupdate)\n        }\n        return query\n    }\n\n    // TODO: need to refactor\n    static getQueryXDistinct(options: {\n        field: string,\n        filter?: Filter,\n        autoupdate?: boolean,\n    }): QueryXDistinct  {\n        const selector = new SelectorX(options?.filter)\n        const query = new QueryXDistinct(this.__adapter as Adapter<any>, selector, options.field)\n        if (options?.autoupdate) {\n            runInAction(() => query.autoupdate = options.autoupdate)\n        }\n        return query\n    }\n\n    static getQuery(selector?: Selector): Query<Model>  {\n        return new Query<Model>(this.__adapter, this.__cache, selector)\n    }\n\n    static getQueryPage(selector?: Selector): QueryPage<Model> {\n        return new QueryPage(this.__adapter, this.__cache, selector)\n    }\n\n    static get(id: number) {\n        return this.__cache.get(id)\n    }\n\n    static async findById(id: number) : Promise<Model> {\n        return this.__adapter.get(id) \n    }\n\n    static async find(selector: Selector) : Promise<Model> {\n        return this.__adapter.find(selector) \n    }\n\n    @action('MO: model - update the cache from raw')\n    static updateCache(raw_obj): Model {\n        let obj: Model\n        if (this.__cache.has(raw_obj.id)) {\n            obj = this.__cache.get(raw_obj.id)\n            obj.updateFromRaw(raw_obj)\n        }\n        else {\n            obj = new (<any>this)(raw_obj)\n        }\n        return obj\n    }\n\n    @action('MO: model - clear the cache')\n    static clearCache() {\n        // id = undefined is equal to remove obj from cache \n        for (let obj of this.__cache.values()) {\n            obj.id = undefined \n        }\n    }\n\n    @observable id: number|undefined = undefined\n\n    @observable __init_data: any   \n    @observable __errors: any   \n    __disposers = new Map()\n\n    constructor (...args) { }\n\n    get model() : any {\n        return (<any>this.constructor).__proto__\n    }\n\n    // data only from fields (no ids)\n    get raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.model.__fields) {\n            if(this[field_name] !== undefined) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    // it is raw_data + id\n    get raw_obj() : any {\n        let raw_obj: any = this.raw_data\n        raw_obj.id = this.id\n        return raw_obj\n    }\n    \n    get only_changed_raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.model.__fields) {\n            if(this[field_name] !== undefined && this[field_name] != this.__init_data[field_name]) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    get is_changed() : boolean {\n        let is_changed = false\n        for(let field_name in this.model.__fields) {\n            if (this[field_name] != this.__init_data[field_name]) {\n                is_changed = true\n            }\n        }\n        return is_changed \n    }\n\n    async action(name: string, kwargs: Object) { return await this.model.__adapter.action(this, name, kwargs) }\n    async create() { return await this.model.__adapter.create(this) }\n    async update() { return await this.model.__adapter.update(this) }\n    async delete() { return await this.model.__adapter.delete(this) }\n    async save  () { return this.id === undefined ? this.create() : this.update() }\n    // update the object from the server\n    async refresh() { return await this.model.__adapter.get(this.id) }\n\n    @action\n    setError(error: any) {\n        this.__errors = error\n    }\n\n    @action('MO: obj - refresh init data')\n    refreshInitData() {\n        if(this.__init_data === undefined) this.__init_data = {}\n        for (let field_name in this.model.__fields) {\n            this.__init_data[field_name] = this[field_name]\n        }\n    }\n\n    @action('MO: obj - cancel local changes')\n    cancelLocalChanges() {\n        for (let field_name in this.model.__fields) {\n            if (this[field_name] !== this.__init_data[field_name]) {\n                this[field_name] = this.__init_data[field_name]\n            }\n        }\n    }\n\n    @action('MO: obj - update from raw')\n    updateFromRaw(raw_obj) {\n        if (this.id === undefined && raw_obj.id !== undefined) {\n            this.id = raw_obj.id\n        }\n        // update the fields if the raw data is exist and it is different \n        for(let field_name in this.model.__fields) {\n            if (raw_obj[field_name] !== undefined && raw_obj[field_name] !== this[field_name]) {\n                this[field_name] = raw_obj[field_name]\n            }\n        }\n\n        for(let relation in this.model.__relations) {\n            const settings = this.model.__relations[relation].settings\n            if (settings.foreign_model && raw_obj[relation]) {\n                settings.foreign_model.updateCache(raw_obj[relation])\n                this[settings.foreign_id_name] = raw_obj[relation].id\n            }\n            else if (settings.remote_model && raw_obj[relation]) {\n                // many\n                if (Array.isArray(raw_obj[relation])) {\n                    for(const i of raw_obj[relation]) {\n                        settings.remote_model.updateCache(i)\n                    }\n                }\n                // one \n                else {\n                    settings.remote_model.updateCache(raw_obj[relation])\n                }\n            }\n        }\n    }\n}\n\n\n// Decorator\nexport function model(constructor) {\n    var original = constructor\n\n    original.__cache = observable(new Map())\n\n    // the new constructor\n    let f : any = function (...args) {\n        let c : any = class extends original { constructor (...args) { super(...args) } }\n            c.__proto__ = original\n\n        let obj   = new c()\n        let model = obj.model\n        makeObservable(obj)\n\n        // id field reactions\n        obj.__disposers.set('before changes',\n            intercept(obj, 'id', (change) => {\n                if (change.newValue !== undefined && obj.id !== undefined)\n                    throw new Error(`You cannot change id field: ${obj.id} to ${change.newValue}`)\n                if (obj.id !== undefined && change.newValue === undefined)\n                    obj.model.eject(obj)\n                return change\n            }))\n        obj.__disposers.set('after changes',\n            observe(obj, 'id', (change) => {\n                if (obj.id !== undefined) \n                    obj.model.inject(obj)\n            }))\n\n        // apply fields decorators\n        for (let field_name in model.__fields) {\n            model.__fields[field_name].decorator(obj, field_name)\n        }\n        // apply __relations decorators\n        for (let field_name in model.__relations) {\n            model.__relations[field_name].decorator(obj, field_name)\n        }\n\n        if (args[0]) obj.updateFromRaw(args[0])\n        obj.refreshInitData()\n        return obj\n    }\n\n    f.__proto__ = original\n    f.prototype = original.prototype   // copy prototype so intanceof operator still works\n    Object.defineProperty(f, \"name\", { value: original.name });\n    return f                      // return new constructor (will override original)\n}\n","import { Model } from './model'\n\n\nexport abstract class ReadOnlyModel extends Model {\n    async create() { throw(`You cannot create the obj, ${this.model.name} is READ ONLY model`) }\n    async update() { throw(`You cannot update the obj, ${this.model.name} is READ ONLY model`) }\n    async delete() { throw(`You cannot delete the obj, ${this.model.name} is READ ONLY model`) }\n    async save  () { throw(`You cannot save the obj, ${this.model.name} is READ ONLY model`) }\n}\n","import { extendObservable } from 'mobx'\n\n\n\nexport function field_field(obj, field_name) {\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: obj[field_name] })\n}\n\n\nexport function field(cls, field_name: string) {\n    let model = cls.constructor\n    if (model.__fields === undefined) model.__fields = {}\n\n    model.__fields[field_name] = { decorator: field_field }  // register field \n}\n","import {extendObservable, reaction, action} from 'mobx'\n\n\nfunction field_foreign(obj, field_name) {\n    let settings = obj.model.__relations[field_name].settings\n    let foreign_model   = settings.foreign_model\n    let foreign_id_name = settings.foreign_id_name\n\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: undefined })\n\n    reaction(\n        // watch on foreign cache for foreign object\n        () => {\n            if (obj[foreign_id_name] === undefined) return undefined\n            if (obj[foreign_id_name] === null) return null \n            return foreign_model.__cache.get(obj[foreign_id_name])\n        },\n        // update foreign field\n        action('MO: Foreign - update',\n            (_new, _old) => obj[field_name] = _new \n        ),\n        {fireImmediately: true}\n    )\n}\n\nexport function foreign(foreign_model: any, foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // register field \n        model.__relations[field_name] = { \n            decorator: field_foreign,\n            settings: {\n                foreign_model: foreign_model,\n                // if it is empty then try auto detect it (it works only with single id) \n                foreign_id_name: foreign_id_name !== undefined ? foreign_id_name : `${field_name}_id`\n            } \n        } \n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model } from '../model'\n\n\nfunction field_one(obj: Model, field_name) {\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: undefined })\n}\n\nexport function one(remote_model: any, remote_foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id_name = remote_foreign_id_name !== undefined ? remote_foreign_id_name: `${model.name.toLowerCase()}_id`\n        model.__relations[field_name] = { \n            decorator: field_one,\n            settings: {\n                remote_model: remote_model,\n                remote_foreign_id_name: remote_foreign_id_name\n            } \n        } \n        const disposer_name = `MO: One - update - ${model.name}.${field_name}` \n\n        observe(remote_model.__cache, (change: any) => {\n            let remote_obj\n            switch (change.type) {\n                case 'add':\n                    remote_obj = change.newValue\n                    remote_obj.__disposers.set(disposer_name, reaction(\n                        () => { return { \n                            id: remote_obj[remote_foreign_id_name],\n                            obj: model.__cache.get(remote_obj[remote_foreign_id_name])}\n                        },\n                        action(disposer_name, (_new: any, _old: any) => {\n                            if (_old?.obj) _old.obj[field_name] = _new.id ? undefined : null\n                            if (_new?.obj) _new.obj[field_name] = remote_obj\n                        }),\n                        {fireImmediately: true}\n                    ))\n                    break\n                case 'delete':\n                    remote_obj = change.oldValue\n                    if (remote_obj.__disposers.get(disposer_name)) {\n                        remote_obj.__disposers.get(disposer_name)()\n                        remote_obj.__disposers.delete(disposer_name)\n                    }\n                    let obj =  model.__cache.get(remote_obj[remote_foreign_id_name])\n                    if (obj) \n                        runInAction(() => { obj[field_name] = undefined })\n                    break\n            }\n        })\n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model } from '../model'\n\n\nfunction field_many(obj: Model, field_name) {\n    extendObservable(obj, { [field_name]: [] })\n}\n\nexport function many(remote_model: any, remote_foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id_name = remote_foreign_id_name !== undefined ? remote_foreign_id_name: `${model.name.toLowerCase()}_id`\n        model.__relations[field_name] = { \n            decorator: field_many,\n            settings: {\n                remote_model: remote_model,\n                remote_foreign_id_name: remote_foreign_id_name\n            } \n        } \n        const disposer_name = `MO: Many - update - ${model.name}.${field_name}`\n        \n        // watch for remote object in the cache \n        observe(remote_model.__cache, (remote_change: any) => {\n            let remote_obj\n            switch (remote_change.type) {\n                case 'add':\n                    remote_obj = remote_change.newValue\n                    remote_obj.__disposers.set(disposer_name , reaction(\n                        () => model.__cache.get(remote_obj[remote_foreign_id_name]),\n                        action(disposer_name, (_new, _old) => {\n                            if (_old) {\n                                const i = _old[field_name].indexOf(remote_obj)\n                                if (i > -1)\n                                    _old[field_name].splice(i, 1)\n                            }\n                            if (_new) {\n                                const i = _new[field_name].indexOf(remote_obj)\n                                if (i === -1)\n                                    _new[field_name].push(remote_obj)\n                            } \n                        }),\n                        {fireImmediately: true}\n                    ))\n                    break\n                case 'delete':\n                    remote_obj = remote_change.oldValue\n                    if (remote_obj.__disposers.get(disposer_name)) {\n                        remote_obj.__disposers.get(disposer_name)()\n                        remote_obj.__disposers.delete(disposer_name)\n                    }\n                    let obj =  model.__cache.get(remote_obj[remote_foreign_id_name])\n                    if (obj) {\n                        const i = obj[field_name].indexOf(remote_obj)\n                        if (i > -1)\n                            runInAction(() => { obj[field_name].splice(i, 1); })\n                    } \n                    break\n            }\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model, RawObject, RawData } from '../model'\nimport { Selector } from '../types'\nimport { SelectorX } from '../selector'\nimport { XFilter } from '../filters-x'\n\nexport abstract class  Adapter<M extends Model> {\n\n    abstract __create(raw_data: RawData): Promise<RawObject>\n    abstract __update(obj_id: number, only_changed_raw_data: RawData): Promise<RawObject>\n    abstract __delete(obj_id: number): Promise<void>\n    abstract __action(obj_id: number, name: string, kwargs: Object) : Promise<any>\n    abstract __get(obj_id: number): Promise<object>\n    abstract __find(props: Selector | SelectorX): Promise<object>\n    abstract __load(props: Selector | SelectorX): Promise<RawObject[]>\n    abstract getTotalCount(where?): Promise<number>\n    abstract getDistinct(where: XFilter , field: string): Promise<any[]>\n\n    readonly model: any\n\n    constructor(model: any) {\n        this.model = model \n    }\n\n    async action(obj: M, name: string, kwargs: Object) : Promise<any> {\n        return await this.model.__adapter.__action(obj.id, name, kwargs)\n    }\n\n    async create(obj: M) : Promise<M> {\n        try {\n            let raw_obj = await this.__create(obj.raw_data)\n            obj.updateFromRaw(raw_obj)\n            obj.refreshInitData() // backend can return default values and they should be in __init_data\n            obj.setError(undefined)\n        }\n        catch (e) {\n            obj.setError(e.response?.data)\n            throw e\n        }\n        return obj\n    }\n\n    async update(obj: M) : Promise<M> {\n        try {\n            let raw_obj = await this.__update(obj.id, obj.only_changed_raw_data)\n            obj.updateFromRaw(raw_obj)\n            obj.refreshInitData()\n            obj.setError(undefined)\n        }\n        catch (e) {\n            obj.setError(e.response?.data)\n            throw e\n        }\n        return obj\n    }\n\n    async delete(obj: M) : Promise<M> {\n        try {\n            await this.__delete(obj.id)\n            runInAction(() => obj.id = undefined )\n            obj.setError(undefined)\n        }\n        catch (e) {\n            obj.setError(e.response?.data)\n            throw e\n        }\n        return obj\n    }\n\n    async get(obj_id: number): Promise<M> {\n        let raw_obj = await this.__get(obj_id)\n        const obj = this.model.updateCache(raw_obj)\n        obj.refreshInitData()\n        return obj\n    }\n\n    /* Returns ONE object */\n    async find(selector: Selector | SelectorX): Promise<M> {\n        let raw_obj = await this.__find(selector)\n        const obj = this.model.updateCache(raw_obj)\n        obj.refreshInitData()\n        return obj\n    }\n\n    /* Returns MANY objects */\n    async load(selector?: Selector | SelectorX):Promise<M[]> {\n        let raw_objs = await this.__load(selector)\n        let objs: M[] = []\n        // it should be happend in one big action\n        runInAction(() => {\n            for (let raw_obj of raw_objs) {\n                const obj = this.model.updateCache(raw_obj)\n                obj.refreshInitData()\n                objs.push(obj)\n            }\n        })\n        return objs\n    }\n}\n","import { Selector } from '@/types'\nimport { Model, RawData, RawObject } from '../model'\nimport { Adapter }  from './adapter'\n\n/*\nYou can use this adapter for mock data or for unit test\n*/\n\n\nexport let local_store: {string?: {number: Model}} = {}\n\n\nfunction timeout(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nexport class LocalAdapter<M extends Model> extends Adapter<M> {\n\n    readonly store_name: string\n\n    // delays for simulate real usage, use it only for tests\n    delay: number \n\n    init_local_data(data: RawObject[]) {\n        let objs = {} \n        for(let obj of data) {\n            objs[obj.id] = obj\n        }\n        local_store[this.store_name] = objs\n    }\n\n    constructor(model: any, store_name?: string) {\n        super(model)\n        this.store_name = store_name ? store_name : model.__proto__.name\n        local_store[this.store_name] = {}\n    }\n\n    async __action(obj_id: number, name: string, kwargs: Object) : Promise<any> {\n    }\n\n    async __create(raw_data: RawData) : Promise<RawObject> {\n        if (this.delay) await timeout(this.delay) \n\n        // calculate and set new ID\n        let ids = [0]\n        for(let id of Object.keys(local_store[this.store_name])) {\n            ids.push(parseInt(id))\n        }\n        let max = Math.max.apply(null, ids)\n        raw_data.id = max + 1\n        local_store[this.store_name][raw_data.id] = raw_data\n        return raw_data as RawObject \n    }\n\n    async __update(obj_id: number, only_changed_raw_data: RawData) : Promise<RawObject> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = local_store[this.store_name][obj_id] \n        for(let field of Object.keys(only_changed_raw_data)) {\n            raw_obj[field] = only_changed_raw_data[field]\n        }\n        return raw_obj \n    }\n\n    async __delete(obj_id: number) : Promise<void> {\n        if (this.delay) await timeout(this.delay) \n        delete local_store[this.store_name][obj_id]\n    }\n\n    async __find(selector: Selector) : Promise<RawObject> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = Object.values(local_store[this.store_name])[0]\n        return raw_obj\n    }\n\n    async __get(obj_id: number) : Promise<RawObject> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = Object.values(local_store[this.store_name])[0]\n        return raw_obj\n    }\n\n    async __load (selector?: Selector) : Promise<RawObject[]> {\n        const {filter, order_by, limit, offset} = selector || {}\n        if (this.delay) await timeout(this.delay) \n        let raw_objs = []\n\n        if (filter) {\n            for(let raw_obj of Object.values(local_store[this.store_name])) {\n\n            }\n        }\n        else {\n            raw_objs = Object.values(local_store[this.store_name])\n        }\n\n        // order_by (sort)\n        if (order_by) {\n            raw_objs = raw_objs.sort((obj_a, obj_b) => {\n                let res\n                for(let sort_by_field of order_by) {\n\n                }\n                return 0\n            })\n        }\n\n        // page\n        if (limit !== undefined && offset !== undefined) {\n            raw_objs = raw_objs.slice(offset, offset+limit)\n        }\n        return raw_objs \n    }\n\n    async getTotalCount(where?): Promise<number> {\n        return Object.values(local_store[this.store_name]).length\n    }\n\n    async getDistinct(where, filed): Promise<any[]> {\n        return []\n    }\n}\n\n\n// model decorator\nexport function local() {\n    return (cls: any) => {\n        let adapter = new LocalAdapter(cls)\n        cls.__proto__.__adapter = adapter \n    }\n}\n"],"names":["match","Selector"],"mappings":"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"}
{"version":3,"file":"mobx-orm.es2015.js","sources":["../src/config.ts","../src/cache.ts","../src/repository.ts","../src/utils.ts","../src/types/type.ts","../src/types/string.ts","../src/types/number.ts","../src/types/boolean.ts","../src/types/date.ts","../src/types/datetime.ts","../src/types/array.ts","../src/types/order-by.ts","../src/convert.ts","../src/inputs/handlers/syncURL.ts","../src/inputs/handlers/syncLocalStorage.ts","../src/inputs/Input.ts","../src/inputs/ObjectInput.ts","../src/inputs/auto-reset/autoResetId.ts","../src/queries/query.ts","../src/queries/query-page.ts","../src/queries/query-cache-sync.ts","../src/queries/query-stream.ts","../src/queries/query-raw.ts","../src/queries/query-raw-page.ts","../src/queries/query-distinct.ts","../src/model/model.ts","../src/model/model-decorator.ts","../src/fields/field.ts","../src/fields/foreign.ts","../src/fields/one.ts","../src/fields/many.ts","../src/filters/Filter.ts","../src/filters/SingleFilter.ts","../src/filters/ComboFilter.ts","../src/adapters/adapter.ts","../src/adapters/read-only.ts","../src/adapters/local.ts","../src/adapters/constant.ts","../src/adapters/mock.ts","../src/forms/Form.ts","../src/forms/ObjectForm.ts"],"sourcesContent":["// TODO: remove dependency of lodash \nimport _ from 'lodash'\n\n// Global config of Mobx-ORM\nexport const config = {\n    DEFAULT_PAGE_SIZE   : 50,\n    AUTO_UPDATE_DELAY   : 100,  // ms\n    NON_FIELD_ERRORS_KEY: 'non_field_errors',\n    // NOTE: React router manage URL by own way. \n    // change UPDATE_SEARCH_PARAMS and WATCTH_URL_CHANGES in this case\n    UPDATE_SEARCH_PARAMS: (search_params: URLSearchParams) => {\n        window.history.pushState(null, '', `${window.location.pathname}?${search_params.toString()}`)\n\n    },\n    WATCTH_URL_CHANGES: (callback: any) => {\n        window.addEventListener('popstate', callback)\n        return () => { window.removeEventListener('popstate', callback) }\n    },\n\n    DEBOUNCE: (func: Function, debounce: number) => {\n        return _.debounce(func, debounce)\n    }\n}\n","import { action, makeObservable, observable } from 'mobx'\nimport { ID } from './types'\nimport { Model } from './model'\n\n\nexport class Cache<M extends Model> {\n                readonly name: string\n                readonly model: any         // TODO: type\n    @observable readonly store: Map<ID, M>\n\n    constructor(model: any, name?: string) {\n        this.name = name ? name : model.name \n        this.model = model\n        this.store = new Map<ID, M>()\n        makeObservable(this)\n    }\n\n    get(id: any): M|undefined {\n        return this.store.get(id)\n    }\n\n    @action('cache - inject')\n    inject(obj: M) {\n        if (obj.id === undefined)\n            throw new Error(`Object should have id!`)\n\n        const exist_obj = this.store.get(obj.id)\n        if (exist_obj && exist_obj !== obj)\n            throw new Error(`Object ${obj.constructor.name}: ${obj.id} already exist in the cache. ${this.name}`)\n\n        this.store.set(obj.id, obj)\n    }\n\n    @action('cache - eject')\n    eject(obj: M) {\n        return this.store.delete(obj.id)\n    }\n\n    @action('cache - update')\n    update(raw_obj: any): M {\n        let obj: M = this.store.get(raw_obj.id)\n        if (obj)\n            obj.updateFromRaw(raw_obj)\n        else {\n            obj = new this.model(raw_obj)\n            this.inject(obj)\n        }\n        return obj\n    }\n\n    @action('cache - clear')\n    clear() {\n        for (let obj of this.store.values()) obj.destroy()\n        this.store.clear()\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model } from './model'\nimport { ID } from './types'\nimport { Cache } from './cache'\nimport { Query } from './queries/query'\nimport { Filter } from './filters'\nimport { Adapter } from './adapters/adapter'\n\n\nexport class  Repository<M extends Model> {\n    readonly model      : any \n    readonly cache     ?: Cache<M>\n    readonly adapter    : Adapter<M> \n\n    constructor(model: any, adapter: any, cache?: any) {\n        this.model      = model \n        this.adapter    = adapter \n        this.cache      = cache ? cache : new Cache<M>(model)\n    }\n\n    async action(obj: M, name: string, kwargs: Object, controller?: AbortController) : Promise<any> {\n        return await this.adapter.action(obj.id, name, kwargs, controller)\n    }\n\n    async create(obj: M, controller?: AbortController) : Promise<M> {\n        let raw_obj = await this.adapter.create(obj.raw_data, controller)\n        obj.updateFromRaw(raw_obj)  // update id and other fields\n        obj.refreshInitData()       // backend can return default values and they should be in __init_data\n        return obj\n    }\n\n    async update(obj: M, controller?: AbortController) : Promise<M> {\n        let raw_obj = await this.adapter.update(obj.id, obj.only_changed_raw_data, controller)\n        obj.updateFromRaw(raw_obj)\n        obj.refreshInitData()\n        return obj\n    }\n\n    async delete(obj: M, controller?: AbortController) : Promise<M> {\n        await this.adapter.delete(obj.id, controller)\n        obj.destroy()\n        this.cache.eject(obj)\n        return obj\n    }\n\n    async get(obj_id: ID, controller?: AbortController): Promise<M> {\n        let raw_obj = await this.adapter.get(obj_id, controller)\n        if (this.cache) {\n            const obj = this.cache.update(raw_obj)\n            obj.refreshInitData()\n            return obj\n        } \n        return new this.model(raw_obj) \n    }\n\n    /* Returns ONE object */\n    async find(query: Query<M>, controller?: AbortController): Promise<M> {\n        let raw_obj = await this.adapter.find(query, controller)\n        if (this.cache) {\n            const obj = this.cache.update(raw_obj)\n            obj.refreshInitData()\n            return obj\n        } \n        return new this.model(raw_obj) \n    }\n\n    /* Returns MANY objects */\n    async load(query: Query<M>, controller?: AbortController):Promise<M[]> {\n        let raw_objs = await this.adapter.load(query, controller)\n        let objs: M[] = []\n        // it should invoke in one big action\n        runInAction(() => {\n            if (this.cache) {\n                for (let raw_obj of raw_objs) {\n                    const obj = this.cache.update(raw_obj)\n                    obj.refreshInitData()\n                    objs.push(obj)\n                }\n            } \n            else {\n                for (let raw_obj of raw_objs) {\n                    objs.push(new this.model(raw_obj))\n                }\n            }\n        })\n        return objs\n    }\n\n    async getTotalCount  (filter: Filter, controller?: AbortController): Promise<number> {\n        return await this.adapter.getTotalCount(filter, controller)\n    }\n    async getDistinct    (filter: Filter, field: string, controller?: AbortController): Promise<any[]> {\n        return await this.adapter.getDistinct(filter, field, controller)\n    }\n}\n\n\n// Model.repository is readonly, use decorator to customize repository \nexport function repository(adapter: any, cache?: any) {\n    return (cls: any) => {\n        let repository = new Repository(cls, adapter, cache) \n        cls.__proto__.repository = repository\n    }\n}","import { autorun } from 'mobx'\n\n\nexport function waitIsTrue(obj: any, field: string) : Promise<Boolean> {\n    return new Promise((resolve, reject) => { \n        autorun((reaction) => {\n            if (obj[field]) {\n                reaction.dispose()\n                resolve(true) \n            }\n        })\n    })\n}\n\nexport function waitIsFalse(obj: any, field: string) : Promise<Boolean> {\n    return new Promise((resolve, reject) => { \n        autorun((reaction) => {\n            if (!obj[field]) {\n                reaction.dispose()\n                resolve(true) \n            }\n        })\n    })\n}\n\nexport function timeout(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n","export interface TypeDescriptorProps {\n    null    ?: boolean\n    required?: boolean\n}\n/**\n *  Base class for the type descriptor\n * It is used to define the field of the model\n * It is used to convert the value to the string and back\n */ \nexport abstract class TypeDescriptor<T> {\n    /**\n     * Configuration of the descriptor \n     */\n    config: any\n    /**\n     * Convert value to the string\n     */ \n    abstract toString(value: T): string\n    /**\n     * Convert string to the value\n     */ \n    abstract fromString(value: string): T\n    /**\n     * Check if the value is valid\n     * If not, throw an error\n     */ \n    abstract validate(value: T): void\n}\n","import { TypeDescriptor, TypeDescriptorProps } from \"./type\"\n\n\nexport interface StringDescriptorProps extends TypeDescriptorProps {\n    maxLength?: number\n}\n\n\nexport class StringDescriptor extends TypeDescriptor<string> {\n    constructor(props?: StringDescriptorProps) {\n        super()\n        this.config = props ? props : { maxLength: 255 }\n    }\n\n    toString(value: string): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return value\n    }\n\n    fromString(value: string): string {\n             if (value === undefined) return undefined\n        else if (value === 'null') return null\n        else if (value ===  null) return null\n        return value\n    }\n\n    validate(value: string) {\n        if (value === null && !this.config.null)\n            throw new Error('Field is required')\n        if (value === '' && this.config.required)\n            throw new Error('Field is required')\n        if (this.config.maxLength && value.length > this.config.maxLength)\n            throw new Error('String is too long')\n    }\n}\n\n\nexport function STRING(props?: StringDescriptorProps) {\n    return new StringDescriptor(props)\n}\n","import { TypeDescriptor, TypeDescriptorProps } from \"./type\"\n\n\nexport interface NumberDescriptorProps extends TypeDescriptorProps {\n    min?: number\n    max?: number\n}\n\n\nexport class NumberDescriptor extends TypeDescriptor<number> {\n    constructor(props?: NumberDescriptorProps) {\n        super()\n        this.config = props ? props : {}\n    }\n\n    toString(value: number): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return value.toString()\n    }\n\n    fromString(value: string): number {\n        if (value === undefined) return undefined\n        if (value === 'null') return null\n        if (value ===  null) return null\n        const result = parseInt(value)\n        if (isNaN(result)) return undefined\n        return result\n    }\n\n    validate(value: number) {\n        if (value === null && !this.config.null)\n            throw new Error('Field is required')\n        if (this.config.min && value < this.config.min)\n            throw new Error('Number is too small')\n        if (this.config.max && value > this.config.max)\n            throw new Error('Number is too big')\n    }\n}\n\n\nexport function NUMBER(props?: NumberDescriptorProps) {\n    return new NumberDescriptor(props)\n}\n","import { TypeDescriptor, TypeDescriptorProps } from \"./type\"\n\nexport interface BooleanDescriptorProps extends TypeDescriptorProps {}\n\n\nexport class BooleanDescriptor extends TypeDescriptor<boolean>{\n    constructor(props?: BooleanDescriptorProps) {\n        super()\n        this.config = props\n    }\n\n    toString(value: boolean): string {\n        return value.toString()\n    }\n\n    fromString(value: string): boolean {\n        return value === 'true'\n    }\n\n    validate(value: boolean): void {\n        if (this.config?.required && value === undefined)\n            throw new Error('Field is required')\n    }\n}\n\n\nexport function BOOLEAN(props?: BooleanDescriptorProps) {\n    return new BooleanDescriptor(props)\n}\n","import { TypeDescriptor, TypeDescriptorProps } from \"./type\"\n\n\nexport interface DateDescriptorProps extends TypeDescriptorProps {\n    min?: Date \n    max?: Date \n}\n\nexport class DateDescriptor extends TypeDescriptor<Date> {\n    constructor(props?: DateDescriptorProps) {\n        super()\n        this.config = props\n    }\n    toString(value: Date): string {\n        return value.toISOString()\n    }\n    fromString(value: string): Date {\n        return new Date(value)\n    }\n    validate(value: Date) {\n        if (this.config.min && value < this.config.min)\n            throw new Error('Date is too early')\n        if (this.config.max && value > this.config.max)\n            throw new Error('Date is too late')\n    }\n}\n\nexport function DATE(props?: DateDescriptorProps) {\n    return new DateDescriptor(props)\n}\n","import { DateDescriptor, DateDescriptorProps } from \"./date\"\n\n\n\n\nexport class DateTimeDescriptor extends DateDescriptor {\n    toString(value: Date): string {\n        return value.toISOString()\n    }\n}\n\n\nexport function DATETIME(props?: DateDescriptorProps) {\n    return new DateTimeDescriptor(props)\n}","import { TypeDescriptor, TypeDescriptorProps } from \"./type\"\n\n\nexport interface ArrayDescriptorProps<T> extends TypeDescriptorProps {\n    type: TypeDescriptor<T> \n    minItems?: number\n    maxItems?: number\n}\n\nexport class ArrayDescriptor<T> extends TypeDescriptor<T[]> {\n    constructor(props: ArrayDescriptorProps<T>) {\n        super()\n        this.config = props\n    }\n    toString(value: T[]): string {\n        return value.map(item => this.config.type.toString(item)).join(',')\n    }\n    fromString(value: string): T[] {\n        return value.split(',').map(item => this.config.type.fromString(item))\n    }\n    validate(value: T[]) {\n        if (this.config.minItems && value.length < this.config.minItems)\n            throw new Error('Array is too short')\n        if (this.config.maxItems && value.length > this.config.maxItems)\n            throw new Error('Array is too long')\n        value.forEach(item => this.config.type.validate(item))\n    }\n}\n\nexport function ARRAY<T>(props?: ArrayDescriptorProps<T>) {\n    return new ArrayDescriptor(props)\n}\n","import { TypeDescriptor } from \"./type\"\n\n\nexport const ASC = true \nexport const DESC = false \n// DEPRIECATED\nexport type ORDER_BY = Map<string, boolean>\n\n\nexport class OrderByDescriptor extends TypeDescriptor<[string, boolean]>{\n    constructor() {\n        super()\n    }\n    toString(value: [string, boolean]): string {\n        if (!value || !value[0]) return undefined\n        return value[1] ? value[0] : '-' + value[0]\n    }\n    fromString(value: string): [string, boolean] {\n        if (!value) return undefined\n        return value[0] === '-' ? [value.substring(1), false] : [value, true]\n    } \n    validate(value: [string, boolean]): void {\n        if (!value)\n            throw new Error('Field is required') \n        if (!value[0])\n            throw new Error('Field is required')\n        if (value[1] === undefined)\n            throw new Error('Field is required')\n    }\n}\n\nexport function ORDER_BY2() {\n    return new OrderByDescriptor()\n}\n","import { ASC, DESC, ORDER_BY } from \"./types\"\n\nexport enum TYPE {\n    ID              = 'id',\n    STRING          = 'string',\n    NUMBER          = 'number',\n    DATE            = 'date',\n    DATETIME        = 'datetime',\n    BOOLEAN         = 'boolean',\n    ARRAY_ID        = 'array-id',\n    ARRAY_STRING    = 'array-string',\n    ARRAY_NUMBER    = 'array-number',\n    ARRAY_DATE      = 'array-date',\n    ARRAY_DATETIME  = 'array-datetime',\n    ORDER_BY        = 'order-by',\n}\nconst ARRAYS = [TYPE.ARRAY_STRING, TYPE.ARRAY_NUMBER, TYPE.ARRAY_DATE, TYPE.ARRAY_DATETIME, TYPE.ORDER_BY]\n\nconst arrayToString = (type, value) => {\n    let result = [] \n    // if (value === null) return undefined\n    if (value) {\n        for (const i of value) {\n            let v = toString(type, i) \n            if (v !== undefined)\n                result.push(v)\n        }\n    }\n    return result.length ? result.join(',') : undefined\n}\n\nconst stringToArray = (type, value) => {\n    let result = [] \n    if (value) {\n        for (const i of value.split(',')) {\n            let v = stringTo(type, i) \n            if (v !== undefined) {\n                result.push(v)\n            }\n        }\n    }\n    return result\n}\n\nexport const toString = (valueType: TYPE, value: any): string => {\n    if (value === undefined) return undefined\n    if (value === null && !ARRAYS.includes(valueType)) return 'null'\n\n    switch (valueType) {\n        case TYPE.NUMBER:   return ''+value\n        case TYPE.ID    :   return ''+value\n        case TYPE.STRING:   return value\n        case TYPE.DATE:     return value instanceof Date ? (value as Date).toISOString().split('T')[0] : \"\"\n        case TYPE.DATETIME: return value instanceof Date ? (value as Date).toISOString() : \"\"\n        case TYPE.BOOLEAN:  return !!value ? 'true' : 'false' \n        case TYPE.ARRAY_STRING  : return arrayToString(TYPE.STRING  , value)\n        case TYPE.ARRAY_NUMBER  : return arrayToString(TYPE.NUMBER  , value)\n        case TYPE.ARRAY_DATE    : return arrayToString(TYPE.DATE    , value)\n        case TYPE.ARRAY_DATETIME: return arrayToString(TYPE.DATETIME, value)\n        case TYPE.ORDER_BY: \n            if (value) {\n                let result = ''\n                for (const [key, val] of value) {\n                    if (result)       result += ','\n                    if (val === DESC) result += '-'\n                    result += key.replace(/\\./g, '__')\n                }\n                return result ? result : undefined\n            }\n            return undefined \n    }\n}\n\n\nexport const stringTo = (valueType: TYPE, value: string, enumType?: Object): any => {\n    let result\n\n    if (!ARRAYS.includes(valueType)) {\n             if (value === undefined) return undefined\n        else if (value === 'null') return null\n        else if (value ===  null) return null\n    }\n\n    switch (valueType) {\n        case TYPE.NUMBER:   \n            result = parseInt(value)\n            if (isNaN(result))\n                return undefined\n            return result\n        case TYPE.ID:\n            result = parseInt(value)\n            if (isNaN(result))\n                return value \n            return result\n        case TYPE.STRING:   return value\n        case TYPE.DATE:     return new Date(value)\n        case TYPE.DATETIME: return new Date(value)\n        case TYPE.BOOLEAN:  return value === 'true' ? true : value === 'false' ? false : undefined\n        case TYPE.ARRAY_STRING  : return stringToArray(TYPE.STRING  , value)\n        case TYPE.ARRAY_NUMBER  : return stringToArray(TYPE.NUMBER  , value)\n        case TYPE.ARRAY_DATE    : return stringToArray(TYPE.DATE    , value)\n        case TYPE.ARRAY_DATETIME: return stringToArray(TYPE.DATETIME, value)\n        case TYPE.ORDER_BY:\n            result = new Map() as ORDER_BY \n            if (value) {\n                for (const item of value.split(',')) {\n                    if (item[0] === '-')\n                        result.set(item.slice(1), DESC)\n                    else\n                        result.set(item, ASC)\n                }\n            }\n            return result\n    }\n}\n","import { reaction } from 'mobx'\nimport { config } from '../../config'\nimport { Input } from '../Input'\n\n\nexport const syncURLHandler = (paramName: string, input: Input<any>) => {\n    const searchParams = new URLSearchParams(window.location.search)\n    // init from URL Search Params\n    if (searchParams.has(paramName)) {\n        input.setFromString(searchParams.get(paramName))\n    }\n    // watch for URL changes and update Input\n    function updataInputFromURL() {\n        const searchParams = new URLSearchParams(window.location.search)\n        if (searchParams.has(paramName)) {\n            const raw_value = searchParams.get(paramName)\n            const exist_raw_value = input.toString() \n            if (raw_value !== exist_raw_value) {\n                input.setFromString(raw_value)\n            }\n        }\n        else if (input.value !== undefined)\n            input.set(undefined)\n    }\n    input.__disposers.push(config.WATCTH_URL_CHANGES(updataInputFromURL.bind(input)))\n    // watch for Input changes and update URL\n    input.__disposers.push(reaction(\n        () => input.toString(),  // I cannot use this.value because it can be a Map\n        (value) => {\n            const searchParams = new URLSearchParams(window.location.search)\n            if (value === '' || value === undefined)\n                searchParams.delete(paramName)\n            else if (searchParams.get(paramName) !== value)\n                searchParams.set(paramName, value)\n\n            config.UPDATE_SEARCH_PARAMS(searchParams)\n        },\n        { fireImmediately: true },\n    ))\n}\n","import { reaction } from 'mobx'\nimport { Input } from '../Input'\n\n\nexport const syncLocalStorageHandler = (paramName: string, input: Input<any>) => {\n    // init value from localStorage\n    if (paramName in localStorage) {\n        let raw_value = localStorage.getItem(paramName)\n        const exist_raw_value = input.toString() \n        if (exist_raw_value !== raw_value)\n            input.setFromString(raw_value)\n    }\n    // watch for changes and save to localStorage\n    input.__disposers.push(reaction(\n        () => input.value,\n        (value, previousValue) => {\n            // WARNING: input should return 'null' if value is null\n            // because localStorage cannot store null\n            if (value !== undefined)\n                localStorage.setItem(paramName, input.toString())\n            else\n                localStorage.removeItem(paramName)\n        },\n    ))\n}\n","import { action, makeObservable, observable, runInAction } from 'mobx'\nimport { ORDER_BY } from '../types'\nimport { stringTo, toString, TYPE } from '../convert'\nimport { syncLocalStorageHandler, syncURLHandler } from './handlers'\nimport { config } from '../config'\n\n\nexport interface InputConstructorArgs<T> {\n    value               ?: T\n    required            ?: boolean\n    disabled            ?: boolean\n    debounce            ?: number\n    syncURL             ?: string\n    syncLocalStorage    ?: string\n    type                ?: TYPE\n}\n\nexport class Input<T> {\n    readonly type: TYPE\n\n    @observable          value               : T\n    @observable          isRequired          : boolean\n    @observable          isDisabled          : boolean\n    @observable          isDebouncing        : boolean          //  \n    @observable          isNeedToUpdate      : boolean          //  \n    @observable          errors              : string[] = []    // validations or backend errors put here\n                readonly debounce            : number\n                readonly syncURL            ?: string\n                readonly syncLocalStorage   ?: string\n                         __disposers = [] \n    \n    constructor (args?: InputConstructorArgs<T>) {\n        // init all observables before use it in reaction\n        this.value              = args?.value\n        this.type               = args?.type\n        this.isRequired         = !!args?.required\n        this.isDisabled         = !!args?.disabled\n        this.isDebouncing       = false \n        this.isNeedToUpdate     = false \n        this.debounce           = args?.debounce\n        this.syncURL            = args?.syncURL\n        this.syncLocalStorage   = args?.syncLocalStorage\n        makeObservable(this)\n        if (this.debounce) {\n            this.stopDebouncing = config.DEBOUNCE(\n                () => runInAction(() => this.isDebouncing = false),\n                this.debounce\n            )\n        }\n        // the order is important, because syncURL has more priority under syncLocalStorage\n        // i.e. init from syncURL can overwrite value from syncLocalStorage\n        this.syncLocalStorage   && syncLocalStorageHandler(this.syncLocalStorage, this)\n        this.syncURL            && syncURLHandler(this.syncURL, this)\n    }\n\n    destroy () {\n        this.__disposers.forEach(disposer => disposer())\n    }\n\n    private stopDebouncing: () => void\n\n    @action\n    public set (value: T) {\n        this.value = value\n        this.isNeedToUpdate = false\n        if (this.debounce) {\n            this.isDebouncing = true \n            this.stopDebouncing()       // will stop debouncing after debounce\n        }\n    }\n\n    get isReady () {\n        if (this.isDisabled)\n            return true\n        return !(this.errors.length\n            ||  this.isDebouncing\n            ||  this.isNeedToUpdate\n            ||  this.isRequired && (this.value === undefined || (Array.isArray(this.value) && !this.value.length))\n        )\n    }\n\n    setFromString(value: string) {\n        this.set(stringTo(this.type, value))\n    }\n    toString() {\n        return toString(this.type, this.value)\n    }\n}\n\n// export class StringInput        extends Input<string>   { readonly type = TYPE.STRING }\nexport const StringInput = (args?: InputConstructorArgs<string>) : Input<string> => {\n    if (!args) args = {}\n    args.type = TYPE.STRING\n    return new Input<string>(args)\n}\n// export class NumberInput        extends Input<number>   { readonly type = TYPE.NUMBER }\nexport const NumberInput = (args?: InputConstructorArgs<number>) : Input<number> => {\n    if (!args) args = {}\n    args.type = TYPE.NUMBER\n    return new Input<number>(args)\n}\n// export class DateInput          extends Input<Date>     { readonly type = TYPE.DATE }\nexport const DateInput = (args?: InputConstructorArgs<Date>) : Input<Date> => {\n    if (!args) args = {}\n    args.type = TYPE.DATE\n    return new Input<Date>(args)\n}\n// export class DateTimeInput      extends Input<Date>     { readonly type = TYPE.DATETIME }\nexport const DateTimeInput = (args?: InputConstructorArgs<Date>) : Input<Date> => {\n    if (!args) args = {}\n    args.type = TYPE.DATETIME\n    return new Input<Date>(args)\n}\n// export class BooleanInput       extends Input<boolean>  { readonly type = TYPE.BOOLEAN }\nexport const BooleanInput = (args?: InputConstructorArgs<boolean>) : Input<boolean> => {\n    if (!args) args = {}\n    args.type = TYPE.BOOLEAN\n    return new Input<boolean>(args)\n}\n// export class OrderByInput       extends Input<ORDER_BY> { readonly type = TYPE.ORDER_BY }\nexport const OrderByInput = (args?: InputConstructorArgs<ORDER_BY>) : Input<ORDER_BY> => {\n    if (!args) args = {}\n    args.type = TYPE.ORDER_BY\n    return new Input<ORDER_BY>(args)\n}\n// export class ArrayStringInput   extends ArrayInput<string[]> { readonly type = TYPE.ARRAY_STRING }\nexport const ArrayStringInput = (args?: InputConstructorArgs<string[]>) : Input<string[]> => {\n    if (args === undefined || args.value === undefined )\n        args = { ...args, value: [] }\n    args.type = TYPE.ARRAY_STRING\n    return new Input<string[]>(args)\n}\n// export class ArrayNumberInput   extends ArrayInput<number[]> { readonly type = TYPE.ARRAY_NUMBER }\nexport const ArrayNumberInput = (args?: InputConstructorArgs<number[]>) : Input<number[]> => {\n    if (args === undefined || args.value === undefined )\n        args = { ...args, value: [] }\n    args.type = TYPE.ARRAY_NUMBER\n    return new Input<number[]>(args)\n}\n// export class ArrayDateInput     extends ArrayInput<Date[]>   { readonly type = TYPE.ARRAY_DATE }\nexport const ArrayDateInput = (args?: InputConstructorArgs<Date[]>) : Input<Date[]> => {\n    if (args === undefined || args.value === undefined )\n        args = { ...args, value: [] }\n    args.type = TYPE.ARRAY_DATE\n    return new Input<Date[]>(args)\n}\n// export class ArrayDateTimeInput extends ArrayInput<Date[]>   { readonly type = TYPE.ARRAY_DATETIME }\nexport const ArrayDateTimeInput = (args?: InputConstructorArgs<Date[]>) : Input<Date[]> => {\n    if (args === undefined || args.value === undefined )\n        args = { ...args, value: [] }\n    args.type = TYPE.ARRAY_DATETIME\n    return new Input<Date[]>(args)\n}","import { reaction, runInAction } from 'mobx'\nimport { Query } from '../queries'\nimport { Model } from '../model'\nimport { ID } from '../types'\nimport { TYPE } from '../convert'\nimport { Input, InputConstructorArgs } from './Input'\n\n\nexport interface ObjectInputConstructorArgs<T, M extends Model> extends InputConstructorArgs<T> {\n    options   ?: Query<M>\n    autoReset ?: (input: ObjectInput<M>) => void\n}\n\nexport class ObjectInput<M extends Model> extends Input<ID> {\n    readonly options?: Query<M>\n\n    constructor (args?: ObjectInputConstructorArgs<ID, M>) {\n        if (!args) args = {}\n        args.type = TYPE.ID\n        super(args as InputConstructorArgs<ID>)\n        this.options = args.options\n        if (this.options) {\n            this.__disposers.push(reaction(\n                () => this.options.isReady,\n                (isReady, previousValue) => {\n                    if(isReady && !previousValue) {\n                        runInAction(() => this.isNeedToUpdate = true)\n                        args?.autoReset && args.autoReset(this)\n                    }\n                }\n            ))\n        }\n    }\n\n    get isReady () {\n        // options should be checked first\n        // because without options it doesn't make sense to check value \n        return this.options ? this.options.isReady && super.isReady : super.isReady\n    }\n\n    destroy () {\n        super.destroy()\n        this.options?.destroy()\n    }\n}\n","import { ObjectInput } from '../ObjectInput'\n\n\nexport function autoResetId(input: ObjectInput<any>) {\n    // if value still in options, do nothing\n    for (const item of input.options.items) {\n        if (item.id === input.value) {\n            // have to set value to trigger reaction\n            input.set(input.value)\n            return\n        }\n    }\n    // otherwise set first available id or undefined\n    input.set(input.options.items[0]?.id)\n}\n","import { action, makeObservable, observable, reaction, runInAction } from 'mobx'\nimport { Repository } from '../repository'\nimport { Model } from '../model'\nimport { Filter } from '../filters/Filter'\nimport { waitIsFalse } from '../utils'\nimport { OrderByInput, NumberInput, ArrayStringInput, Input } from '../inputs'\nimport { ORDER_BY } from '../types'\nimport { config } from '../config'\n\n\nexport const DISPOSER_AUTOUPDATE = \"__autoupdate\"\n\nexport interface QueryProps<M extends Model> {\n    repository                  ?: Repository<M>\n    //\n    filter                      ?: Filter\n    orderBy                     ?: Input<ORDER_BY>\n    // pagination\n    offset                      ?: Input<number>\n    limit                       ?: Input<number>\n    // fields controll\n    relations                   ?: Input<string[]>\n    fields                      ?: Input<string[]> \n    omit                        ?: Input<string[]> \n    //\n    autoupdate                  ?: boolean\n}\n\n/* Query live cycle:\n\n    Event           isLoading   needToUpdate    isReady     items\n    ------------------------------------------------------------------------\n    Create          -           -               -           []\n\n\n    loading start   +!          -               -           reset error\n        |\n    loading finish  -!          -               +!          set some items or error\n\n\n    filter changes  -           +!              -!\n        |\n    loading start   +!          -!              -           reset error\n        |\n    loading finish  -!          -               +!          set some items or error\n\n*/\n\nexport class Query <M extends Model> {\n\n    readonly repository: Repository<M>\n    readonly filter    : Filter\n    readonly orderBy   : Input<ORDER_BY>\n    readonly offset    : Input<number>\n    readonly limit     : Input<number>\n    readonly relations : Input<string[]>\n    readonly fields    : Input<string[]>\n    readonly omit      : Input<string[]>\n\n    @observable protected __items: M[] = []         // items from the server\n    @observable total           : number              // total count of items on the server, usefull for pagination\n    @observable isLoading       : boolean = false     // query is loading the data\n    @observable isNeedToUpdate  : boolean = true      // query was changed and we need to update the data\n    @observable timestamp       : number              // timestamp of the last update, usefull to aviod to trigger react hooks twise\n    @observable error           : string              // error message\n\n    get items       () { return this.__items }      // the items can be changed after the load (post processing)\n\n    protected controller        : AbortController\n    protected disposers         : (()=>void)[] = []\n    protected disposerObjects   : {[field: string]: ()=>void} = {}\n\n    constructor(props: QueryProps<M>) {\n        let {\n            repository, filter, orderBy, offset, limit,\n            relations, fields, omit,\n            autoupdate = false \n        } = props\n\n        this.repository = repository \n        this.filter    = filter\n        this.orderBy   = orderBy    ? orderBy   : OrderByInput() \n        this.offset    = offset     ? offset    : NumberInput() \n        this.limit     = limit      ? limit     : NumberInput() \n        this.relations = relations  ? relations : ArrayStringInput()\n        this.fields    = fields     ? fields    : ArrayStringInput()\n        this.omit      = omit       ? omit      : ArrayStringInput()\n        this.autoupdate = autoupdate\n        makeObservable(this)\n\n        this.disposers.push(reaction(\n            // watch the dependenciesAreReady and value only\n            // because isNeedToUpdate should be set to true \n            // if dependenciesAreReady or/and value are triggered and isNeedToUpdate is false\n            () => {\n                return {dependenciesAreReady: this.dependenciesAreReady, value: this.toString} \n            },\n            ({dependenciesAreReady, value}) => {\n                if(dependenciesAreReady && !this.isNeedToUpdate)\n                    runInAction(() => this.isNeedToUpdate = true)\n            },\n            { fireImmediately: true }\n        ))\n    }\n\n    destroy() {\n        this.controller?.abort()\n        while(this.disposers.length) {\n            this.disposers.pop()()\n        }\n        for(let __id in this.disposerObjects) {\n            this.disposerObjects[__id]()\n            delete this.disposerObjects[__id]\n        } \n    }\n\n    loading = async () => waitIsFalse(this, 'isLoading')\n    ready   = async () => waitIsFalse(this, 'isReady')\n\n    get autoupdate() : boolean {\n        return !! this.disposerObjects[DISPOSER_AUTOUPDATE]\n    }\n\n    // Note: autoupdate trigger always the load(),\n    // shadowLoad() is not make sense to trigger by autoupdate\n    // because autoupdate means => user have changed something on UI inputs\n    // and we should to show the UI reaction\n    set autoupdate(value: boolean) {\n        if (value !== this.autoupdate) {  // indepotent guarantee\n            // on \n            if (value) {\n                this.disposerObjects[DISPOSER_AUTOUPDATE] = reaction(\n                    () => this.isNeedToUpdate && this.dependenciesAreReady,\n                    (updateIt, old) => {\n                        if(updateIt && updateIt !== old) {\n                            // run the load() in the next tick\n                            setTimeout(() => this.load())\n                            // }, config.AUTO_UPDATE_DELAY)\n                        }\n\n                    },\n                    { fireImmediately: true, delay: config.AUTO_UPDATE_DELAY }\n                )\n            }\n            // off\n            else {\n                this.disposerObjects[DISPOSER_AUTOUPDATE]()\n                delete this.disposerObjects[DISPOSER_AUTOUPDATE]\n            }\n        }\n    }\n\n    // Need to quick compare the querie's state\n    toString() {\n        return `${this.filter === undefined ? '' : this.filter.URLSearchParams.toString()}`\n        +`|${this.orderBy.toString()}`\n        +`|${this.offset.toString()}|${this.limit.toString()}`\n        +`|${this.relations.toString()}|${this.fields.toString()}|${this.omit.toString()}`\n    }\n\n    get dependenciesAreReady() {\n        return (this.filter === undefined || this.filter.isReady)\n            && this.orderBy   .isReady\n            && this.offset    .isReady\n            && this.limit     .isReady\n            && this.relations .isReady\n            && this.fields    .isReady\n            && this.omit      .isReady\n    }\n\n    // NOTE: if we use only shadowLoad() the isLoading will be always false.\n    // In this case isReady is equal to !isNeedToUpdate.\n    get isReady() {\n        return !this.isNeedToUpdate && !this.isLoading\n    }\n\n    // use it if everybody should know that the query data is updating\n    @action('MO: Query Base - load')\n    async load() {\n        this.isLoading = true\n        try {\n            await this.shadowLoad()\n        }\n        finally {\n            runInAction(() => {\n                // the loading can be canceled by another load\n                // in this case we should not touch isLoading\n                if (!this.controller) this.isLoading = false\n            })\n        }\n    }\n\n    // use it directly instead of load() if nobody should know that the query data is updating\n    // for example you need to update the current data on the page and you don't want to show a spinner\n    @action('MO: Query Base - shadow load')\n    async shadowLoad() {\n\n        this.isNeedToUpdate = false \n        this.error = undefined\n\n        if (this.controller)\n            this.controller.abort()\n        this.controller = new AbortController()\n\n        // NOTE: Date.now() is used to get the current timestamp\n        //       and it can be the same in the same tick \n        //       in this case we should increase the timestamp by 1\n        const now = Date.now()\n        if (this.timestamp === now) this.timestamp += 1\n        else                        this.timestamp = now \n\n        try {\n            await this.__load()\n        }\n        catch (e) {\n            // ignore the cancelation of the request\n            if (e.name !== 'AbortError' && e.message !== 'canceled')\n                runInAction(() => this.error = e.message )\n        }\n        finally {\n            this.controller = undefined\n        }\n    }\n\n    protected async __load() {\n        const objs = await this.repository.load(this, this.controller)\n        runInAction(() => this.__items = objs)\n    }\n}\n","import { action, runInAction } from 'mobx'\nimport { Query, QueryProps } from './query'\nimport { config } from '../config'\nimport { Model } from '../model'\n\n\nexport class QueryPage<M extends Model> extends Query<M> {\n\n    @action('MO: set page')      setPage    (n   : number) { this.offset.set(this.limit.value * (n > 0 ? n-1 : 0)) }\n    @action('MO: set page size') setPageSize(size: number) { this.limit.set(size); this.offset.set(0) }\n    goToFirstPage() { this.setPage(1) }\n    goToPrevPage () { this.setPage(this.current_page - 1) }\n    goToNextPage () { this.setPage(this.current_page + 1) }\n    goToLastPage () { this.setPage(this.total_pages) }\n\n    get is_first_page() : boolean { return this.offset.value === 0 }\n    get is_last_page () : boolean { return this.offset.value + this.limit.value >= this.total }\n    get current_page()  : number  { return this.offset.value / this.limit.value + 1 }\n    get total_pages()   : number  { return this.total ? Math.ceil(this.total / this.limit.value) : 1 }\n    // for compatibility with js code style\n    get isFirstPage() : boolean { return this.is_first_page }\n    get isLastPage () : boolean { return this.is_last_page } \n    get currentPage() : number  { return this.current_page } \n    get totalPages()  : number  { return this.total_pages } \n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        runInAction(() => {\n            if (this.offset.value === undefined) this.offset.set(0)\n            if (this.limit.value  === undefined) this.limit.set(config.DEFAULT_PAGE_SIZE)\n        })\n    }\n\n    async __load() {\n        const [objs, total] = await Promise.all([\n            this.repository.load(this, this.controller),\n            this.repository.getTotalCount(this.filter, this.controller)\n        ])\n        runInAction(() => {\n            this.__items = objs\n            this.total = total\n        })\n    }\n}\n","import { action, computed, observe, reaction } from 'mobx'\nimport { Query, QueryProps } from './query'\nimport { ASC } from '../types'\nimport { Model } from '../model'\n\n\nexport class QueryCacheSync <M extends Model> extends Query<M> {\n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        // watch the cache for changes, and update items if needed\n        this.disposers.push(observe(props.repository.cache.store, \n            action('MO: Query - update from cache changes',\n            (change: any) => {\n                if (change.type == 'add') {\n                    this.__watch_obj(change.newValue)\n                }\n                if (change.type == \"delete\") {\n                    let id = change.name\n                    let obj = change.oldValue\n\n                    this.disposerObjects[id]()\n                    delete this.disposerObjects[id]\n\n                    let i = this.__items.indexOf(obj)\n                    if (i != -1) {\n                        this.__items.splice(i, 1)\n                        this.total = this.__items.length\n                    }\n                }\n            })\n        ))\n\n        // ch all exist objects of model \n        for(let [id, obj] of props.repository.cache.store) {\n            this.__watch_obj(obj)\n        }\n    }\n\n    async __load() {\n        if (this.controller) this.controller.abort()\n        this.controller = new AbortController()\n        try {\n            await this.repository.load(this, this.controller)\n            // Query don't need to overide the __items,\n            // query's items should be get only from the cache\n        } catch (e) {\n            if (e.name !== 'AbortError')  throw e\n        } \n        // we have to wait the next tick\n        // mobx should finished recalculation for model-objects\n        await Promise.resolve();\n        // await new Promise(resolve => setTimeout(resolve))\n    }\n\n    @computed\n    get items() { \n        let __items = this.__items.map(x=>x) // copy __items (not deep)\n        if (this.orderBy.value && this.orderBy.value.size) {\n            let compare = (a, b) => {\n                for(const [key, value] of this.orderBy.value) {\n                    if (value === ASC) {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return  1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return -1\n                        if (a[key] < b[key]) return -1\n                        if (a[key] > b[key]) return  1\n                    }\n                    else {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return -1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return  1\n                        if (a[key] < b[key]) return  1\n                        if (a[key] > b[key]) return -1\n                    }\n                }\n                return 0\n            }\n            __items.sort(compare)\n        }\n        return __items \n    }\n\n    __watch_obj(obj) {\n        if (this.disposerObjects[obj.id]) this.disposerObjects[obj.id]()\n        this.disposerObjects[obj.id] = reaction(\n            () =>  !this.filter || this.filter.isMatch(obj),\n            action('MO: Query - obj was changed',\n            (should: boolean) => {\n                let i = this.__items.indexOf(obj)\n                // should be in the items and it is not in the items? add it to the items\n                if ( should && i == -1) this.__items.push(obj)\n                // should not be in the items and it is in the items? remove it from the items\n                if (!should && i != -1) this.__items.splice(i, 1)\n\n                if (this.total != this.__items.length) \n                    this.total = this.__items.length\n            }),\n            { fireImmediately: true }\n        )\n    }\n}\n","import { action, runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { Query, QueryProps } from './query'\nimport { config } from '../config'\n\n\nexport class QueryStream <M extends Model> extends Query<M> {\n    // you can reset all and start from beginning\n    @action('MO: fisrt page') goToFirstPage() { this.__items = []; this.offset.set(0) }\n    // you can scroll only forward\n    @action('MO: next page')  goToNextPage () { this.offset.set(this.offset.value + this.limit.value) }\n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        runInAction(() => {\n            if (this.offset.value === undefined) this.offset.set(0)\n            if (this.limit.value  === undefined) this.limit.set(config.DEFAULT_PAGE_SIZE)\n        })\n    }\n\n    async __load() {\n        const objs = await this.repository.load(this, this.controller)\n        runInAction(() => {\n            this.__items.push(...objs)\n            // total is not make sense for infinity queries\n            // total = 1 show that last page is reached\n            if (objs.length < this.limit.value) this.total = 1\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Query } from './query'\nimport { Model } from '../model'\n\n/**\n * QueryRaw is a class to load raw objects from the server \n * without converting them to models using the repository.\n */\n\nexport class QueryRaw<M extends Model> extends Query<M> {\n    async __load() {\n        const objs = await this.repository.adapter.load(this, this.controller)\n        runInAction(() => {\n            this.__items = objs\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { QueryPage } from './query-page'\n\n/**\n * QueryRawPage is a class to load raw objects from the server \n * without converting them to models using the repository.\n */\n\nexport class QueryRawPage<M extends Model> extends QueryPage<M> {\n    async __load() {\n        const objs = await this.repository.adapter.load(this)\n        const total = await this.repository.getTotalCount(this.filter)\n        runInAction(() => {\n            this.__items = objs\n            this.total = total\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Query, QueryProps } from './query'\n\n\nexport class QueryDistinct extends Query<any> {\n    readonly field: string\n    \n    constructor(field: string, props: QueryProps<any>) {\n        super(props)\n        this.field = field\n    }\n\n    async __load() {\n        const objs = await this.repository.getDistinct(this.filter, this.field, this.controller)\n        runInAction(() => {\n            this.__items = objs\n        })\n    }\n}\n","import { action,  observable } from 'mobx'\nimport { \n    Query, QueryProps, QueryPage, QueryRaw, QueryRawPage,\n    QueryCacheSync, QueryDistinct, QueryStream\n} from '../queries'\nimport { Repository } from '../repository'\nimport { ID } from '../types'\n\n\nexport default abstract class Model {\n    static readonly repository  : Repository<Model>\n\n    // Original Class will be decorated by model decorator,\n    // use this flag to detect original class \n    static readonly isOriginalClass = true\n\n    // - fields\n    // - relations (not exist on outside)\n    static __fields       : {\n        [field_name: string]: {\n            decorator   : (obj: Model, field_name: string) => void,\n            settings    : any,\n            serialize   : any,\n            deserialize : any\n        }\n    }\n    // relateions is a list of field only foreign, one or many types\n    static __relations : {\n        [field_name: string]: {\n            decorator   : (obj: Model, field_name: string) => void,\n            settings    : any\n            // there is no serializer of deserializer because\n            // it is derivative and does not come from outside\n        }\n    }\n\n    static getQuery<T extends Model>(props: QueryProps<T>): Query<T> {\n        return new Query<T>({...props, repository: this.repository as Repository<T> })\n    }\n\n    static getQueryPage(props: QueryProps<Model>): QueryPage<Model> {\n        return new QueryPage({...props, repository: this.repository })\n    }\n\n    static getQueryRaw(props: QueryProps<Model>): QueryRaw<Model> {\n        return new QueryRaw({...props, repository: this.repository })\n    }\n\n    static getQueryRawPage(props: QueryProps<Model>): QueryRawPage<Model> {\n        return new QueryRawPage({...props, repository: this.repository })\n    }\n\n    static getQueryCacheSync(props: QueryProps<Model>): QueryCacheSync<Model> {\n        return new QueryCacheSync({...props, repository: this.repository })\n    }\n\n    static getQueryStream(props: QueryProps<Model>): QueryStream<Model> {\n        return new QueryStream({...props, repository: this.repository })\n    }\n\n    static getQueryDistinct(field: string, props: QueryProps<Model>): QueryDistinct {\n        return new QueryDistinct(field, {...props, repository: this.repository })\n    }\n\n    static get(id: ID) {\n        return this.repository.cache.get(id)\n    }\n\n    static async findById(id: ID) : Promise<Model> {\n        return this.repository.get(id)\n    }\n\n    static async find(query: Query<Model>) : Promise<Model> {\n        return this.repository.find(query)\n    }\n\n    @observable id: ID = undefined\n    // TODO: should it be observable?\n    @observable __init_data: any   \n    __disposers = new Map()\n\n    constructor (...args) {}\n\n    @action('model - destroy')\n    destroy() {\n        while(this.__disposers.size) {\n            this.__disposers.forEach((disposer, key) => {\n                disposer()\n                this.__disposers.delete(key)\n            })\n        }\n    }\n\n    get model() : any {\n        return (<any>this.constructor).__proto__\n    }\n\n    // data only from fields (no ids)\n    get raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.model.__fields) {\n            if(this[field_name] !== undefined) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    // it is raw_data + id\n    get raw_obj() : any {\n        let raw_obj: any = this.raw_data\n        raw_obj.id = this.id\n        return raw_obj\n    }\n\n    get only_changed_raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.model.__fields) {\n            if(this[field_name] !== undefined && this[field_name] != this.__init_data[field_name]) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    get is_changed() : boolean {\n        for(let field_name in this.model.__fields) {\n            if (this[field_name] != this.__init_data[field_name]) {\n                return true\n            }\n        }\n        return false\n    }\n\n    async action(name: string, kwargs: Object) { return await this.model.repository.action(this, name, kwargs) }\n    async create() { return await this.model.repository.create(this) }\n    async update() { return await this.model.repository.update(this) }\n    async delete() { return await this.model.repository.delete(this) }\n    async save  () { return this.id === undefined ? this.create() : this.update() }\n    // update the object from the server\n    async refresh() { return await this.model.repository.get(this.id) }\n\n    @action('MO: obj - refresh init data')\n    refreshInitData() {\n        if(this.__init_data === undefined) this.__init_data = {}\n        for (let field_name in this.model.__fields) {\n            this.__init_data[field_name] = this[field_name]\n        }\n    }\n\n    @action('MO: obj - cancel local changes')\n    cancelLocalChanges() {\n        for (let field_name in this.model.__fields) {\n            if (this[field_name] !== this.__init_data[field_name]) {\n                this[field_name] = this.__init_data[field_name]\n            }\n        }\n    }\n\n    @action('MO: obj - update from raw')\n    updateFromRaw(raw_obj) {\n        if (this.id === undefined && raw_obj.id !== undefined && this.model.repository) {\n            // Note: object with equal id can be already in the cache (race condition)\n            // I have got the object from websocket before the response from the server\n            // Solution: remove the object (that came from websocket) from the cache\n            let exist_obj = this.model.repository.cache.get(raw_obj.id)\n            if (exist_obj) {\n                exist_obj.id = undefined\n            }\n            this.id = raw_obj.id\n        }\n        // update the fields if the raw data is exist and it is different\n        for(let field_name in this.model.__fields) {\n            if (raw_obj[field_name] !== undefined && raw_obj[field_name] !== this[field_name]) {\n                this[field_name] = raw_obj[field_name]\n            }\n        }\n\n        for(let relation in this.model.__relations) {\n            const settings = this.model.__relations[relation].settings\n            if (settings.foreign_model && raw_obj[relation]) {\n                settings.foreign_model.repository.cache.update(raw_obj[relation])\n                this[settings.foreign_id_name] = raw_obj[relation].id\n            }\n            else if (settings.remote_model && raw_obj[relation]) {\n                // many\n                if (Array.isArray(raw_obj[relation])) {\n                    for(const i of raw_obj[relation]) {\n                        settings.remote_model.repository.cache.update(i)\n                    }\n                }\n                // one\n                else {\n                    settings.remote_model.repository.cache.update(raw_obj[relation])\n                }\n            }\n        }\n    }\n}\n\n\n","import { action, intercept, makeObservable, observable, observe, runInAction, values } from 'mobx'\nimport { Query, QueryProps, QueryPage, QueryRaw, QueryRawPage, QueryCacheSync, QueryDistinct, QueryStream } from '../queries'\n\n\nexport default function model(constructor) {\n    var original = constructor\n\n    // the new constructor\n    let f : any = function (...args) {\n        let c : any = class extends original { constructor (...args) { super(...args) } }\n            c.__proto__ = original\n\n        let obj = new c()\n        makeObservable(obj)\n        // id field reactions\n        obj.__disposers.set('before changes',\n            intercept(obj, 'id', (change) => {\n                if (change.newValue !== undefined && obj.id !== undefined)\n                    throw new Error(`You cannot change id field: ${obj.id} to ${change.newValue}`)\n                if (obj.id !== undefined && change.newValue === undefined)\n                    obj.model.repository.cache.eject(obj)\n                return change\n            }))\n        obj.__disposers.set('after changes',\n            observe(obj, 'id', (change) => {\n                if (obj.id !== undefined)\n                    obj.model.repository.cache.inject(obj)\n            }))\n\n        // apply fields decorators\n        for (let field_name in obj.model.__fields) {\n            obj.model.__fields[field_name].decorator(obj, field_name)\n        }\n        // apply __relations decorators\n        for (let field_name in obj.model.__relations) {\n            obj.model.__relations[field_name].decorator(obj, field_name)\n        }\n        if (args[0]) obj.updateFromRaw(args[0])\n        obj.refreshInitData()\n        return obj\n    }\n\n    f.__proto__ = original\n    f.prototype = original.prototype   // copy prototype so intanceof operator still works\n    Object.defineProperty(f, \"name\", { value: original.name });\n    return f                      // return new constructor (will override original)\n}\n","import { extendObservable } from 'mobx'\nimport { TypeDescriptor } from '../types/type'\n\n\n/**\n * Decorator for fields \n */\nexport function field<T>(typeDescriptor?: TypeDescriptor<T>, observable: boolean = true) {\n    return (cls: any, fieldName: string) => {\n        let model = cls.constructor\n        if (model.__fields === undefined) model.__fields = {}\n        model.__fields[fieldName] = {\n            decorator: (obj) => {\n                if (observable) extendObservable(obj, { [fieldName]: obj[fieldName] })\n            },\n            typeDescriptor\n        }\n    }\n}\n","import {extendObservable, reaction, action} from 'mobx'\n\n\nfunction field_foreign(obj, field_name) {\n    let settings = obj.model.__relations[field_name].settings\n    let foreign_model   = settings.foreign_model\n    let foreign_id_name = settings.foreign_id_name\n\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: undefined })\n\n    reaction(\n        // watch on foreign cache for foreign object\n        () => {\n            if (obj[foreign_id_name] === undefined) return undefined\n            if (obj[foreign_id_name] === null) return null \n            return foreign_model.repository.cache.get(obj[foreign_id_name])\n        },\n        // update foreign field\n        action('MO: Foreign - update',\n            (_new, _old) => obj[field_name] = _new \n        ),\n        {fireImmediately: true}\n    )\n}\n\nexport function foreign(foreign_model: any, foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        // if cls already was decorated by model decorator then use original constructor\n        let model = cls.prototype?.constructor.isOriginalClass ? cls.prototype.constructor : cls.constructor\n        // let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // register field \n        model.__relations[field_name] = { \n            decorator: field_foreign,\n            settings: {\n                foreign_model: foreign_model,\n                // if it is empty then try auto detect it (it works only with single id) \n                foreign_id_name: foreign_id_name !== undefined ? foreign_id_name : `${field_name}_id`\n            } \n        } \n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model } from '../model'\n\n\nfunction field_one(obj: Model, field_name) {\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: undefined })\n}\n\nexport function one(remote_model: any, remote_foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id_name = remote_foreign_id_name !== undefined ? remote_foreign_id_name: `${model.name.toLowerCase()}_id`\n        model.__relations[field_name] = { \n            decorator: field_one,\n            settings: {\n                remote_model: remote_model,\n                remote_foreign_id_name: remote_foreign_id_name\n            } \n        } \n        const disposer_name = `MO: One - update - ${model.name}.${field_name}` \n\n        observe(remote_model.repository.cache.store, (change: any) => {\n            let remote_obj\n            switch (change.type) {\n                case 'add':\n                    remote_obj = change.newValue\n                    remote_obj.__disposers.set(disposer_name, reaction(\n                        () => { return { \n                            id: remote_obj[remote_foreign_id_name],\n                            obj: model.repository.cache.get(remote_obj[remote_foreign_id_name])}\n                        },\n                        action(disposer_name, (_new: any, _old: any) => {\n                            if (_old?.obj) _old.obj[field_name] = _new.id ? undefined : null\n                            if (_new?.obj) _new.obj[field_name] = remote_obj\n                        }),\n                        {fireImmediately: true}\n                    ))\n                    break\n                case 'delete':\n                    remote_obj = change.oldValue\n                    if (remote_obj.__disposers.get(disposer_name)) {\n                        remote_obj.__disposers.get(disposer_name)()\n                        remote_obj.__disposers.delete(disposer_name)\n                    }\n                    let obj =  model.repository.cache.get(remote_obj[remote_foreign_id_name])\n                    if (obj) \n                        runInAction(() => { obj[field_name] = undefined })\n                    break\n            }\n        })\n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model } from '../model'\n\n\nfunction field_many(obj: Model, field_name) {\n    extendObservable(obj, { [field_name]: [] })\n}\n\nexport function many(remote_model: any, remote_foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id_name = remote_foreign_id_name !== undefined ? remote_foreign_id_name: `${model.name.toLowerCase()}_id`\n        model.__relations[field_name] = { \n            decorator: field_many,\n            settings: {\n                remote_model: remote_model,\n                remote_foreign_id_name: remote_foreign_id_name\n            } \n        } \n        const disposer_name = `MO: Many - update - ${model.name}.${field_name}`\n        \n        // watch for remote object in the cache \n        observe(remote_model.repository.cache.store, (remote_change: any) => {\n            let remote_obj\n            switch (remote_change.type) {\n                case 'add':\n                    remote_obj = remote_change.newValue\n                    remote_obj.__disposers.set(disposer_name , reaction(\n                        () => model.repository.cache.get(remote_obj[remote_foreign_id_name]),\n                        action(disposer_name, (_new, _old) => {\n                            if (_old) {\n                                const i = _old[field_name].indexOf(remote_obj)\n                                if (i > -1)\n                                    _old[field_name].splice(i, 1)\n                            }\n                            if (_new) {\n                                const i = _new[field_name].indexOf(remote_obj)\n                                if (i === -1)\n                                    _new[field_name].push(remote_obj)\n                            } \n                        }),\n                        {fireImmediately: true}\n                    ))\n                    break\n                case 'delete':\n                    remote_obj = remote_change.oldValue\n                    if (remote_obj.__disposers.get(disposer_name)) {\n                        remote_obj.__disposers.get(disposer_name)()\n                        remote_obj.__disposers.delete(disposer_name)\n                    }\n                    let obj =  model.repository.cache.get(remote_obj[remote_foreign_id_name])\n                    if (obj) {\n                        const i = obj[field_name].indexOf(remote_obj)\n                        if (i > -1)\n                            runInAction(() => { obj[field_name].splice(i, 1); })\n                    } \n                    break\n            }\n        })\n    }\n}\n","export abstract class Filter {\n    abstract get URLSearchParams()  : URLSearchParams\n    abstract     isMatch(obj: any)  : boolean\n    abstract get isReady()          : boolean\n}\n","import { makeObservable, observable } from 'mobx'\nimport { Filter } from './Filter'\nimport { Input } from '../inputs/Input'\n\n\nexport class SingleFilter extends Filter {\n    readonly    field       : string\n    @observable input       : Input<any> \n    // TODO: is __disposers deprecated? I don't find any usage of it and I don't how it can be used\n    __disposers             : (()=>void)[] = []\n\n    readonly getURIField : (field: string) => string \n    readonly operator    : (value_a, value_b) => boolean \n\n    constructor(\n        field: string,\n        input: Input<any>,\n        getURIField: (field: string) => string,\n        operator: (a: any, b: any) => boolean,\n    ) {\n        super()\n        this.field = field\n        this.input = input \n        this.getURIField = getURIField\n        this.operator = operator\n        makeObservable(this)\n    }\n\n    get isReady(): boolean {\n        return this.input.isReady\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        let value = this.input.toString()\n        !this.input.isDisabled && value !== undefined && search_params.set(this.getURIField(this.field), value)\n        return search_params\n    }\n\n    isMatch(obj: any): boolean {\n        // it's always match if value of filter is undefined\n        if (this.input === undefined || this.input.isDisabled)\n            return true\n\n        return match(obj, this.field, this.input.value, this.operator)\n    }\n}\n\n\nfunction match(obj: any, field_name: string, filter_value: any, operator: (value_a, value_b) => boolean): boolean {\n    let field_names = field_name.split('__')\n    let current_field_name = field_names[0]\n    let current_value = obj[current_field_name]\n\n         if (field_names.length === 1) return operator(current_value, filter_value)\n    else if (field_names.length   > 1) {\n        let next_field_name = field_name.substring(field_names[0].length+2)\n        // we have object relation\n        if (typeof current_value === 'object' && current_value !== null) {\n            if (Array.isArray(current_value)) {\n                let result = false\n                for(const item of current_value) {\n                    result = match(item, next_field_name, filter_value, operator)\n                    if (result) return result\n                }\n            }\n            else {\n                return match(current_value, next_field_name, filter_value, operator)\n            }\n        }\n    }\n    return false\n}\n\nexport function EQ(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}`, (a: any, b: any) => a === b)\n}\nexport function EQV(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__eq`, (a: any, b: any) => a === b)\n}\nexport function NOT_EQ(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__not_eq`, (a: any, b: any) => a !== b)\n}\nexport function GT(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__gt`, (a: any, b: any) => a > b)\n}\nexport function GTE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__gte`, (a: any, b: any) => a >= b)\n}\nexport function LT(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (feild: string) => `${field}__lt`, (a: any, b: any) => a < b)\n}\nexport function LTE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__lte`, (a: any, b: any) => a <= b)\n}\nexport function LIKE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__contains`, (a: any, b: any) => a.includes(b))\n}\nexport function ILIKE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__icontains`,\n        (a: any, b: any) => a.toLowerCase().includes(b.toLowerCase())\n    )\n}\nexport function IN(field: string, input: Input<any>) : SingleFilter { \n    return new SingleFilter(field, input, (field: string) => `${field}__in`,\n        (a, b) => {\n            // it's always match if value of filter is empty []\n            if (b.length === 0)\n                return true\n            for (let v of b) {\n                if (v === a)\n                    return true\n            }\n            return false\n        }\n    )\n}\n","import { Filter } from \"./Filter\"\n\n\nexport abstract class ComboFilter extends Filter {\n    readonly filters: Filter[]\n\n    constructor(filters: Filter[]) {\n        super()\n        this.filters = filters\n    }\n\n    abstract isMatch(obj: any) : boolean\n\n    get isReady(): boolean {\n        for(let filter of this.filters) {\n            if (!filter.isReady) return false\n        }\n        return true\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        for(let filter of this.filters) {\n            filter.URLSearchParams.forEach((value, key) => search_params.set(key, value))\n        }\n        return search_params\n    }\n}\n\nexport class AND_Filter extends ComboFilter {\n\n    isMatch(obj: any) : boolean {\n        for(let filter of this.filters) {\n            if (!filter.isMatch(obj)) {\n                return false\n            }\n        }\n        return true \n    }\n}\n\nexport function AND(...filters: Filter[]) : Filter { return new AND_Filter(filters) }\n","import { Model } from '../model'\nimport { ID } from '../types'\nimport { Query } from '../queries'\nimport { Filter } from '../filters'\n\n\nexport abstract class Adapter <M extends Model> {\n    abstract create (raw_data: any, controller?: AbortController): Promise<any>\n    abstract get    (obj_id: ID, controller?: AbortController): Promise<any>\n    abstract update (obj_id: ID, only_changed_raw_data: any, controller?: AbortController): Promise<any>\n    abstract delete (obj_id: ID, controller?: AbortController): Promise<void>\n    abstract action (obj_id: ID, name: string, kwargs: Object, controller?: AbortController) : Promise<any>\n\n    // the find returns first object that match the query or undefined\n    abstract find(query: Query<M>, controller?: AbortController): Promise<any>\n    abstract load(query: Query<M>, controller?: AbortController): Promise<any[]>\n\n    abstract getTotalCount  (filter: Filter, controller?: AbortController): Promise<number>\n    abstract getDistinct    (filter: Filter, field: string, controller?: AbortController): Promise<any[]>\n\n    abstract getURLSearchParams(query: Query<M>): URLSearchParams\n}\n","import { Model } from '../model'\nimport { Adapter } from './adapter'\n\nexport abstract class ReadOnlyAdapter<M extends Model> extends Adapter<M> {\n    async create() { throw(`You cannot create using READ ONLY adapter.`) }\n    async update() { throw(`You cannot update using READ ONLY adapter.`) }\n    async delete() { throw(`You cannot delete using READ ONLY adapter.`) }\n}\n","import { Model } from '../model'\nimport { Query } from '../queries/query'\nimport { Repository }  from '../repository'\nimport { Filter } from '../filters/Filter'\nimport { Adapter } from './adapter'\nimport { timeout } from '../utils'\n\n/*\nYou can use this adapter for mock data or for unit test\n*/\n\n\nexport let local_store: {string?: {any: Model}} = {}\n\nexport class LocalAdapter<M extends Model> implements Adapter<M> {\n\n    readonly    store_name  : string\n                delay       : number  // delays for simulate real usage, use it only for tests\n\n    init_local_data(data: any[]) {\n        let objs = {} \n        for(let obj of data) {\n            objs[obj.id] = obj\n        }\n        local_store[this.store_name] = objs\n    }\n\n    constructor(store_name: string) {\n        this.store_name = store_name\n        local_store[this.store_name] = {}\n    }\n\n    async action(obj_id: number, name: string, kwargs: Object) : Promise<any> {\n    }\n\n    async create(raw_data: any) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n\n        // calculate and set new ID\n        let ids = [0]\n        for(let id of Object.keys(local_store[this.store_name])) {\n            ids.push(parseInt(id))\n        }\n        let max = Math.max.apply(null, ids)\n        raw_data.id = max + 1\n        local_store[this.store_name][raw_data.id] = raw_data\n        return raw_data\n    }\n\n    async get(obj_id: any) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = Object.values(local_store[this.store_name])[0]\n        return raw_obj\n    }\n\n    async update(obj_id: number, only_changed_raw_data: any) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = local_store[this.store_name][obj_id] \n        for(let field of Object.keys(only_changed_raw_data)) {\n            raw_obj[field] = only_changed_raw_data[field]\n        }\n        return raw_obj \n    }\n\n    async delete(obj_id: number) : Promise<void> {\n        if (this.delay) await timeout(this.delay) \n        delete local_store[this.store_name][obj_id]\n    }\n\n    async find(query: Query<M>) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = Object.values(local_store[this.store_name])[0]\n        return raw_obj\n    }\n\n    async load (query: Query<M>) : Promise<any[]> {\n        if (this.delay) await timeout(this.delay) \n        let raw_objs = []\n\n        if (query.filter) {\n            for(let raw_obj of Object.values(local_store[this.store_name])) {\n            }\n        }\n        else {\n            raw_objs = Object.values(local_store[this.store_name])\n        }\n\n        // order_by (sort)\n        if (query.orderBy.value) {\n            raw_objs = raw_objs.sort((obj_a, obj_b) => {\n                let res\n                for(let sort_by_field of query.orderBy.value) {\n                }\n                return 0\n            })\n        }\n\n        // page\n        if (query.limit.value !== undefined && query.offset.value !== undefined) {\n            raw_objs = raw_objs.slice(query.offset.value, query.offset.value+query.limit.value)\n        }\n        return raw_objs \n    }\n\n    async getTotalCount(filter: Filter): Promise<number> {\n        return Object.values(local_store[this.store_name]).length\n    }\n\n    async getDistinct(filter, filed): Promise<any[]> {\n        return []\n    }\n\n    getURLSearchParams(query: Query<M>): URLSearchParams {\n        return new URLSearchParams()\n    }\n}\n\n\n// model decorator\nexport function local() {\n    return (cls: any) => {\n        let repository = new Repository(cls, new LocalAdapter(cls.name)) \n        cls.__proto__.repository = repository\n    }\n}\n","import { Model } from '../model'\nimport { Repository }  from '../repository'\nimport { Adapter } from './adapter'\n\n\nexport class ConstantAdapter<M extends Model> extends Adapter<M> {\n    readonly constant: any[] \n\n    constructor (constant) {\n        super()\n        this.constant = constant\n    }\n\n    async action (): Promise<any> {\n        console.warn('ConstantAdapter.action not implemented')\n        return {} \n    }\n\n    async create (): Promise<any> {\n        throw new Error('ConstantAdapter.create should not be used.')\n    }\n\n    async update (): Promise<any> {\n        throw new Error('ConstantAdapter.update should not be used.')\n    }\n\n    async delete (): Promise<void> {\n        throw new Error('ConstantAdapter.delete should not be used.')\n    }\n\n    async get (): Promise<any> {\n        throw new Error('ConstantAdapter.get should not be used.')\n    }\n\n    async find (): Promise<any> {\n        throw new Error('ConstantAdapter.find should not be used.')\n    }\n\n    async load (): Promise<any[]> {\n        return this.constant \n    }\n\n    async getTotalCount (): Promise<number> {\n        return this.constant.length\n    }\n\n    async getDistinct (): Promise<any[]> {\n        throw new Error('ConstantAdapter.getDistinct should not be used.')\n    }\n\n    getURLSearchParams(): URLSearchParams {\n        return new URLSearchParams()\n        // throw new Error('ConstantAdapter.getURLSearchParams should not be used.')\n    }\n}\n\n// model decorator\nexport function constant (constant: any[]) {\n    return (cls: any) => {\n        let repository = new Repository(cls, new ConstantAdapter(constant)) \n        cls.__proto__.repository = repository\n    }\n}\n","import { Model } from '../model'\nimport { Query } from '../queries/query'\nimport { Repository }  from '../repository'\nimport { Filter } from '../filters/Filter'\nimport { Adapter } from './adapter'\n\n\nexport class MockAdapter<M extends Model> implements Adapter<M> {\n    async action(obj_id: number, name: string, kwargs: Object) : Promise<any> {}\n    async create(raw_data: any) : Promise<any> { return raw_data }\n    async get(obj_id: any) : Promise<any> { return obj_id}\n    async update(obj_id: number, only_changed_raw_data: any) : Promise<any> { return only_changed_raw_data }\n    async delete(obj_id: number) : Promise<void> {}\n    async find(query: Query<M>) : Promise<any> { return {} }\n    async load (query: Query<M>) : Promise<any[]> { return [] }\n    async getTotalCount(filter: Filter): Promise<number> { return 0 }\n    async getDistinct(filter, filed): Promise<any[]> { return [] }\n    getURLSearchParams(query: Query<M>): URLSearchParams { return new URLSearchParams() }\n}\n\n\n// model decorator\nexport function mock() {\n    return (cls: any) => {\n        let repository = new Repository(cls, new MockAdapter()) \n        cls.__proto__.repository = repository\n    }\n}\n","import { observable } from 'mobx'\nimport { Input } from '../inputs/Input'\nimport { config } from '..'\n\n\nexport class Form {\n    readonly    inputs      : { [key: string]: Input<any> }\n    @observable isLoading   : boolean = false\n    @observable errors      : string[] = []\n\n    private __submit: () => Promise<void>\n    private __cancel: () => void\n\n    constructor(inputs: { [key: string]: Input<any> }, submit: () => Promise<void>, cancel: () => void) {\n        this.inputs = inputs\n        this.__submit = submit\n        this.__cancel = cancel\n    }\n\n    get isReady(): boolean {\n        return Object.values(this.inputs).every(input => input.isReady)\n    }\n\n    get isError(): boolean {\n        return this.errors.length > 0 || Object.values(this.inputs).some(input => input.errors.length > 0)\n    }\n\n    async submit() {\n        if (!this.isReady) {\n            // just ignore\n            return\n        }\n\n        this.isLoading = true\n        this.errors = []\n\n        try {\n            await this.__submit()\n        } catch (err) {\n            for (const key in err.message) {\n                if (key === config.NON_FIELD_ERRORS_KEY) {\n                    this.errors = err.message[key]\n                } else {\n                    if (this.inputs[key])\n                        this.inputs[key].errors = err.message[key]\n                    else \n                        throw err\n                }\n            }\n        }\n\n        this.isLoading = false\n    }\n\n    cancel() {\n        this.__cancel()\n    }\n}\n","import { Model } from '../model'\nimport { Input } from '../inputs/Input' \nimport { Form } from './Form'\n\n\nexport class ObjectForm<M extends Model> extends Form {\n    obj: M\n    constructor(inputs: { [key: string]: Input<any> }, onSubmitted?: (obj: M) => void , onCancelled?: () => void) {\n        super(\n            inputs,\n            async () => {\n                if (!this.obj) {\n                    // console.error('ObjectForm error: obj is not set', this)\n                    throw new Error('ObjectForm error: obj is not set')\n                }\n                const fieldsNames = Object.keys(this.obj)\n                for (let fieldName of Object.keys(this.inputs)) {\n                    if (!fieldsNames.includes(fieldName)) {\n                        // console.error(`ObjectForm error: object has no field ${fieldName}`, this)\n                        throw new Error(`ObjectForm error: object has no field ${fieldName}`)\n                    }\n                }\n\n                // move all values from inputs to obj\n                for (let fieldName of Object.keys(inputs)) {\n                    this.obj[fieldName] = inputs[fieldName].value\n                }\n                const response = await this.obj.save()\n                if (onSubmitted)\n                    onSubmitted(response)\n            },\n            onCancelled\n        )\n    }\n}\n"],"names":[],"mappings":"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"}
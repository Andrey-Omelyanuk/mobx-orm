// Generated by dts-bundle v0.7.3

export { store, model, Model, id, field, foreign, one, many };

interface FieldTypeDecorator {
    (model_name: string, field_name: string, obj: Object): void;
}
interface ModelDescription {
    fields: {
        [field_name: string]: {
            type: string;
            settings: any;
        };
    };
    objects: {
        [id: number]: object;
    };
    unique: {
        [field_name: string]: any;
    };
    getNewId: () => number;
    save: undefined | ((obj: any) => any);
    delete: undefined | ((obj: any) => any);
    load: undefined | ((model_name: any, where: any, order_by: any, limit: any, offset: any) => any);
}
export class Store {
    debug: boolean;
    models: {
        [model_name: string]: ModelDescription;
    };
    field_types: {
        [type_name: string]: FieldTypeDecorator;
    };
    registerModel(model_name: any): void;
    registerFieldType(type: any, decorator: any): void;
    registerModelField(model_name: any, type: any, field_name: any, settings: any): void;
    inject(model_name: any, object: any): void;
    eject(model_name: any, object: any): void;
    clear(): void;
    clearModel(model_name: any): void;
}
let store: Store;
export default store;

export class Model {
    static get(id: number): Model;
    static all(): Model[];
    static load(where?: {}, order_by?: {}, limit?: number, offset?: number): Promise<any>;
    constructor(init_data?: any);
    save(): Promise<any>;
    delete(): Promise<any>;
}
export function model(cls: any): any;

export function registerFieldId(): void;
export default function id(cls: any, field_name: string): void;

export function registerField(): void;
export default function field(cls: any, field_name: string): void;

export function registerForeign(): void;
export default function foreign(foreign_model_name: any, foreign_id_field_name?: string): (cls: any, field_name: string) => void;

export function registerOne(): void;
export default function one(foreign_model_name: any, foreign_id_field_name: string): (cls: any, field_name: string) => void;

export function registerMany(): void;
export default function many(foreign_model_name: any, foreign_id_field_name: string): (cls: any, many_field_name: string) => void;


{"version":3,"file":"mobx-orm.js","sources":["../src/config.ts","../src/cache.ts","../src/repository.ts","../src/utils.ts","../src/types.ts","../src/convert.ts","../src/inputs/handlers/syncURL.ts","../src/inputs/handlers/syncLocalStorage.ts","../src/inputs/Input.ts","../src/inputs/ObjectInput.ts","../src/inputs/auto-reset/autoResetId.ts","../src/queries/query.ts","../src/queries/query-page.ts","../src/queries/query-cache-sync.ts","../src/queries/query-stream.ts","../src/queries/query-raw.ts","../src/queries/query-raw-page.ts","../src/queries/query-distinct.ts","../src/model.ts","../src/fields/field.ts","../src/fields/foreign.ts","../src/fields/one.ts","../src/fields/many.ts","../src/filters/Filter.ts","../src/filters/SingleFilter.ts","../src/filters/ComboFilter.ts","../src/adapters/adapter.ts","../src/adapters/read-only.ts","../src/adapters/local.ts","../src/adapters/mock.ts","../src/forms/Form.ts","../src/forms/ObjectForm.ts"],"sourcesContent":["// Global config of Mobx-ORM\nexport const config = {\n    DEFAULT_PAGE_SIZE   : 50,\n    AUTO_UPDATE_DELAY   : 100,  // ms\n    NON_FIELD_ERRORS_KEY: 'non_field_errors',\n    // NOTE: React router manage URL by own way. \n    // change UPDATE_SEARCH_PARAMS and WATCTH_URL_CHANGES in this case\n    UPDATE_SEARCH_PARAMS: (search_params: URLSearchParams) => {\n        window.history.pushState(null, '', `${window.location.pathname}?${search_params.toString()}`)\n\n    },\n    WATCTH_URL_CHANGES: (callback: any) => {\n        window.addEventListener('popstate', callback)\n        return () => { window.removeEventListener('popstate', callback) }\n    },\n}\n","import { action, makeObservable, observable } from 'mobx'\nimport { ID } from './types'\nimport { Model } from './model'\n\n\nexport class Cache<M extends Model> {\n                readonly name: string\n                readonly model: any         // TODO: type\n    @observable readonly store: Map<ID, M>\n\n    constructor(model: any, name?: string) {\n        this.name = name ? name : model.name \n        this.model = model\n        this.store = new Map<ID, M>()\n        makeObservable(this)\n    }\n\n    get(id: any): M|undefined {\n        return this.store.get(id)\n    }\n\n    @action('cache - inject')\n    inject(obj: M) {\n        if (obj.id === undefined)\n            throw new Error(`Object should have id!`)\n\n        const exist_obj = this.store.get(obj.id)\n        if (exist_obj && exist_obj !== obj)\n            throw new Error(`Object ${obj.constructor.name}: ${obj.id} already exist in the cache. ${this.name}`)\n\n        this.store.set(obj.id, obj)\n    }\n\n    @action('cache - eject')\n    eject(obj: M) {\n        return this.store.delete(obj.id)\n    }\n\n    @action('cache - update')\n    update(raw_obj: any): M {\n        let obj: M = this.store.get(raw_obj.id)\n        if (obj)\n            obj.updateFromRaw(raw_obj)\n        else {\n            obj = new this.model(raw_obj)\n            this.inject(obj)\n        }\n        return obj\n    }\n\n    @action('cache - clear')\n    clear() {\n        for (let obj of this.store.values()) obj.destroy()\n        this.store.clear()\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model } from './model'\nimport { ID } from './types'\nimport { Cache } from './cache'\nimport { Query } from './queries/query'\nimport { Filter } from './filters'\nimport { Adapter } from './adapters/adapter'\n\n\nexport class  Repository<M extends Model> {\n    readonly model      : any \n    readonly cache     ?: Cache<M>\n    readonly adapter    : Adapter<M> \n\n    constructor(model: any, adapter: any, cache?: any) {\n        this.model      = model \n        this.adapter    = adapter \n        this.cache      = cache ? cache : new Cache<M>(model)\n    }\n\n    async action(obj: M, name: string, kwargs: Object, controller?: AbortController) : Promise<any> {\n        return await this.adapter.action(obj.id, name, kwargs, controller)\n    }\n\n    async create(obj: M, controller?: AbortController) : Promise<M> {\n        let raw_obj = await this.adapter.create(obj.raw_data, controller)\n        obj.updateFromRaw(raw_obj)  // update id and other fields\n        obj.refreshInitData()       // backend can return default values and they should be in __init_data\n        return obj\n    }\n\n    async update(obj: M, controller?: AbortController) : Promise<M> {\n        let raw_obj = await this.adapter.update(obj.id, obj.only_changed_raw_data, controller)\n        obj.updateFromRaw(raw_obj)\n        obj.refreshInitData()\n        return obj\n    }\n\n    async delete(obj: M, controller?: AbortController) : Promise<M> {\n        await this.adapter.delete(obj.id, controller)\n        obj.destroy()\n        this.cache.eject(obj)\n        return obj\n    }\n\n    async get(obj_id: ID, controller?: AbortController): Promise<M> {\n        let raw_obj = await this.adapter.get(obj_id, controller)\n        if (this.cache) {\n            const obj = this.cache.update(raw_obj)\n            obj.refreshInitData()\n            return obj\n        } \n        return new this.model(raw_obj) \n    }\n\n    /* Returns ONE object */\n    async find(query: Query<M>, controller?: AbortController): Promise<M> {\n        let raw_obj = await this.adapter.find(query, controller)\n        if (this.cache) {\n            const obj = this.cache.update(raw_obj)\n            obj.refreshInitData()\n            return obj\n        } \n        return new this.model(raw_obj) \n    }\n\n    /* Returns MANY objects */\n    async load(query: Query<M>, controller?: AbortController):Promise<M[]> {\n        let raw_objs = await this.adapter.load(query, controller)\n        let objs: M[] = []\n        // it should invoke in one big action\n        runInAction(() => {\n            if (this.cache) {\n                for (let raw_obj of raw_objs) {\n                    const obj = this.cache.update(raw_obj)\n                    obj.refreshInitData()\n                    objs.push(obj)\n                }\n            } \n            else {\n                for (let raw_obj of raw_objs) {\n                    objs.push(new this.model(raw_obj))\n                }\n            }\n        })\n        return objs\n    }\n\n    async getTotalCount  (filter: Filter, controller?: AbortController): Promise<number> {\n        return await this.adapter.getTotalCount(filter, controller)\n    }\n    async getDistinct    (filter: Filter, field: string, controller?: AbortController): Promise<any[]> {\n        return await this.adapter.getDistinct(filter, field, controller)\n    }\n}\n\n\n// Model.repository is readonly, use decorator to customize repository \nexport function repository(adapter: any, cache?: any) {\n    return (cls: any) => {\n        let repository = new Repository(cls, adapter, cache) \n        cls.__proto__.repository = repository\n    }\n}","import { autorun } from 'mobx'\n\n\nexport function waitIsTrue(obj: any, field: string) : Promise<Boolean> {\n    return new Promise((resolve, reject) => { \n        autorun((reaction) => {\n            if (obj[field]) {\n                reaction.dispose()\n                resolve(true) \n            }\n        })\n    })\n}\n\nexport function waitIsFalse(obj: any, field: string) : Promise<Boolean> {\n    return new Promise((resolve, reject) => { \n        autorun((reaction) => {\n            if (!obj[field]) {\n                reaction.dispose()\n                resolve(true) \n            }\n        })\n    })\n}\n\nexport function timeout(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n","export type ID = string | number\nexport const ASC = true \nexport const DESC = false \nexport type ORDER_BY = Map<string, boolean>\n","import { ASC, DESC, ORDER_BY } from \"./types\"\n\nexport enum TYPE {\n    ID              = 'id',\n    STRING          = 'string',\n    NUMBER          = 'number',\n    DATE            = 'date',\n    DATETIME        = 'datetime',\n    BOOLEAN         = 'boolean',\n    ARRAY_ID        = 'array-id',\n    ARRAY_STRING    = 'array-string',\n    ARRAY_NUMBER    = 'array-number',\n    ARRAY_DATE      = 'array-date',\n    ARRAY_DATETIME  = 'array-datetime',\n    ORDER_BY        = 'order-by',\n}\n\nconst arrayToString = (type, value) => {\n    let result = [] \n    if (value) {\n        for (const i of value) {\n            let v = toString(type, i) \n            if (v !== undefined)\n                result.push(v)\n        }\n    }\n    return result.length ? result.join(',') : undefined\n}\n\nconst stringToArray = (type, value) => {\n    let result = [] \n    if (value) {\n        for (const i of value.split(',')) {\n            let v = stringTo(type, i) \n            if (v !== undefined) {\n                result.push(v)\n            }\n        }\n    }\n    return result\n}\n\nexport const toString = (valueType: TYPE, value: any): string => {\n    if (value === undefined) return undefined\n    if (value === null) return 'null'\n\n    switch (valueType) {\n        case TYPE.NUMBER:   return ''+value\n        case TYPE.ID    :   return ''+value\n        case TYPE.STRING:   return value\n        case TYPE.DATE:     return value instanceof Date ? (value as Date).toISOString().split('T')[0] : \"\"\n        case TYPE.DATETIME: return value instanceof Date ? (value as Date).toISOString() : \"\"\n        case TYPE.BOOLEAN:  return !!value ? 'true' : 'false' \n        case TYPE.ARRAY_STRING  : return arrayToString(TYPE.STRING  , value)\n        case TYPE.ARRAY_NUMBER  : return arrayToString(TYPE.NUMBER  , value)\n        case TYPE.ARRAY_DATE    : return arrayToString(TYPE.DATE    , value)\n        case TYPE.ARRAY_DATETIME: return arrayToString(TYPE.DATETIME, value)\n        case TYPE.ORDER_BY: \n            if (value) {\n                let result = ''\n                for (const [key, val] of value) {\n                    if (result)       result += ','\n                    if (val === DESC) result += '-'\n                    result += key.replace(/\\./g, '__')\n                }\n                return result ? result : undefined\n            }\n            return undefined \n    }\n}\n\n\nexport const stringTo = (valueType: TYPE, value: string, enumType?: Object): any => {\n    let result\n\n         if (value === undefined) return undefined\n    else if (value === 'null')    return null\n    else if (value === null)      return null\n\n    switch (valueType) {\n        case TYPE.NUMBER:   \n            result = parseInt(value)\n            if (isNaN(result))\n                return undefined\n            return result\n        case TYPE.ID:\n            result = parseInt(value)\n            if (isNaN(result))\n                return value \n            return result\n        case TYPE.STRING:   return value\n        case TYPE.DATE:     return new Date(value)\n        case TYPE.DATETIME: return new Date(value)\n        case TYPE.BOOLEAN:  return value === 'true' ? true : value === 'false' ? false : undefined\n        case TYPE.ARRAY_STRING  : return stringToArray(TYPE.STRING  , value)\n        case TYPE.ARRAY_NUMBER  : return stringToArray(TYPE.NUMBER  , value)\n        case TYPE.ARRAY_DATE    : return stringToArray(TYPE.DATE    , value)\n        case TYPE.ARRAY_DATETIME: return stringToArray(TYPE.DATETIME, value)\n        case TYPE.ORDER_BY:\n            result = new Map() as ORDER_BY \n            if (value) {\n                for (const item of value.split(',')) {\n                    if (item[0] === '-')\n                        result.set(item.slice(1), DESC)\n                    else\n                        result.set(item, ASC)\n                }\n            }\n            return result\n    }\n}\n","import { reaction } from 'mobx'\nimport { config } from '../../config'\nimport { Input } from '../Input'\n\n\nexport const syncURLHandler = (paramName: string, input: Input<any>) => {\n    const searchParams = new URLSearchParams(window.location.search)\n    // init from URL Search Params\n    if (searchParams.has(paramName)) {\n        input.setFromString(searchParams.get(paramName))\n    }\n    // watch for URL changes and update Input\n    function updataInputFromURL() {\n        const searchParams = new URLSearchParams(window.location.search)\n        if (searchParams.has(paramName)) {\n            const raw_value = searchParams.get(paramName)\n            const exist_raw_value = input.toString() \n            if (raw_value !== exist_raw_value) {\n                input.setFromString(raw_value)\n            }\n        }\n        else if (input.value !== undefined)\n            input.set(undefined)\n    }\n    input.__disposers.push(config.WATCTH_URL_CHANGES(updataInputFromURL.bind(input)))\n    // watch for Input changes and update URL\n    input.__disposers.push(reaction(\n        () => input.toString(),  // I cannot use this.value because it can be a Map\n        (value) => {\n            const searchParams = new URLSearchParams(window.location.search)\n            if (value === '' || value === undefined)\n                searchParams.delete(paramName)\n            else if (searchParams.get(paramName) !== value)\n                searchParams.set(paramName, value)\n\n            config.UPDATE_SEARCH_PARAMS(searchParams)\n        },\n        { fireImmediately: true },\n    ))\n}\n","import { reaction } from 'mobx'\nimport { Input } from '../Input'\n\n\nexport const syncLocalStorageHandler = (paramName: string, input: Input<any>) => {\n    // init value from localStorage\n    if (paramName in localStorage) {\n        let raw_value = localStorage.getItem(paramName)\n        const exist_raw_value = input.toString() \n        if (exist_raw_value !== raw_value)\n            input.setFromString(raw_value)\n    }\n    // watch for changes and save to localStorage\n    input.__disposers.push(reaction(\n        () => input.value,\n        (value, previousValue) => {\n            // WARNING: input should return 'null' if value is null\n            // because localStorage cannot store null\n            if (value !== undefined)\n                localStorage.setItem(paramName, input.toString())\n            else\n                localStorage.removeItem(paramName)\n        },\n    ))\n}\n","import _ from 'lodash'\nimport { action, makeObservable, observable, runInAction } from 'mobx'\nimport { ORDER_BY } from '../types'\nimport { stringTo, toString, TYPE } from '../convert'\nimport { syncLocalStorageHandler, syncURLHandler } from './handlers'\n\n\nexport interface InputConstructorArgs<T> {\n    value               ?: T\n    required            ?: boolean\n    disabled            ?: boolean\n    debounce            ?: number\n    syncURL             ?: string\n    syncLocalStorage    ?: string\n    type                ?: TYPE\n}\n\nexport class Input<T> {\n    readonly type: TYPE\n\n    @observable          value               : T\n    @observable          isRequired          : boolean\n    @observable          isDisabled          : boolean\n    @observable          isDebouncing        : boolean          //  \n    @observable          isNeedToUpdate      : boolean          //  \n    @observable          errors              : string[] = []    // validations or backend errors put here\n                readonly debounce            : number\n                readonly syncURL            ?: string\n                readonly syncLocalStorage   ?: string\n                         __disposers = [] \n    \n    constructor (args?: InputConstructorArgs<T>) {\n        // init all observables before use it in reaction\n        this.value              = args?.value\n        this.type               = args?.type\n        this.isRequired         = !!args?.required\n        this.isDisabled         = !!args?.disabled\n        this.isDebouncing       = false \n        this.isNeedToUpdate     = false \n        this.debounce           = args?.debounce\n        this.syncURL            = args?.syncURL\n        this.syncLocalStorage   = args?.syncLocalStorage\n        makeObservable(this)\n        if (this.debounce) {\n            this.stopDebouncing = _.debounce(() => runInAction(() => this.isDebouncing = false), this.debounce)\n        }\n        // the order is important, because syncURL has more priority under syncLocalStorage\n        // i.e. init from syncURL can overwrite value from syncLocalStorage\n        this.syncLocalStorage   && syncLocalStorageHandler(this.syncLocalStorage, this)\n        this.syncURL            && syncURLHandler(this.syncURL, this)\n    }\n\n    destroy () {\n        this.__disposers.forEach(disposer => disposer())\n    }\n\n    private stopDebouncing: () => void\n\n    @action\n    public set (value: T) {\n        this.value = value\n        this.isNeedToUpdate = false\n        if (this.debounce) {\n            this.isDebouncing = true \n            this.stopDebouncing()       // will stop debouncing after debounce\n        }\n    }\n\n    get isReady () {\n        if (this.isDisabled)\n            return true\n        return !(this.errors.length\n            ||  this.isDebouncing\n            ||  this.isNeedToUpdate\n            ||  this.isRequired && (this.value === undefined || (Array.isArray(this.value) && !this.value.length))\n        )\n    }\n\n    setFromString(value: string) {\n        this.set(stringTo(this.type, value))\n    }\n    toString() {\n        return toString(this.type, this.value)\n    }\n}\n\n// export class StringInput        extends Input<string>   { readonly type = TYPE.STRING }\nexport const StringInput = (args?: InputConstructorArgs<string>) : Input<string> => {\n    if (!args) args = {}\n    args.type = TYPE.STRING\n    return new Input<string>(args)\n}\n// export class NumberInput        extends Input<number>   { readonly type = TYPE.NUMBER }\nexport const NumberInput = (args?: InputConstructorArgs<number>) : Input<number> => {\n    if (!args) args = {}\n    args.type = TYPE.NUMBER\n    return new Input<number>(args)\n}\n// export class DateInput          extends Input<Date>     { readonly type = TYPE.DATE }\nexport const DateInput = (args?: InputConstructorArgs<Date>) : Input<Date> => {\n    if (!args) args = {}\n    args.type = TYPE.DATE\n    return new Input<Date>(args)\n}\n// export class DateTimeInput      extends Input<Date>     { readonly type = TYPE.DATETIME }\nexport const DateTimeInput = (args?: InputConstructorArgs<Date>) : Input<Date> => {\n    if (!args) args = {}\n    args.type = TYPE.DATETIME\n    return new Input<Date>(args)\n}\n// export class BooleanInput       extends Input<boolean>  { readonly type = TYPE.BOOLEAN }\nexport const BooleanInput = (args?: InputConstructorArgs<boolean>) : Input<boolean> => {\n    if (!args) args = {}\n    args.type = TYPE.BOOLEAN\n    return new Input<boolean>(args)\n}\n// export class OrderByInput       extends Input<ORDER_BY> { readonly type = TYPE.ORDER_BY }\nexport const OrderByInput = (args?: InputConstructorArgs<ORDER_BY>) : Input<ORDER_BY> => {\n    if (!args) args = {}\n    args.type = TYPE.ORDER_BY\n    return new Input<ORDER_BY>(args)\n}\n// export class ArrayStringInput   extends ArrayInput<string[]> { readonly type = TYPE.ARRAY_STRING }\nexport const ArrayStringInput = (args?: InputConstructorArgs<string[]>) : Input<string[]> => {\n    if (args === undefined || args.value === undefined )\n        args = { ...args, value: [] }\n    args.type = TYPE.ARRAY_STRING\n    return new Input<string[]>(args)\n}\n// export class ArrayNumberInput   extends ArrayInput<number[]> { readonly type = TYPE.ARRAY_NUMBER }\nexport const ArrayNumberInput = (args?: InputConstructorArgs<number[]>) : Input<number[]> => {\n    if (args === undefined || args.value === undefined )\n        args = { ...args, value: [] }\n    args.type = TYPE.ARRAY_NUMBER\n    return new Input<number[]>(args)\n}\n// export class ArrayDateInput     extends ArrayInput<Date[]>   { readonly type = TYPE.ARRAY_DATE }\nexport const ArrayDateInput = (args?: InputConstructorArgs<Date[]>) : Input<Date[]> => {\n    if (args === undefined || args.value === undefined )\n        args = { ...args, value: [] }\n    args.type = TYPE.ARRAY_DATE\n    return new Input<Date[]>(args)\n}\n// export class ArrayDateTimeInput extends ArrayInput<Date[]>   { readonly type = TYPE.ARRAY_DATETIME }\nexport const ArrayDateTimeInput = (args?: InputConstructorArgs<Date[]>) : Input<Date[]> => {\n    if (args === undefined || args.value === undefined )\n        args = { ...args, value: [] }\n    args.type = TYPE.ARRAY_DATETIME\n    return new Input<Date[]>(args)\n}","import { reaction, runInAction } from 'mobx'\nimport { Query } from '../queries'\nimport { Model } from '../model'\nimport { ID } from '../types'\nimport { TYPE } from '../convert'\nimport { Input, InputConstructorArgs } from './Input'\n\n\nexport interface ObjectInputConstructorArgs<T, M extends Model> extends InputConstructorArgs<T> {\n    options: Query<M>\n    autoReset? (input: ObjectInput<M>): void\n}\n\nexport class ObjectInput<M extends Model> extends Input<ID> {\n    readonly    type   : TYPE = TYPE.ID\n    readonly    options: Query<M>\n\n    constructor (args: ObjectInputConstructorArgs<ID, M>) {\n        super(args as InputConstructorArgs<ID>)\n        this.options = args.options\n        this.__disposers.push(reaction(\n            () => this.options.isReady,\n            (isReady, previousValue) => {\n                if(isReady && !previousValue) {\n                    runInAction(() => this.isNeedToUpdate = true)\n                    args?.autoReset && args.autoReset(this)\n                }\n            }\n        ))\n    }\n\n    get obj() : M {\n        return (this.options.repository.model as any).get(this.value)\n    }\n\n    get isReady () {\n        // options should be checked first\n        // because without options it doesn't make sense to check value \n        return this.options.isReady && super.isReady\n    }\n\n    destroy () {\n        super.destroy()\n        this.options.destroy()\n    }\n}\n","import { ObjectInput } from '../ObjectInput'\n\n\nexport function autoResetId(input: ObjectInput<any>) {\n    // if value still in options, do nothing\n    for (const item of input.options.items) {\n        if (item.id === input.value) {\n            return\n        }\n    }\n    // otherwise set first available id or undefined\n    input.set(input.options.items[0]?.id)\n}\n","import { action, makeObservable, observable, reaction, runInAction } from 'mobx'\nimport { Repository } from '../repository'\nimport { config } from '../config'\nimport { Model } from '../model'\nimport { Filter } from '../filters/Filter'\nimport { waitIsFalse } from '../utils'\nimport { OrderByInput, NumberInput, ArrayStringInput, Input } from '../inputs'\nimport { ORDER_BY } from '../types'\n\n\nexport const DISPOSER_AUTOUPDATE = \"__autoupdate\"\n\nexport interface QueryProps<M extends Model> {\n    repository                  ?: Repository<M>\n    //\n    filter                      ?: Filter\n    orderBy                     ?: Input<ORDER_BY>\n    // pagination\n    offset                      ?: Input<number>\n    limit                       ?: Input<number>\n    // fields controll\n    relations                   ?: Input<string[]>\n    fields                      ?: Input<string[]> \n    omit                        ?: Input<string[]> \n    //\n    autoupdate                  ?: boolean\n}\n\n/* Query live cycle:\n\n    Event           isLoading   needToUpdate    isReady     items\n    ------------------------------------------------------------------------\n    Create          -           -               -           []\n\n\n    loading start   +!          -               -           reset error\n        |\n    loading finish  -!          -               +!          set some items or error\n\n\n    filter changes  -           +!              -!\n        |\n    loading start   +!          -!              -           reset error\n        |\n    loading finish  -!          -               +!          set some items or error\n\n*/\n\nexport class Query <M extends Model> {\n\n    readonly repository: Repository<M>\n    readonly filter    : Filter\n    readonly orderBy   : Input<ORDER_BY>\n    readonly offset    : Input<number>\n    readonly limit     : Input<number>\n    readonly relations : Input<string[]>\n    readonly fields    : Input<string[]>\n    readonly omit      : Input<string[]>\n\n    @observable protected __items: M[] = []         // items from the server\n    @observable total           : number              // total count of items on the server, usefull for pagination\n    @observable isLoading       : boolean = false     // query is loading the data\n    @observable isNeedToUpdate  : boolean = false     // query was changed and we need to update the data\n    @observable timestamp       : number              // timestamp of the last update, usefull to aviod to trigger react hooks twise\n    @observable error           : string              // error message\n\n    get items       () { return this.__items }      // the items can be changed after the load (post processing)\n\n    protected controller        : AbortController\n    protected disposers         : (()=>void)[] = []\n    protected disposerObjects   : {[field: string]: ()=>void} = {}\n\n    constructor(props: QueryProps<M>) {\n        let {\n            repository, filter, orderBy, offset, limit,\n            relations, fields, omit,\n            autoupdate = false\n        } = props\n\n        this.repository = repository \n        this.filter    = filter\n        this.orderBy   = orderBy    ? orderBy   : OrderByInput() \n        this.offset    = offset     ? offset    : NumberInput() \n        this.limit     = limit      ? limit     : NumberInput() \n        this.relations = relations  ? relations : ArrayStringInput()\n        this.fields    = fields     ? fields    : ArrayStringInput()\n        this.omit      = omit       ? omit      : ArrayStringInput()\n        this.autoupdate = autoupdate\n        makeObservable(this)\n\n        this.disposers.push(reaction(\n            () => this.dependenciesAreReady,\n            (dependenciesAreReady) => {\n                if(dependenciesAreReady && !this.isNeedToUpdate)\n                    runInAction(() => this.isNeedToUpdate = true)\n            }\n        ))\n    }\n\n    destroy() {\n        this.controller?.abort()\n        while(this.disposers.length) {\n            this.disposers.pop()()\n        }\n        for(let __id in this.disposerObjects) {\n            this.disposerObjects[__id]()\n            delete this.disposerObjects[__id]\n        } \n    }\n\n    loading = async () => waitIsFalse(this, 'isLoading')\n    ready   = async () => waitIsFalse(this, 'isReady')\n\n    get autoupdate() : boolean {\n        return !! this.disposerObjects[DISPOSER_AUTOUPDATE]\n    }\n\n    // Note: autoupdate trigger always the load(),\n    // shadowLoad() is not make sense to trigger by autoupdate\n    // because autoupdate means => user have changed something on UI inputs\n    // and we should to show the UI reaction\n    set autoupdate(value: boolean) {\n        if (value !== this.autoupdate) {  // indepotent guarantee\n            // on \n            if (value) {\n                setTimeout(() => {\n                    // TODO: I have to add debounce here\n                    this.disposerObjects[DISPOSER_AUTOUPDATE] = reaction(\n                        () => this.isNeedToUpdate && this.dependenciesAreReady,\n                        (updateIt) => { if(updateIt) this.load() },\n                        { fireImmediately: true }\n                    )\n                }, config.AUTO_UPDATE_DELAY)\n            }\n            // off\n            else {\n                this.disposerObjects[DISPOSER_AUTOUPDATE]()\n                delete this.disposerObjects[DISPOSER_AUTOUPDATE]\n            }\n        }\n    }\n\n    get dependenciesAreReady() {\n        return (this.filter === undefined || this.filter.isReady)\n            && this.orderBy   .isReady\n            && this.offset    .isReady\n            && this.limit     .isReady\n            && this.relations .isReady\n            && this.fields    .isReady\n            && this.omit      .isReady\n    }\n\n    // NOTE: if we use only shadowLoad() the isLoading will be always false.\n    // In this case isReady is equal to !isNeedToUpdate.\n    get isReady() {\n        return !this.isNeedToUpdate && !this.isLoading\n    }\n\n    // use it if everybody should know that the query data is updating\n    @action('MO: Query Base - load')\n    async load() {\n        this.isLoading = true\n        try {\n            await this.shadowLoad()\n        }\n        finally {\n            runInAction(() => {\n                // the loading can be canceled by another load\n                // in this case we should not touch isLoading\n                if (!this.controller) this.isLoading = false\n            })\n        }\n    }\n\n    // use it directly instead of load() if nobody should know that the query data is updating\n    // for example you need to update the current data on the page and you don't want to show a spinner\n    @action('MO: Query Base - shadow load')\n    async shadowLoad() {\n\n        this.isNeedToUpdate = false \n        this.error = undefined\n\n        if (this.controller)\n            this.controller.abort()\n        this.controller = new AbortController()\n\n        // NOTE: Date.now() is used to get the current timestamp\n        //       and it can be the same in the same tick \n        //       in this case we should increase the timestamp by 1\n        const now = Date.now()\n        if (this.timestamp === now) this.timestamp += 1\n        else                        this.timestamp = now \n\n        try {\n            await this.__load()\n        }\n        catch (e) {\n            // ignore the cancelation of the request\n            if (e.name !== 'AbortError' && e.message !== 'canceled')\n                runInAction(() => this.error = e.message )\n        }\n        finally {\n            this.controller = undefined\n        }\n    }\n\n    protected async __load() {\n        const objs = await this.repository.load(this, this.controller)\n        runInAction(() => this.__items = objs)\n    }\n}\n","import { action, runInAction } from 'mobx'\nimport { Query, QueryProps } from './query'\nimport { config } from '../config'\nimport { Model } from '../model'\n\n\nexport class QueryPage<M extends Model> extends Query<M> {\n\n    @action('MO: set page')      setPage    (n   : number) { this.offset.set(this.limit.value * (n > 0 ? n-1 : 0)) }\n    @action('MO: set page size') setPageSize(size: number) { this.limit.set(size); this.offset.set(0) }\n    goToFirstPage() { this.setPage(1) }\n    goToPrevPage () { this.setPage(this.current_page - 1) }\n    goToNextPage () { this.setPage(this.current_page + 1) }\n    goToLastPage () { this.setPage(this.total_pages) }\n\n    get is_first_page() : boolean { return this.offset.value === 0 }\n    get is_last_page () : boolean { return this.offset.value + this.limit.value >= this.total }\n    get current_page()  : number  { return this.offset.value / this.limit.value + 1 }\n    get total_pages()   : number  { return this.total ? Math.ceil(this.total / this.limit.value) : 1 }\n    // for compatibility with js code style\n    get isFirstPage() : boolean { return this.is_first_page }\n    get isLastPage () : boolean { return this.is_last_page } \n    get currentPage() : number  { return this.current_page } \n    get totalPages()  : number  { return this.total_pages } \n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        runInAction(() => {\n            if (this.offset.value === undefined) this.offset.set(0)\n            if (this.limit.value  === undefined) this.limit.set(config.DEFAULT_PAGE_SIZE)\n        })\n    }\n\n    async __load() {\n        const [objs, total] = await Promise.all([\n            this.repository.load(this, this.controller),\n            this.repository.getTotalCount(this.filter, this.controller)\n        ])\n        runInAction(() => {\n            this.__items = objs\n            this.total = total\n        })\n    }\n}\n","import { action, computed, observe, reaction } from 'mobx'\nimport { Query, QueryProps } from './query'\nimport { ASC } from '../types'\nimport { Model } from '../model'\n\n\nexport class QueryCacheSync <M extends Model> extends Query<M> {\n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        // watch the cache for changes, and update items if needed\n        this.disposers.push(observe(props.repository.cache.store, \n            action('MO: Query - update from cache changes',\n            (change: any) => {\n                if (change.type == 'add') {\n                    this.__watch_obj(change.newValue)\n                }\n                if (change.type == \"delete\") {\n                    let id = change.name\n                    let obj = change.oldValue\n\n                    this.disposerObjects[id]()\n                    delete this.disposerObjects[id]\n\n                    let i = this.__items.indexOf(obj)\n                    if (i != -1) {\n                        this.__items.splice(i, 1)\n                        this.total = this.__items.length\n                    }\n                }\n            })\n        ))\n\n        // ch all exist objects of model \n        for(let [id, obj] of props.repository.cache.store) {\n            this.__watch_obj(obj)\n        }\n    }\n\n    async __load() {\n        if (this.controller) this.controller.abort()\n        this.controller = new AbortController()\n        try {\n            await this.repository.load(this, this.controller)\n            // Query don't need to overide the __items,\n            // query's items should be get only from the cache\n        } catch (e) {\n            if (e.name !== 'AbortError')  throw e\n        } \n        // we have to wait the next tick\n        // mobx should finished recalculation for model-objects\n        await Promise.resolve();\n        // await new Promise(resolve => setTimeout(resolve))\n    }\n\n    @computed\n    get items() { \n        let __items = this.__items.map(x=>x) // copy __items (not deep)\n        if (this.orderBy.value && this.orderBy.value.size) {\n            let compare = (a, b) => {\n                for(const [key, value] of this.orderBy.value) {\n                    if (value === ASC) {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return  1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return -1\n                        if (a[key] < b[key]) return -1\n                        if (a[key] > b[key]) return  1\n                    }\n                    else {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return -1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return  1\n                        if (a[key] < b[key]) return  1\n                        if (a[key] > b[key]) return -1\n                    }\n                }\n                return 0\n            }\n            __items.sort(compare)\n        }\n        return __items \n    }\n\n    __watch_obj(obj) {\n        if (this.disposerObjects[obj.id]) this.disposerObjects[obj.id]()\n        this.disposerObjects[obj.id] = reaction(\n            () =>  !this.filter || this.filter.isMatch(obj),\n            action('MO: Query - obj was changed',\n            (should: boolean) => {\n                let i = this.__items.indexOf(obj)\n                // should be in the items and it is not in the items? add it to the items\n                if ( should && i == -1) this.__items.push(obj)\n                // should not be in the items and it is in the items? remove it from the items\n                if (!should && i != -1) this.__items.splice(i, 1)\n\n                if (this.total != this.__items.length) \n                    this.total = this.__items.length\n            }),\n            { fireImmediately: true }\n        )\n    }\n}\n","import { action, runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { Query, QueryProps } from './query'\nimport { config } from '../config'\n\n\nexport class QueryStream <M extends Model> extends Query<M> {\n    // you can reset all and start from beginning\n    @action('MO: fisrt page') goToFirstPage() { this.__items = []; this.offset.set(0) }\n    // you can scroll only forward\n    @action('MO: next page')  goToNextPage () { this.offset.set(this.offset.value + this.limit.value) }\n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        runInAction(() => {\n            if (this.offset.value === undefined) this.offset.set(0)\n            if (this.limit.value  === undefined) this.limit.set(config.DEFAULT_PAGE_SIZE)\n        })\n    }\n\n    async __load() {\n        const objs = await this.repository.load(this, this.controller)\n        runInAction(() => {\n            this.__items.push(...objs)\n            // total is not make sense for infinity queries\n            // total = 1 show that last page is reached\n            if (objs.length < this.limit.value) this.total = 1\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Query } from './query'\nimport { Model } from '../model'\n\n/**\n * QueryRaw is a class to load raw objects from the server \n * without converting them to models using the repository.\n */\n\nexport class QueryRaw<M extends Model> extends Query<M> {\n    async __load() {\n        const objs = await this.repository.adapter.load(this, this.controller)\n        runInAction(() => {\n            this.__items = objs\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { QueryPage } from './query-page'\n\n/**\n * QueryRawPage is a class to load raw objects from the server \n * without converting them to models using the repository.\n */\n\nexport class QueryRawPage<M extends Model> extends QueryPage<M> {\n    async __load() {\n        const objs = await this.repository.adapter.load(this)\n        const total = await this.repository.getTotalCount(this.filter)\n        runInAction(() => {\n            this.__items = objs\n            this.total = total\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Query, QueryProps } from './query'\n\n\nexport class QueryDistinct extends Query<any> {\n    readonly field: string\n    \n    constructor(field: string, props: QueryProps<any>) {\n        super(props)\n        this.field = field\n    }\n\n    async __load() {\n        const objs = await this.repository.getDistinct(this.filter, this.field, this.controller)\n        runInAction(() => {\n            this.__items = objs\n        })\n    }\n}\n","import { action, intercept, makeObservable, observable, observe, runInAction, values } from 'mobx'\nimport { Query, QueryProps, QueryPage, QueryRaw, QueryRawPage, QueryCacheSync, QueryDistinct, QueryStream } from './queries'\nimport { Repository } from './repository'\nimport { ID } from './types'\n\nexport abstract class Model {\n    static readonly repository  : Repository<Model>\n\n    // Original Class will be decorated by model decorator,\n    // use this flag to detect original class \n    static readonly isOriginalClass = true\n\n    // - fields\n    // - relations (not exist on outside)\n    static __fields       : {\n        [field_name: string]: {\n            decorator   : (obj: Model, field_name: string) => void,\n            settings    : any,\n            serialize   : any,\n            deserialize : any\n        }\n    }\n    // relateions is a list of field only foreign, one or many types\n    static __relations : {\n        [field_name: string]: {\n            decorator   : (obj: Model, field_name: string) => void,\n            settings    : any\n            // there is no serializer of deserializer because\n            // it is derivative and does not come from outside\n        }\n    }\n\n    static getQuery(props: QueryProps<Model>): Query<Model> {\n        return new Query({...props, repository: this.repository })\n    }\n\n    static getQueryPage(props: QueryProps<Model>): QueryPage<Model> {\n        return new QueryPage({...props, repository: this.repository })\n    }\n\n    static getQueryRaw(props: QueryProps<Model>): QueryRaw<Model> {\n        return new QueryRaw({...props, repository: this.repository })\n    }\n\n    static getQueryRawPage(props: QueryProps<Model>): QueryRawPage<Model> {\n        return new QueryRawPage({...props, repository: this.repository })\n    }\n\n    static getQueryCacheSync(props: QueryProps<Model>): QueryCacheSync<Model> {\n        return new QueryCacheSync({...props, repository: this.repository })\n    }\n\n    static getQueryStream(props: QueryProps<Model>): QueryStream<Model> {\n        return new QueryStream({...props, repository: this.repository })\n    }\n\n    static getQueryDistinct(field: string, props: QueryProps<Model>): QueryDistinct {\n        return new QueryDistinct(field, {...props, repository: this.repository })\n    }\n\n    static get(id: ID) {\n        return this.repository.cache.get(id)\n    }\n\n    static async findById(id: ID) : Promise<Model> {\n        return this.repository.get(id)\n    }\n\n    static async find(query: Query<Model>) : Promise<Model> {\n        return this.repository.find(query)\n    }\n\n    @observable id: ID = undefined\n    // TODO: should it be observable?\n    @observable __init_data: any   \n    __disposers = new Map()\n\n    constructor (...args) {}\n\n    @action('model - destroy')\n    destroy() {\n        while(this.__disposers.size) {\n            this.__disposers.forEach((disposer, key) => {\n                disposer()\n                this.__disposers.delete(key)\n            })\n        }\n    }\n\n    get model() : any {\n        return (<any>this.constructor).__proto__\n    }\n\n    // data only from fields (no ids)\n    get raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.model.__fields) {\n            if(this[field_name] !== undefined) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    // it is raw_data + id\n    get raw_obj() : any {\n        let raw_obj: any = this.raw_data\n        raw_obj.id = this.id\n        return raw_obj\n    }\n\n    get only_changed_raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.model.__fields) {\n            if(this[field_name] !== undefined && this[field_name] != this.__init_data[field_name]) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    get is_changed() : boolean {\n        for(let field_name in this.model.__fields) {\n            if (this[field_name] != this.__init_data[field_name]) {\n                return true\n            }\n        }\n        return false\n    }\n\n    async action(name: string, kwargs: Object) { return await this.model.repository.action(this, name, kwargs) }\n    async create() { return await this.model.repository.create(this) }\n    async update() { return await this.model.repository.update(this) }\n    async delete() { return await this.model.repository.delete(this) }\n    async save  () { return this.id === undefined ? this.create() : this.update() }\n    // update the object from the server\n    async refresh() { return await this.model.repository.get(this.id) }\n\n    @action('MO: obj - refresh init data')\n    refreshInitData() {\n        if(this.__init_data === undefined) this.__init_data = {}\n        for (let field_name in this.model.__fields) {\n            this.__init_data[field_name] = this[field_name]\n        }\n    }\n\n    @action('MO: obj - cancel local changes')\n    cancelLocalChanges() {\n        for (let field_name in this.model.__fields) {\n            if (this[field_name] !== this.__init_data[field_name]) {\n                this[field_name] = this.__init_data[field_name]\n            }\n        }\n    }\n\n    @action('MO: obj - update from raw')\n    updateFromRaw(raw_obj) {\n        if (this.id === undefined && raw_obj.id !== undefined && this.model.repository) {\n            // Note: object with equal id can be already in the cache (race condition)\n            // I have got the object from websocket before the response from the server\n            // Solution: remove the object (that came from websocket) from the cache\n            let exist_obj = this.model.repository.cache.get(raw_obj.id)\n            if (exist_obj) {\n                exist_obj.id = undefined\n            }\n            this.id = raw_obj.id\n        }\n        // update the fields if the raw data is exist and it is different\n        for(let field_name in this.model.__fields) {\n            if (raw_obj[field_name] !== undefined && raw_obj[field_name] !== this[field_name]) {\n                this[field_name] = raw_obj[field_name]\n            }\n        }\n\n        for(let relation in this.model.__relations) {\n            const settings = this.model.__relations[relation].settings\n            if (settings.foreign_model && raw_obj[relation]) {\n                settings.foreign_model.repository.cache.update(raw_obj[relation])\n                this[settings.foreign_id_name] = raw_obj[relation].id\n            }\n            else if (settings.remote_model && raw_obj[relation]) {\n                // many\n                if (Array.isArray(raw_obj[relation])) {\n                    for(const i of raw_obj[relation]) {\n                        settings.remote_model.repository.cache.update(i)\n                    }\n                }\n                // one\n                else {\n                    settings.remote_model.repository.cache.update(raw_obj[relation])\n                }\n            }\n        }\n    }\n}\n\n// Decorator\nexport function model(constructor) {\n    var original = constructor\n\n    // the new constructor\n    let f : any = function (...args) {\n        let c : any = class extends original { constructor (...args) { super(...args) } }\n            c.__proto__ = original\n\n        let obj = new c()\n        makeObservable(obj)\n        // id field reactions\n        obj.__disposers.set('before changes',\n            intercept(obj, 'id', (change) => {\n                if (change.newValue !== undefined && obj.id !== undefined)\n                    throw new Error(`You cannot change id field: ${obj.id} to ${change.newValue}`)\n                if (obj.id !== undefined && change.newValue === undefined)\n                    obj.model.repository.cache.eject(obj)\n                return change\n            }))\n        obj.__disposers.set('after changes',\n            observe(obj, 'id', (change) => {\n                if (obj.id !== undefined)\n                    obj.model.repository.cache.inject(obj)\n            }))\n\n        // apply fields decorators\n        for (let field_name in obj.model.__fields) {\n            obj.model.__fields[field_name].decorator(obj, field_name)\n        }\n        // apply __relations decorators\n        for (let field_name in obj.model.__relations) {\n            obj.model.__relations[field_name].decorator(obj, field_name)\n        }\n        if (args[0]) obj.updateFromRaw(args[0])\n        obj.refreshInitData()\n        return obj\n    }\n\n    f.__proto__ = original\n    f.prototype = original.prototype   // copy prototype so intanceof operator still works\n    Object.defineProperty(f, \"name\", { value: original.name });\n    return f                      // return new constructor (will override original)\n}\n","import { extendObservable } from 'mobx'\n\n\nexport function field_field(obj, field_name) {\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: obj[field_name] })\n}\n\nexport function field(cls, field_name: string) {\n    let model = cls.constructor\n    if (model.__fields === undefined) model.__fields = {}\n\n    model.__fields[field_name] = { decorator: field_field }  // register field \n}\n","import {extendObservable, reaction, action} from 'mobx'\n\n\nfunction field_foreign(obj, field_name) {\n    let settings = obj.model.__relations[field_name].settings\n    let foreign_model   = settings.foreign_model\n    let foreign_id_name = settings.foreign_id_name\n\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: undefined })\n\n    reaction(\n        // watch on foreign cache for foreign object\n        () => {\n            if (obj[foreign_id_name] === undefined) return undefined\n            if (obj[foreign_id_name] === null) return null \n            return foreign_model.repository.cache.get(obj[foreign_id_name])\n        },\n        // update foreign field\n        action('MO: Foreign - update',\n            (_new, _old) => obj[field_name] = _new \n        ),\n        {fireImmediately: true}\n    )\n}\n\nexport function foreign(foreign_model: any, foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        // if cls already was decorated by model decorator then use original constructor\n        let model = cls.prototype?.constructor.isOriginalClass ? cls.prototype.constructor : cls.constructor\n        // let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // register field \n        model.__relations[field_name] = { \n            decorator: field_foreign,\n            settings: {\n                foreign_model: foreign_model,\n                // if it is empty then try auto detect it (it works only with single id) \n                foreign_id_name: foreign_id_name !== undefined ? foreign_id_name : `${field_name}_id`\n            } \n        } \n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model } from '../model'\n\n\nfunction field_one(obj: Model, field_name) {\n    // make observable and set default value\n    extendObservable(obj, { [field_name]: undefined })\n}\n\nexport function one(remote_model: any, remote_foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id_name = remote_foreign_id_name !== undefined ? remote_foreign_id_name: `${model.name.toLowerCase()}_id`\n        model.__relations[field_name] = { \n            decorator: field_one,\n            settings: {\n                remote_model: remote_model,\n                remote_foreign_id_name: remote_foreign_id_name\n            } \n        } \n        const disposer_name = `MO: One - update - ${model.name}.${field_name}` \n\n        observe(remote_model.repository.cache.store, (change: any) => {\n            let remote_obj\n            switch (change.type) {\n                case 'add':\n                    remote_obj = change.newValue\n                    remote_obj.__disposers.set(disposer_name, reaction(\n                        () => { return { \n                            id: remote_obj[remote_foreign_id_name],\n                            obj: model.repository.cache.get(remote_obj[remote_foreign_id_name])}\n                        },\n                        action(disposer_name, (_new: any, _old: any) => {\n                            if (_old?.obj) _old.obj[field_name] = _new.id ? undefined : null\n                            if (_new?.obj) _new.obj[field_name] = remote_obj\n                        }),\n                        {fireImmediately: true}\n                    ))\n                    break\n                case 'delete':\n                    remote_obj = change.oldValue\n                    if (remote_obj.__disposers.get(disposer_name)) {\n                        remote_obj.__disposers.get(disposer_name)()\n                        remote_obj.__disposers.delete(disposer_name)\n                    }\n                    let obj =  model.repository.cache.get(remote_obj[remote_foreign_id_name])\n                    if (obj) \n                        runInAction(() => { obj[field_name] = undefined })\n                    break\n            }\n        })\n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model } from '../model'\n\n\nfunction field_many(obj: Model, field_name) {\n    extendObservable(obj, { [field_name]: [] })\n}\n\nexport function many(remote_model: any, remote_foreign_id_name?: string) {\n    return function (cls: any, field_name: string) {\n        let model = cls.prototype.constructor\n        if (model.__relations === undefined) model.__relations = {}\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id_name = remote_foreign_id_name !== undefined ? remote_foreign_id_name: `${model.name.toLowerCase()}_id`\n        model.__relations[field_name] = { \n            decorator: field_many,\n            settings: {\n                remote_model: remote_model,\n                remote_foreign_id_name: remote_foreign_id_name\n            } \n        } \n        const disposer_name = `MO: Many - update - ${model.name}.${field_name}`\n        \n        // watch for remote object in the cache \n        observe(remote_model.repository.cache.store, (remote_change: any) => {\n            let remote_obj\n            switch (remote_change.type) {\n                case 'add':\n                    remote_obj = remote_change.newValue\n                    remote_obj.__disposers.set(disposer_name , reaction(\n                        () => model.repository.cache.get(remote_obj[remote_foreign_id_name]),\n                        action(disposer_name, (_new, _old) => {\n                            if (_old) {\n                                const i = _old[field_name].indexOf(remote_obj)\n                                if (i > -1)\n                                    _old[field_name].splice(i, 1)\n                            }\n                            if (_new) {\n                                const i = _new[field_name].indexOf(remote_obj)\n                                if (i === -1)\n                                    _new[field_name].push(remote_obj)\n                            } \n                        }),\n                        {fireImmediately: true}\n                    ))\n                    break\n                case 'delete':\n                    remote_obj = remote_change.oldValue\n                    if (remote_obj.__disposers.get(disposer_name)) {\n                        remote_obj.__disposers.get(disposer_name)()\n                        remote_obj.__disposers.delete(disposer_name)\n                    }\n                    let obj =  model.repository.cache.get(remote_obj[remote_foreign_id_name])\n                    if (obj) {\n                        const i = obj[field_name].indexOf(remote_obj)\n                        if (i > -1)\n                            runInAction(() => { obj[field_name].splice(i, 1); })\n                    } \n                    break\n            }\n        })\n    }\n}\n","export abstract class Filter {\n    abstract get URLSearchParams()  : URLSearchParams\n    abstract     isMatch(obj: any)  : boolean\n    abstract get isReady()          : boolean\n}\n","import { makeObservable, observable } from 'mobx'\nimport { Filter } from './Filter'\nimport { Input } from '../inputs/Input'\n\n\nexport class SingleFilter extends Filter {\n    readonly    field       : string\n    @observable input       : Input<any> \n    // TODO: is __disposers deprecated? I don't find any usage of it and I don't how it can be used\n    __disposers             : (()=>void)[] = []\n\n    readonly getURIField : (field: string) => string \n    readonly operator    : (value_a, value_b) => boolean \n\n    constructor(\n        field: string,\n        input: Input<any>,\n        getURIField: (field: string) => string,\n        operator: (a: any, b: any) => boolean,\n    ) {\n        super()\n        this.field = field\n        this.input = input \n        this.getURIField = getURIField\n        this.operator = operator\n        makeObservable(this)\n    }\n\n    get isReady(): boolean {\n        return this.input.isReady\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        let value = this.input.toString()\n        !this.input.isDisabled && value !== undefined && search_params.set(this.getURIField(this.field), value)\n        return search_params\n    }\n\n    isMatch(obj: any): boolean {\n        // it's always match if value of filter is undefined\n        if (this.input === undefined || this.input.isDisabled)\n            return true\n\n        return match(obj, this.field, this.input.value, this.operator)\n    }\n}\n\n\nfunction match(obj: any, field_name: string, filter_value: any, operator: (value_a, value_b) => boolean): boolean {\n    let field_names = field_name.split('__')\n    let current_field_name = field_names[0]\n    let current_value = obj[current_field_name]\n\n         if (field_names.length === 1) return operator(current_value, filter_value)\n    else if (field_names.length   > 1) {\n        let next_field_name = field_name.substring(field_names[0].length+2)\n        // we have object relation\n        if (typeof current_value === 'object' && current_value !== null) {\n            if (Array.isArray(current_value)) {\n                let result = false\n                for(const item of current_value) {\n                    result = match(item, next_field_name, filter_value, operator)\n                    if (result) return result\n                }\n            }\n            else {\n                return match(current_value, next_field_name, filter_value, operator)\n            }\n        }\n    }\n    return false\n}\n\nexport function EQ(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}`, (a: any, b: any) => a === b)\n}\nexport function EQV(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__eq`, (a: any, b: any) => a === b)\n}\nexport function NOT_EQ(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__not_eq`, (a: any, b: any) => a !== b)\n}\nexport function GT(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__gt`, (a: any, b: any) => a > b)\n}\nexport function GTE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__gte`, (a: any, b: any) => a >= b)\n}\nexport function LT(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (feild: string) => `${field}__lt`, (a: any, b: any) => a < b)\n}\nexport function LTE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__lte`, (a: any, b: any) => a <= b)\n}\nexport function LIKE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__contains`, (a: any, b: any) => a.includes(b))\n}\nexport function ILIKE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__icontains`,\n        (a: any, b: any) => a.toLowerCase().includes(b.toLowerCase())\n    )\n}\nexport function IN(field: string, input: Input<any>) : SingleFilter { \n    return new SingleFilter(field, input, (field: string) => `${field}__in`,\n        (a, b) => {\n            // it's always match if value of filter is empty []\n            if (b.length === 0)\n                return true\n            for (let v of b) {\n                if (v === a)\n                    return true\n            }\n            return false\n        }\n    )\n}\n","import { Filter } from \"./Filter\"\n\n\nexport abstract class ComboFilter extends Filter {\n    readonly filters: Filter[]\n\n    constructor(filters: Filter[]) {\n        super()\n        this.filters = filters\n    }\n\n    abstract isMatch(obj: any) : boolean\n\n    get isReady(): boolean {\n        for(let filter of this.filters) {\n            if (!filter.isReady) return false\n        }\n        return true\n    }\n\n    get URLSearchParams(): URLSearchParams{\n        let search_params = new URLSearchParams()\n        for(let filter of this.filters) {\n            filter.URLSearchParams.forEach((value, key) => search_params.set(key, value))\n        }\n        return search_params\n    }\n}\n\nexport class AND_Filter extends ComboFilter {\n\n    isMatch(obj: any) : boolean {\n        for(let filter of this.filters) {\n            if (!filter.isMatch(obj)) {\n                return false\n            }\n        }\n        return true \n    }\n}\n\nexport function AND(...filters: Filter[]) : Filter { return new AND_Filter(filters) }\n","import { Model } from '../model'\nimport { ID } from '../types'\nimport { Query } from '../queries'\nimport { Filter } from '../filters'\n\n\nexport abstract class Adapter <M extends Model> {\n    abstract create (raw_data: any, controller?: AbortController): Promise<any>\n    abstract get    (obj_id: ID, controller?: AbortController): Promise<any>\n    abstract update (obj_id: ID, only_changed_raw_data: any, controller?: AbortController): Promise<any>\n    abstract delete (obj_id: ID, controller?: AbortController): Promise<void>\n    abstract action (obj_id: ID, name: string, kwargs: Object, controller?: AbortController) : Promise<any>\n\n    // the find returns first object that match the query or undefined\n    abstract find(query: Query<M>, controller?: AbortController): Promise<any>\n    abstract load(query: Query<M>, controller?: AbortController): Promise<any[]>\n\n    abstract getTotalCount  (filter: Filter, controller?: AbortController): Promise<number>\n    abstract getDistinct    (filter: Filter, field: string, controller?: AbortController): Promise<any[]>\n\n    abstract getURLSearchParams(query: Query<M>): URLSearchParams\n}\n","import { Model } from '../model'\nimport { Adapter } from './adapter'\n\nexport abstract class ReadOnlyAdapter<M extends Model> extends Adapter<M> {\n    async create() { throw(`You cannot create using READ ONLY adapter.`) }\n    async update() { throw(`You cannot update using READ ONLY adapter.`) }\n    async delete() { throw(`You cannot delete using READ ONLY adapter.`) }\n}\n","import { Model } from '../model'\nimport { Query } from '../queries/query'\nimport { Repository }  from '../repository'\nimport { Filter } from '../filters/Filter'\nimport { Adapter } from './adapter'\nimport { timeout } from '../utils'\n\n/*\nYou can use this adapter for mock data or for unit test\n*/\n\n\nexport let local_store: {string?: {any: Model}} = {}\n\nexport class LocalAdapter<M extends Model> implements Adapter<M> {\n\n    readonly    store_name  : string\n                delay       : number  // delays for simulate real usage, use it only for tests\n\n    init_local_data(data: any[]) {\n        let objs = {} \n        for(let obj of data) {\n            objs[obj.id] = obj\n        }\n        local_store[this.store_name] = objs\n    }\n\n    constructor(store_name: string) {\n        this.store_name = store_name\n        local_store[this.store_name] = {}\n    }\n\n    async action(obj_id: number, name: string, kwargs: Object) : Promise<any> {\n    }\n\n    async create(raw_data: any) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n\n        // calculate and set new ID\n        let ids = [0]\n        for(let id of Object.keys(local_store[this.store_name])) {\n            ids.push(parseInt(id))\n        }\n        let max = Math.max.apply(null, ids)\n        raw_data.id = max + 1\n        local_store[this.store_name][raw_data.id] = raw_data\n        return raw_data\n    }\n\n    async get(obj_id: any) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = Object.values(local_store[this.store_name])[0]\n        return raw_obj\n    }\n\n    async update(obj_id: number, only_changed_raw_data: any) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = local_store[this.store_name][obj_id] \n        for(let field of Object.keys(only_changed_raw_data)) {\n            raw_obj[field] = only_changed_raw_data[field]\n        }\n        return raw_obj \n    }\n\n    async delete(obj_id: number) : Promise<void> {\n        if (this.delay) await timeout(this.delay) \n        delete local_store[this.store_name][obj_id]\n    }\n\n    async find(query: Query<M>) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = Object.values(local_store[this.store_name])[0]\n        return raw_obj\n    }\n\n    async load (query: Query<M>) : Promise<any[]> {\n        if (this.delay) await timeout(this.delay) \n        let raw_objs = []\n\n        if (query.filter) {\n            for(let raw_obj of Object.values(local_store[this.store_name])) {\n            }\n        }\n        else {\n            raw_objs = Object.values(local_store[this.store_name])\n        }\n\n        // order_by (sort)\n        if (query.orderBy.value) {\n            raw_objs = raw_objs.sort((obj_a, obj_b) => {\n                let res\n                for(let sort_by_field of query.orderBy.value) {\n                }\n                return 0\n            })\n        }\n\n        // page\n        if (query.limit.value !== undefined && query.offset.value !== undefined) {\n            raw_objs = raw_objs.slice(query.offset.value, query.offset.value+query.limit.value)\n        }\n        return raw_objs \n    }\n\n    async getTotalCount(filter: Filter): Promise<number> {\n        return Object.values(local_store[this.store_name]).length\n    }\n\n    async getDistinct(filter, filed): Promise<any[]> {\n        return []\n    }\n\n    getURLSearchParams(query: Query<M>): URLSearchParams {\n        return new URLSearchParams()\n    }\n}\n\n\n// model decorator\nexport function local() {\n    return (cls: any) => {\n        let repository = new Repository(cls, new LocalAdapter(cls.name)) \n        cls.__proto__.repository = repository\n    }\n}\n","import { Model } from '../model'\nimport { Query } from '../queries/query'\nimport { Repository }  from '../repository'\nimport { Filter } from '../filters/Filter'\nimport { Adapter } from './adapter'\n\n\nexport class MockAdapter<M extends Model> implements Adapter<M> {\n    async action(obj_id: number, name: string, kwargs: Object) : Promise<any> {}\n    async create(raw_data: any) : Promise<any> { return raw_data }\n    async get(obj_id: any) : Promise<any> { return obj_id}\n    async update(obj_id: number, only_changed_raw_data: any) : Promise<any> { return only_changed_raw_data }\n    async delete(obj_id: number) : Promise<void> {}\n    async find(query: Query<M>) : Promise<any> { return {} }\n    async load (query: Query<M>) : Promise<any[]> { return [] }\n    async getTotalCount(filter: Filter): Promise<number> { return 0 }\n    async getDistinct(filter, filed): Promise<any[]> { return [] }\n    getURLSearchParams(query: Query<M>): URLSearchParams { return new URLSearchParams() }\n}\n\n\n// model decorator\nexport function mock() {\n    return (cls: any) => {\n        let repository = new Repository(cls, new MockAdapter()) \n        cls.__proto__.repository = repository\n    }\n}\n","import { observable } from 'mobx'\nimport { Input } from '../inputs/Input'\nimport { config } from '..'\n\n\nexport class Form {\n    readonly    inputs      : { [key: string]: Input<any> }\n    @observable isLoading   : boolean = false\n    @observable errors      : string[] = []\n\n    private __submit: () => Promise<void>\n    private __cancel: () => void\n\n    constructor(inputs: { [key: string]: Input<any> }, submit: () => Promise<void>, cancel: () => void) {\n        this.inputs = inputs\n        this.__submit = submit\n        this.__cancel = cancel\n    }\n\n    get isReady(): boolean {\n        return Object.values(this.inputs).every(input => input.isReady)\n    }\n\n    get isError(): boolean {\n        return this.errors.length > 0 || Object.values(this.inputs).some(input => input.errors.length > 0)\n    }\n\n    async submit() {\n        if (!this.isReady) {\n            // just ignore\n            return\n        }\n\n        this.isLoading = true\n        this.errors = []\n\n        try {\n            await this.__submit()\n        } catch (err) {\n            for (const key in err.message) {\n                if (key === config.NON_FIELD_ERRORS_KEY) {\n                    this.errors = err.message[key]\n                } else {\n                    if (this.inputs[key])\n                        this.inputs[key].errors = err.message[key]\n                    else \n                        throw err\n                }\n            }\n        }\n\n        this.isLoading = false\n    }\n\n    cancel() {\n        this.__cancel()\n    }\n}\n","import { Model } from '../model'\nimport { Input } from '../inputs/Input' \nimport { Form } from './Form'\n\n\nexport class ObjectForm<M extends Model> extends Form {\n    obj: M\n    constructor(inputs: { [key: string]: Input<any> }, onSubmitted?: (obj: M) => void , onCancelled?: () => void) {\n        super(\n            inputs,\n            async () => {\n                if (!this.obj) {\n                    // console.error('ObjectForm error: obj is not set', this)\n                    throw new Error('ObjectForm error: obj is not set')\n                }\n                const fieldsNames = Object.keys(this.obj)\n                for (let fieldName of Object.keys(this.inputs)) {\n                    if (!fieldsNames.includes(fieldName)) {\n                        // console.error(`ObjectForm error: object has no field ${fieldName}`, this)\n                        throw new Error(`ObjectForm error: object has no field ${fieldName}`)\n                    }\n                }\n\n                // move all values from inputs to obj\n                for (let fieldName of Object.keys(inputs)) {\n                    this.obj[fieldName] = inputs[fieldName].value\n                }\n                const response = await this.obj.save()\n                if (onSubmitted)\n                    onSubmitted(response)\n            },\n            onCancelled\n        )\n    }\n}\n"],"names":["makeObservable","observable","action","runInAction","autorun","reaction","_","observe","computed","intercept","extendObservable"],"mappings":"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"}